ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u, 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 38B5     		push	{r3, r4, r5, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 3, -16
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 5, -8
  33              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****         };
 136:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 137:.\Generated_Source\PSoC4/ADC.c **** 
 138:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 4


 139:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 140:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  34              		.loc 1 140 0
  35 0002 0E20     		mov	r0, #14
  36 0004 0321     		mov	r1, #3
  37 0006 FFF7FEFF 		bl	CyIntSetPriority
  38              	.LVL0:
 141:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  39              		.loc 1 141 0
  40 000a 2349     		ldr	r1, .L5
  41 000c 0E20     		mov	r0, #14
  42 000e FFF7FEFF 		bl	CyIntSetVector
  43              	.LVL1:
 142:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 143:.\Generated_Source\PSoC4/ADC.c **** 
 144:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 145:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  44              		.loc 1 145 0
  45 0012 224B     		ldr	r3, .L5+4
  46 0014 0322     		mov	r2, #3
  47 0016 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  48              		.loc 1 146 0
  49 0018 214A     		ldr	r2, .L5+8
 147:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 148:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 148 0
  51 001a 224B     		ldr	r3, .L5+12
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  52              		.loc 1 146 0
  53 001c 1168     		ldr	r1, [r2]
  54              		.loc 1 148 0
  55 001e 1B68     		ldr	r3, [r3]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  56              		.loc 1 146 0
  57 0020 002B     		cmp	r3, #0
  58 0022 01DA     		bge	.L3
  59 0024 204B     		ldr	r3, .L5+16
  60 0026 00E0     		b	.L2
  61              	.L3:
  62 0028 204B     		ldr	r3, .L5+20
  63              	.L2:
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  64              		.loc 1 146 0 is_stmt 0 discriminator 3
  65 002a 0B43     		orr	r3, r1
  66 002c 1360     		str	r3, [r2]
 149:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  67              		.loc 1 150 0 is_stmt 1 discriminator 3
  68 002e 204A     		ldr	r2, .L5+24
  69 0030 204B     		ldr	r3, .L5+28
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 153:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  70              		.loc 1 153 0 discriminator 3
  71 0032 2149     		ldr	r1, .L5+32
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 5


  72              		.loc 1 150 0 discriminator 3
  73 0034 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  74              		.loc 1 151 0 discriminator 3
  75 0036 214A     		ldr	r2, .L5+36
  76 0038 214B     		ldr	r3, .L5+40
 154:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 155:.\Generated_Source\PSoC4/ADC.c ****     
 156:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 157:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 158:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 159:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 160:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 161:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 162:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 163:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 164:.\Generated_Source\PSoC4/ADC.c **** 
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 168:.\Generated_Source\PSoC4/ADC.c **** 
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 171:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 172:.\Generated_Source\PSoC4/ADC.c **** 
 173:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 178:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 179:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 180:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 181:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 182:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 183:.\Generated_Source\PSoC4/ADC.c ****     #else
 184:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 185:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 186:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 187:.\Generated_Source\PSoC4/ADC.c ****         #else
 188:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 189:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 190:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 191:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 192:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 193:.\Generated_Source\PSoC4/ADC.c ****     
 194:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 197:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 198:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 199:.\Generated_Source\PSoC4/ADC.c **** 
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 201:.\Generated_Source\PSoC4/ADC.c ****     {
 202:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 203:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 204:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 6


 205:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 206:.\Generated_Source\PSoC4/ADC.c ****         
 207:.\Generated_Source\PSoC4/ADC.c ****         
 208:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 209:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 210:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 211:.\Generated_Source\PSoC4/ADC.c ****         */
 212:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 213:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 214:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 215:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 218:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 219:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 220:.\Generated_Source\PSoC4/ADC.c ****         {
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
  77              		.loc 1 221 0 discriminator 3
  78 003a 224D     		ldr	r5, .L5+44
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  79              		.loc 1 151 0 discriminator 3
  80 003c 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  81              		.loc 1 152 0 discriminator 3
  82 003e 224A     		ldr	r2, .L5+48
  83 0040 0023     		mov	r3, #0
  84 0042 1360     		str	r3, [r2]
 153:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  85              		.loc 1 153 0 discriminator 3
  86 0044 214A     		ldr	r2, .L5+52
 222:.\Generated_Source\PSoC4/ADC.c **** 
 223:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 224:.\Generated_Source\PSoC4/ADC.c ****             {
 225:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 226:.\Generated_Source\PSoC4/ADC.c ****             }
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 229:.\Generated_Source\PSoC4/ADC.c ****             {
 230:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 231:.\Generated_Source\PSoC4/ADC.c ****             }
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 234:.\Generated_Source\PSoC4/ADC.c ****             else
 235:.\Generated_Source\PSoC4/ADC.c ****             {
 236:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 239:.\Generated_Source\PSoC4/ADC.c ****                 {
 240:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 241:.\Generated_Source\PSoC4/ADC.c ****                 }
 242:.\Generated_Source\PSoC4/ADC.c **** 
 243:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 244:.\Generated_Source\PSoC4/ADC.c ****                 {
 245:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 246:.\Generated_Source\PSoC4/ADC.c ****                 }
 247:.\Generated_Source\PSoC4/ADC.c ****             }
 248:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 7


 249:.\Generated_Source\PSoC4/ADC.c **** 
 250:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 251:.\Generated_Source\PSoC4/ADC.c ****         {
 252:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 253:.\Generated_Source\PSoC4/ADC.c ****         }
 254:.\Generated_Source\PSoC4/ADC.c ****         else
 255:.\Generated_Source\PSoC4/ADC.c ****         {
 256:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 257:.\Generated_Source\PSoC4/ADC.c ****         }
 258:.\Generated_Source\PSoC4/ADC.c **** 
 259:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 260:.\Generated_Source\PSoC4/ADC.c ****         {
 261:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 262:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 263:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 264:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 265:.\Generated_Source\PSoC4/ADC.c ****             #else
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 267:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 268:.\Generated_Source\PSoC4/ADC.c ****         }
 269:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 270:.\Generated_Source\PSoC4/ADC.c ****         {
 271:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 272:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 273:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 274:.\Generated_Source\PSoC4/ADC.c ****             #else
 275:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 276:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 277:.\Generated_Source\PSoC4/ADC.c ****         }
 278:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 280:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 281:.\Generated_Source\PSoC4/ADC.c ****     }
 282:.\Generated_Source\PSoC4/ADC.c **** }
  87              		.loc 1 282 0 discriminator 3
  88              		@ sp needed
 153:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  89              		.loc 1 153 0 discriminator 3
  90 0046 0A60     		str	r2, [r1]
 154:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  91              		.loc 1 154 0 discriminator 3
  92 0048 2149     		ldr	r1, .L5+56
  93 004a 0A60     		str	r2, [r1]
 158:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  94              		.loc 1 158 0 discriminator 3
  95 004c 214A     		ldr	r2, .L5+60
  96 004e 8021     		mov	r1, #128
  97 0050 1068     		ldr	r0, [r2]
  98 0052 4902     		lsl	r1, r1, #9
  99 0054 0843     		orr	r0, r1
 100 0056 1060     		str	r0, [r2]
 161:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 101              		.loc 1 161 0 discriminator 3
 102 0058 1F4A     		ldr	r2, .L5+64
 103 005a 1068     		ldr	r0, [r2]
 104 005c 0143     		orr	r1, r0
 105 005e 1160     		str	r1, [r2]
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 8


 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 106              		.loc 1 165 0 discriminator 3
 107 0060 1E4A     		ldr	r2, .L5+68
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 108              		.loc 1 167 0 discriminator 3
 109 0062 1F49     		ldr	r1, .L5+72
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 110              		.loc 1 165 0 discriminator 3
 111 0064 1360     		str	r3, [r2]
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 112              		.loc 1 166 0 discriminator 3
 113 0066 1F4A     		ldr	r2, .L5+76
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 114              		.loc 1 170 0 discriminator 3
 115 0068 0220     		mov	r0, #2
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 116              		.loc 1 166 0 discriminator 3
 117 006a 1360     		str	r3, [r2]
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 118              		.loc 1 167 0 discriminator 3
 119 006c 0122     		mov	r2, #1
 120 006e 0A60     		str	r2, [r1]
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 121              		.loc 1 170 0 discriminator 3
 122 0070 1D49     		ldr	r1, .L5+80
 123 0072 0860     		str	r0, [r1]
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 124              		.loc 1 174 0 discriminator 3
 125 0074 1D49     		ldr	r1, .L5+84
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 126              		.loc 1 175 0 discriminator 3
 127 0076 1E48     		ldr	r0, .L5+88
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 128              		.loc 1 174 0 discriminator 3
 129 0078 0C68     		ldr	r4, [r1]
 130              	.LVL2:
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 131              		.loc 1 175 0 discriminator 3
 132 007a 2040     		and	r0, r4
 133              	.LVL3:
 181:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 134              		.loc 1 181 0 discriminator 3
 135 007c 1043     		orr	r0, r2
 136              	.LVL4:
 194:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 137              		.loc 1 194 0 discriminator 3
 138 007e 0860     		str	r0, [r1]
 139              	.LVL5:
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 140              		.loc 1 221 0 discriminator 3
 141 0080 1C49     		ldr	r1, .L5+92
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 142              		.loc 1 266 0 discriminator 3
 143 0082 1D4C     		ldr	r4, .L5+96
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 144              		.loc 1 221 0 discriminator 3
 145 0084 0B60     		str	r3, [r1]
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 9


 146              	.LVL6:
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 147              		.loc 1 279 0 discriminator 3
 148 0086 1D48     		ldr	r0, .L5+100
 149 0088 1D49     		ldr	r1, .L5+104
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 150              		.loc 1 266 0 discriminator 3
 151 008a 2380     		strh	r3, [r4]
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 152              		.loc 1 279 0 discriminator 3
 153 008c 0860     		str	r0, [r1]
 154              	.LVL7:
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 155              		.loc 1 221 0 discriminator 3
 156 008e 2A60     		str	r2, [r5]
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 157              		.loc 1 266 0 discriminator 3
 158 0090 6380     		strh	r3, [r4, #2]
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 159              		.loc 1 279 0 discriminator 3
 160 0092 4860     		str	r0, [r1, #4]
 161              	.LVL8:
 162              		.loc 1 282 0 discriminator 3
 163 0094 38BD     		pop	{r3, r4, r5, pc}
 164              	.L6:
 165 0096 C046     		.align	2
 166              	.L5:
 167 0098 00000000 		.word	ADC_ISR
 168 009c 20001A40 		.word	1075445792
 169 00a0 00001A40 		.word	1075445760
 170 00a4 80031A40 		.word	1075446656
 171 00a8 C0201010 		.word	269492416
 172 00ac C0200010 		.word	268443840
 173 00b0 8C000080 		.word	-2147483508
 174 00b4 04001A40 		.word	1075445764
 175 00b8 10001A40 		.word	1075445776
 176 00bc 0000FF07 		.word	134152192
 177 00c0 18001A40 		.word	1075445784
 178 00c4 84001A40 		.word	1075445892
 179 00c8 1C001A40 		.word	1075445788
 180 00cc 04000400 		.word	262148
 181 00d0 14001A40 		.word	1075445780
 182 00d4 00031A40 		.word	1075446528
 183 00d8 40031A40 		.word	1075446592
 184 00dc 28021A40 		.word	1075446312
 185 00e0 18021A40 		.word	1075446296
 186 00e4 38021A40 		.word	1075446328
 187 00e8 000F1A40 		.word	1075449600
 188 00ec 30001A40 		.word	1075445808
 189 00f0 FFFFFFDF 		.word	-536870913
 190 00f4 80001A40 		.word	1075445888
 191 00f8 00000000 		.word	ADC_offset
 192 00fc 204E0000 		.word	20000
 193 0100 00000000 		.word	ADC_countsPer10Volt
 194              		.cfi_endproc
 195              	.LFE1:
 196              		.size	ADC_Init, .-ADC_Init
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 10


 197              		.section	.text.ADC_Enable,"ax",%progbits
 198              		.align	1
 199              		.global	ADC_Enable
 200              		.code	16
 201              		.thumb_func
 202              		.type	ADC_Enable, %function
 203              	ADC_Enable:
 204              	.LFB2:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 285:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 286:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 287:.\Generated_Source\PSoC4/ADC.c **** *
 288:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 289:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 290:.\Generated_Source\PSoC4/ADC.c **** *
 291:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 292:.\Generated_Source\PSoC4/ADC.c **** *  None.
 293:.\Generated_Source\PSoC4/ADC.c **** *
 294:.\Generated_Source\PSoC4/ADC.c **** * Return:
 295:.\Generated_Source\PSoC4/ADC.c **** *  None.
 296:.\Generated_Source\PSoC4/ADC.c **** *
 297:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 298:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 299:.\Generated_Source\PSoC4/ADC.c **** {
 205              		.loc 1 299 0
 206              		.cfi_startproc
 207 0000 08B5     		push	{r3, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 300:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 211              		.loc 1 300 0
 212 0002 064B     		ldr	r3, .L9
 213 0004 1A68     		ldr	r2, [r3]
 214 0006 002A     		cmp	r2, #0
 215 0008 07DB     		blt	.L7
 301:.\Generated_Source\PSoC4/ADC.c ****     {
 302:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4)
 303:.\Generated_Source\PSoC4/ADC.c **** 
 304:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 305:.\Generated_Source\PSoC4/ADC.c ****             {
 306:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 307:.\Generated_Source\PSoC4/ADC.c ****             }
 308:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4) */
 309:.\Generated_Source\PSoC4/ADC.c ****         
 310:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 216              		.loc 1 310 0
 217 000a 1968     		ldr	r1, [r3]
 218 000c 8022     		mov	r2, #128
 219 000e 1206     		lsl	r2, r2, #24
 220 0010 0A43     		orr	r2, r1
 221 0012 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/ADC.c ****         
 312:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 313:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 222              		.loc 1 313 0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 11


 223 0014 0A20     		mov	r0, #10
 224 0016 FFF7FEFF 		bl	CyDelayUs
 225              	.LVL9:
 226              	.L7:
 314:.\Generated_Source\PSoC4/ADC.c ****     }
 315:.\Generated_Source\PSoC4/ADC.c **** }
 227              		.loc 1 315 0
 228              		@ sp needed
 229 001a 08BD     		pop	{r3, pc}
 230              	.L10:
 231              		.align	2
 232              	.L9:
 233 001c 00001A40 		.word	1075445760
 234              		.cfi_endproc
 235              	.LFE2:
 236              		.size	ADC_Enable, .-ADC_Enable
 237              		.section	.text.ADC_Start,"ax",%progbits
 238              		.align	1
 239              		.global	ADC_Start
 240              		.code	16
 241              		.thumb_func
 242              		.type	ADC_Start, %function
 243              	ADC_Start:
 244              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC.c **** {
 245              		.loc 1 64 0
 246              		.cfi_startproc
 247 0000 10B5     		push	{r4, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
 251              		.loc 1 66 0
 252 0002 054C     		ldr	r4, .L13
 253 0004 2378     		ldrb	r3, [r4]
 254 0006 002B     		cmp	r3, #0
 255 0008 03D1     		bne	.L12
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 256              		.loc 1 68 0
 257 000a FFF7FEFF 		bl	ADC_Init
 258              	.LVL10:
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 259              		.loc 1 69 0
 260 000e 0123     		mov	r3, #1
 261 0010 2370     		strb	r3, [r4]
 262              	.L12:
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 263              		.loc 1 71 0
 264 0012 FFF7FEFF 		bl	ADC_Enable
 265              	.LVL11:
  72:.\Generated_Source\PSoC4/ADC.c **** }
 266              		.loc 1 72 0
 267              		@ sp needed
 268 0016 10BD     		pop	{r4, pc}
 269              	.L14:
 270              		.align	2
 271              	.L13:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 12


 272 0018 00000000 		.word	.LANCHOR0
 273              		.cfi_endproc
 274              	.LFE0:
 275              		.size	ADC_Start, .-ADC_Start
 276              		.section	.text.ADC_Stop,"ax",%progbits
 277              		.align	1
 278              		.global	ADC_Stop
 279              		.code	16
 280              		.thumb_func
 281              		.type	ADC_Stop, %function
 282              	ADC_Stop:
 283              	.LFB3:
 316:.\Generated_Source\PSoC4/ADC.c **** 
 317:.\Generated_Source\PSoC4/ADC.c **** 
 318:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 320:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 323:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 324:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** * Return:
 330:.\Generated_Source\PSoC4/ADC.c **** *  None.
 331:.\Generated_Source\PSoC4/ADC.c **** *
 332:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 334:.\Generated_Source\PSoC4/ADC.c **** {
 284              		.loc 1 334 0
 285              		.cfi_startproc
 335:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 286              		.loc 1 335 0
 287 0000 024B     		ldr	r3, .L16
 336:.\Generated_Source\PSoC4/ADC.c **** }
 288              		.loc 1 336 0
 289              		@ sp needed
 335:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 290              		.loc 1 335 0
 291 0002 1A68     		ldr	r2, [r3]
 292 0004 5200     		lsl	r2, r2, #1
 293 0006 5208     		lsr	r2, r2, #1
 294 0008 1A60     		str	r2, [r3]
 295              		.loc 1 336 0
 296 000a 7047     		bx	lr
 297              	.L17:
 298              		.align	2
 299              	.L16:
 300 000c 00001A40 		.word	1075445760
 301              		.cfi_endproc
 302              	.LFE3:
 303              		.size	ADC_Stop, .-ADC_Stop
 304              		.section	.text.ADC_StartConvert,"ax",%progbits
 305              		.align	1
 306              		.global	ADC_StartConvert
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 13


 307              		.code	16
 308              		.thumb_func
 309              		.type	ADC_StartConvert, %function
 310              	ADC_StartConvert:
 311              	.LFB4:
 337:.\Generated_Source\PSoC4/ADC.c **** 
 338:.\Generated_Source\PSoC4/ADC.c **** 
 339:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 341:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/ADC.c **** *
 343:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 344:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 345:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 346:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 347:.\Generated_Source\PSoC4/ADC.c **** *
 348:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 349:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 350:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 351:.\Generated_Source\PSoC4/ADC.c **** *
 352:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 353:.\Generated_Source\PSoC4/ADC.c **** *  None.
 354:.\Generated_Source\PSoC4/ADC.c **** *
 355:.\Generated_Source\PSoC4/ADC.c **** * Return:
 356:.\Generated_Source\PSoC4/ADC.c **** *  None.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 359:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 360:.\Generated_Source\PSoC4/ADC.c **** {
 312              		.loc 1 360 0
 313              		.cfi_startproc
 361:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 362:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 314              		.loc 1 362 0
 315 0000 034B     		ldr	r3, .L19
 316 0002 8022     		mov	r2, #128
 317 0004 1968     		ldr	r1, [r3]
 318 0006 5202     		lsl	r2, r2, #9
 319 0008 0A43     		orr	r2, r1
 320 000a 1A60     		str	r2, [r3]
 363:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 364:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 365:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 366:.\Generated_Source\PSoC4/ADC.c **** 
 367:.\Generated_Source\PSoC4/ADC.c **** }
 321              		.loc 1 367 0
 322              		@ sp needed
 323 000c 7047     		bx	lr
 324              	.L20:
 325 000e C046     		.align	2
 326              	.L19:
 327 0010 04001A40 		.word	1075445764
 328              		.cfi_endproc
 329              	.LFE4:
 330              		.size	ADC_StartConvert, .-ADC_StartConvert
 331              		.section	.text.ADC_StopConvert,"ax",%progbits
 332              		.align	1
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 14


 333              		.global	ADC_StopConvert
 334              		.code	16
 335              		.thumb_func
 336              		.type	ADC_StopConvert, %function
 337              	ADC_StopConvert:
 338              	.LFB5:
 368:.\Generated_Source\PSoC4/ADC.c **** 
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 372:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/ADC.c **** *
 374:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 375:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 376:.\Generated_Source\PSoC4/ADC.c **** *
 377:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 378:.\Generated_Source\PSoC4/ADC.c **** *  None.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  None.
 382:.\Generated_Source\PSoC4/ADC.c **** *
 383:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 384:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 385:.\Generated_Source\PSoC4/ADC.c **** {
 339              		.loc 1 385 0
 340              		.cfi_startproc
 386:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 387:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 341              		.loc 1 387 0
 342 0000 024B     		ldr	r3, .L22
 343 0002 034A     		ldr	r2, .L22+4
 344 0004 1968     		ldr	r1, [r3]
 388:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 389:.\Generated_Source\PSoC4/ADC.c **** }
 345              		.loc 1 389 0
 346              		@ sp needed
 387:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 347              		.loc 1 387 0
 348 0006 0A40     		and	r2, r1
 349 0008 1A60     		str	r2, [r3]
 350              		.loc 1 389 0
 351 000a 7047     		bx	lr
 352              	.L23:
 353              		.align	2
 354              	.L22:
 355 000c 04001A40 		.word	1075445764
 356 0010 FFFFFEFF 		.word	-65537
 357              		.cfi_endproc
 358              	.LFE5:
 359              		.size	ADC_StopConvert, .-ADC_StopConvert
 360              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 361              		.align	1
 362              		.global	ADC_IsEndConversion
 363              		.code	16
 364              		.thumb_func
 365              		.type	ADC_IsEndConversion, %function
 366              	ADC_IsEndConversion:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 15


 367              	.LFB6:
 390:.\Generated_Source\PSoC4/ADC.c **** 
 391:.\Generated_Source\PSoC4/ADC.c **** 
 392:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 393:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 394:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 395:.\Generated_Source\PSoC4/ADC.c **** *
 396:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 397:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 398:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 399:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 400:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 401:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 402:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 403:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 404:.\Generated_Source\PSoC4/ADC.c **** *
 405:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 406:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 407:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 408:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 409:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 410:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 411:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 412:.\Generated_Source\PSoC4/ADC.c **** *
 413:.\Generated_Source\PSoC4/ADC.c **** * Return:
 414:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 415:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 416:.\Generated_Source\PSoC4/ADC.c **** *
 417:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 418:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 419:.\Generated_Source\PSoC4/ADC.c **** {
 368              		.loc 1 419 0
 369              		.cfi_startproc
 370              	.LVL12:
 371              		.loc 1 419 0
 372 0000 011C     		mov	r1, r0
 420:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 373              		.loc 1 420 0
 374 0002 0020     		mov	r0, #0
 375              	.LVL13:
 421:.\Generated_Source\PSoC4/ADC.c **** 
 422:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 376              		.loc 1 422 0
 377 0004 8B07     		lsl	r3, r1, #30
 378 0006 09D0     		beq	.L30
 379              	.LVL14:
 380              	.L27:
 423:.\Generated_Source\PSoC4/ADC.c ****     {
 424:.\Generated_Source\PSoC4/ADC.c ****         do
 425:.\Generated_Source\PSoC4/ADC.c ****         {
 426:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 381              		.loc 1 426 0
 382 0008 054A     		ldr	r2, .L34
 383 000a 0123     		mov	r3, #1
 384 000c 1068     		ldr	r0, [r2]
 385 000e 1840     		and	r0, r3
 386              	.LVL15:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 16


 427:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 387              		.loc 1 427 0
 388 0010 02D1     		bne	.L26
 389              		.loc 1 427 0 is_stmt 0 discriminator 1
 390 0012 8B07     		lsl	r3, r1, #30
 391 0014 F8D4     		bmi	.L27
 392 0016 01E0     		b	.L30
 393              	.L26:
 428:.\Generated_Source\PSoC4/ADC.c **** 
 429:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 430:.\Generated_Source\PSoC4/ADC.c ****         {
 431:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 432:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 394              		.loc 1 432 0 is_stmt 1
 395 0018 1360     		str	r3, [r2]
 396 001a 181C     		mov	r0, r3
 397              	.LVL16:
 398              	.L30:
 433:.\Generated_Source\PSoC4/ADC.c ****         }
 434:.\Generated_Source\PSoC4/ADC.c ****     }
 435:.\Generated_Source\PSoC4/ADC.c **** 
 436:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 437:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 438:.\Generated_Source\PSoC4/ADC.c ****         {
 439:.\Generated_Source\PSoC4/ADC.c ****             do
 440:.\Generated_Source\PSoC4/ADC.c ****             {
 441:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 442:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 443:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 444:.\Generated_Source\PSoC4/ADC.c **** 
 445:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 446:.\Generated_Source\PSoC4/ADC.c ****             {
 447:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 448:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 449:.\Generated_Source\PSoC4/ADC.c ****             }
 450:.\Generated_Source\PSoC4/ADC.c ****         }
 451:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 452:.\Generated_Source\PSoC4/ADC.c **** 
 453:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 454:.\Generated_Source\PSoC4/ADC.c **** }
 399              		.loc 1 454 0
 400              		@ sp needed
 401 001c 7047     		bx	lr
 402              	.L35:
 403 001e C046     		.align	2
 404              	.L34:
 405 0020 10021A40 		.word	1075446288
 406              		.cfi_endproc
 407              	.LFE6:
 408              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 409              		.section	.text.ADC_GetResult16,"ax",%progbits
 410              		.align	1
 411              		.global	ADC_GetResult16
 412              		.code	16
 413              		.thumb_func
 414              		.type	ADC_GetResult16, %function
 415              	ADC_GetResult16:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 17


 416              	.LFB7:
 455:.\Generated_Source\PSoC4/ADC.c **** 
 456:.\Generated_Source\PSoC4/ADC.c **** 
 457:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 458:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 459:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 460:.\Generated_Source\PSoC4/ADC.c **** *
 461:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 462:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 463:.\Generated_Source\PSoC4/ADC.c **** *
 464:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 465:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 466:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Return:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 472:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 473:.\Generated_Source\PSoC4/ADC.c **** {
 417              		.loc 1 473 0
 418              		.cfi_startproc
 419              	.LVL17:
 474:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 475:.\Generated_Source\PSoC4/ADC.c **** 
 476:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 477:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 478:.\Generated_Source\PSoC4/ADC.c **** 
 479:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 480:.\Generated_Source\PSoC4/ADC.c ****     {
 481:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 482:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 483:.\Generated_Source\PSoC4/ADC.c ****     }
 484:.\Generated_Source\PSoC4/ADC.c ****     else
 485:.\Generated_Source\PSoC4/ADC.c ****     {
 486:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 487:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 488:.\Generated_Source\PSoC4/ADC.c ****         #else
 489:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 420              		.loc 1 489 0
 421 0000 0023     		mov	r3, #0
 479:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 422              		.loc 1 479 0
 423 0002 0128     		cmp	r0, #1
 424 0004 04D8     		bhi	.L37
 481:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 425              		.loc 1 481 0
 426 0006 034B     		ldr	r3, .L39
 427 0008 8000     		lsl	r0, r0, #2
 428              	.LVL18:
 429 000a C018     		add	r0, r0, r3
 430 000c 0368     		ldr	r3, [r0]
 431 000e 9BB2     		uxth	r3, r3
 432              	.LVL19:
 433              	.L37:
 490:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 491:.\Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 18


 492:.\Generated_Source\PSoC4/ADC.c **** 
 493:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 434              		.loc 1 493 0
 435 0010 18B2     		sxth	r0, r3
 494:.\Generated_Source\PSoC4/ADC.c **** }
 436              		.loc 1 494 0
 437              		@ sp needed
 438 0012 7047     		bx	lr
 439              	.L40:
 440              		.align	2
 441              	.L39:
 442 0014 80011A40 		.word	1075446144
 443              		.cfi_endproc
 444              	.LFE7:
 445              		.size	ADC_GetResult16, .-ADC_GetResult16
 446              		.section	.text.ADC_SetChanMask,"ax",%progbits
 447              		.align	1
 448              		.global	ADC_SetChanMask
 449              		.code	16
 450              		.thumb_func
 451              		.type	ADC_SetChanMask, %function
 452              	ADC_SetChanMask:
 453              	.LFB8:
 495:.\Generated_Source\PSoC4/ADC.c **** 
 496:.\Generated_Source\PSoC4/ADC.c **** 
 497:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 498:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 499:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 500:.\Generated_Source\PSoC4/ADC.c **** *
 501:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 502:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 503:.\Generated_Source\PSoC4/ADC.c **** *
 504:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 505:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 506:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 507:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 508:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 509:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 510:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 511:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 512:.\Generated_Source\PSoC4/ADC.c **** *
 513:.\Generated_Source\PSoC4/ADC.c **** * Return:
 514:.\Generated_Source\PSoC4/ADC.c **** *  None.
 515:.\Generated_Source\PSoC4/ADC.c **** *
 516:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 517:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 518:.\Generated_Source\PSoC4/ADC.c **** {
 454              		.loc 1 518 0
 455              		.cfi_startproc
 456              	.LVL20:
 519:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 457              		.loc 1 519 0
 458 0000 0323     		mov	r3, #3
 459 0002 1840     		and	r0, r3
 460              	.LVL21:
 461 0004 014B     		ldr	r3, .L42
 520:.\Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 19


 462              		.loc 1 520 0
 463              		@ sp needed
 519:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 464              		.loc 1 519 0
 465 0006 1860     		str	r0, [r3]
 466              		.loc 1 520 0
 467 0008 7047     		bx	lr
 468              	.L43:
 469 000a C046     		.align	2
 470              	.L42:
 471 000c 20001A40 		.word	1075445792
 472              		.cfi_endproc
 473              	.LFE8:
 474              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 475              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 476              		.align	1
 477              		.global	ADC_SetLowLimit
 478              		.code	16
 479              		.thumb_func
 480              		.type	ADC_SetLowLimit, %function
 481              	ADC_SetLowLimit:
 482              	.LFB9:
 521:.\Generated_Source\PSoC4/ADC.c **** 
 522:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 523:.\Generated_Source\PSoC4/ADC.c **** 
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 526:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 527:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 528:.\Generated_Source\PSoC4/ADC.c ****     *
 529:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 530:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 531:.\Generated_Source\PSoC4/ADC.c ****     *
 532:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 533:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 534:.\Generated_Source\PSoC4/ADC.c ****     *
 535:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 536:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 537:.\Generated_Source\PSoC4/ADC.c ****     *
 538:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 539:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 540:.\Generated_Source\PSoC4/ADC.c ****     {
 541:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 542:.\Generated_Source\PSoC4/ADC.c ****     }
 543:.\Generated_Source\PSoC4/ADC.c **** 
 544:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 545:.\Generated_Source\PSoC4/ADC.c **** 
 546:.\Generated_Source\PSoC4/ADC.c **** 
 547:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 548:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 549:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 550:.\Generated_Source\PSoC4/ADC.c **** *
 551:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 552:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 553:.\Generated_Source\PSoC4/ADC.c **** *
 554:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 555:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 20


 556:.\Generated_Source\PSoC4/ADC.c **** *
 557:.\Generated_Source\PSoC4/ADC.c **** * Return:
 558:.\Generated_Source\PSoC4/ADC.c **** *  None.
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 561:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 562:.\Generated_Source\PSoC4/ADC.c **** {
 483              		.loc 1 562 0
 484              		.cfi_startproc
 485              	.LVL22:
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 486              		.loc 1 563 0
 487 0000 044B     		ldr	r3, .L45
 564:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 488              		.loc 1 564 0
 489 0002 80B2     		uxth	r0, r0
 490              	.LVL23:
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 491              		.loc 1 563 0
 492 0004 1A68     		ldr	r2, [r3]
 565:.\Generated_Source\PSoC4/ADC.c **** }
 493              		.loc 1 565 0
 494              		@ sp needed
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 495              		.loc 1 563 0
 496 0006 120C     		lsr	r2, r2, #16
 497 0008 1204     		lsl	r2, r2, #16
 498 000a 1A60     		str	r2, [r3]
 564:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 499              		.loc 1 564 0
 500 000c 1A68     		ldr	r2, [r3]
 501 000e 1043     		orr	r0, r2
 502 0010 1860     		str	r0, [r3]
 503              		.loc 1 565 0
 504 0012 7047     		bx	lr
 505              	.L46:
 506              		.align	2
 507              	.L45:
 508 0014 18001A40 		.word	1075445784
 509              		.cfi_endproc
 510              	.LFE9:
 511              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 512              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 513              		.align	1
 514              		.global	ADC_SetHighLimit
 515              		.code	16
 516              		.thumb_func
 517              		.type	ADC_SetHighLimit, %function
 518              	ADC_SetHighLimit:
 519              	.LFB10:
 566:.\Generated_Source\PSoC4/ADC.c **** 
 567:.\Generated_Source\PSoC4/ADC.c **** 
 568:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 570:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 21


 573:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 574:.\Generated_Source\PSoC4/ADC.c **** *
 575:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 576:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 577:.\Generated_Source\PSoC4/ADC.c **** *
 578:.\Generated_Source\PSoC4/ADC.c **** * Return:
 579:.\Generated_Source\PSoC4/ADC.c **** *  None.
 580:.\Generated_Source\PSoC4/ADC.c **** *
 581:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 582:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 583:.\Generated_Source\PSoC4/ADC.c **** {
 520              		.loc 1 583 0
 521              		.cfi_startproc
 522              	.LVL24:
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 523              		.loc 1 584 0
 524 0000 044B     		ldr	r3, .L48
 585:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 525              		.loc 1 585 0
 526 0002 0004     		lsl	r0, r0, #16
 527              	.LVL25:
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 528              		.loc 1 584 0
 529 0004 1A68     		ldr	r2, [r3]
 586:.\Generated_Source\PSoC4/ADC.c **** }
 530              		.loc 1 586 0
 531              		@ sp needed
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 532              		.loc 1 584 0
 533 0006 92B2     		uxth	r2, r2
 534 0008 1A60     		str	r2, [r3]
 585:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 535              		.loc 1 585 0
 536 000a 1A68     		ldr	r2, [r3]
 537 000c 1043     		orr	r0, r2
 538 000e 1860     		str	r0, [r3]
 539              		.loc 1 586 0
 540 0010 7047     		bx	lr
 541              	.L49:
 542 0012 C046     		.align	2
 543              	.L48:
 544 0014 18001A40 		.word	1075445784
 545              		.cfi_endproc
 546              	.LFE10:
 547              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 548              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 549              		.align	1
 550              		.global	ADC_SetLimitMask
 551              		.code	16
 552              		.thumb_func
 553              		.type	ADC_SetLimitMask, %function
 554              	ADC_SetLimitMask:
 555              	.LFB11:
 587:.\Generated_Source\PSoC4/ADC.c **** 
 588:.\Generated_Source\PSoC4/ADC.c **** 
 589:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 590:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 22


 591:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 592:.\Generated_Source\PSoC4/ADC.c **** *
 593:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 594:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 595:.\Generated_Source\PSoC4/ADC.c **** *
 596:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 597:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 598:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 599:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 600:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 601:.\Generated_Source\PSoC4/ADC.c **** *
 602:.\Generated_Source\PSoC4/ADC.c **** * Return:
 603:.\Generated_Source\PSoC4/ADC.c **** *  None.
 604:.\Generated_Source\PSoC4/ADC.c **** *
 605:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 606:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 607:.\Generated_Source\PSoC4/ADC.c **** {
 556              		.loc 1 607 0
 557              		.cfi_startproc
 558              	.LVL26:
 608:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 559              		.loc 1 608 0
 560 0000 0323     		mov	r3, #3
 561 0002 1840     		and	r0, r3
 562              	.LVL27:
 563 0004 014B     		ldr	r3, .L51
 609:.\Generated_Source\PSoC4/ADC.c **** }
 564              		.loc 1 609 0
 565              		@ sp needed
 608:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 566              		.loc 1 608 0
 567 0006 1860     		str	r0, [r3]
 568              		.loc 1 609 0
 569 0008 7047     		bx	lr
 570              	.L52:
 571 000a C046     		.align	2
 572              	.L51:
 573 000c 38021A40 		.word	1075446328
 574              		.cfi_endproc
 575              	.LFE11:
 576              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 577              		.section	.text.ADC_SetSatMask,"ax",%progbits
 578              		.align	1
 579              		.global	ADC_SetSatMask
 580              		.code	16
 581              		.thumb_func
 582              		.type	ADC_SetSatMask, %function
 583              	ADC_SetSatMask:
 584              	.LFB12:
 610:.\Generated_Source\PSoC4/ADC.c **** 
 611:.\Generated_Source\PSoC4/ADC.c **** 
 612:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 613:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 614:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 615:.\Generated_Source\PSoC4/ADC.c **** *
 616:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 617:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 23


 618:.\Generated_Source\PSoC4/ADC.c **** *
 619:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 620:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 621:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 622:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 623:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Return:
 626:.\Generated_Source\PSoC4/ADC.c **** *  None.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 630:.\Generated_Source\PSoC4/ADC.c **** {
 585              		.loc 1 630 0
 586              		.cfi_startproc
 587              	.LVL28:
 631:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 588              		.loc 1 631 0
 589 0000 0323     		mov	r3, #3
 590 0002 1840     		and	r0, r3
 591              	.LVL29:
 592 0004 014B     		ldr	r3, .L54
 632:.\Generated_Source\PSoC4/ADC.c **** }
 593              		.loc 1 632 0
 594              		@ sp needed
 631:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 595              		.loc 1 631 0
 596 0006 1860     		str	r0, [r3]
 597              		.loc 1 632 0
 598 0008 7047     		bx	lr
 599              	.L55:
 600 000a C046     		.align	2
 601              	.L54:
 602 000c 28021A40 		.word	1075446312
 603              		.cfi_endproc
 604              	.LFE12:
 605              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 606              		.section	.text.ADC_SetOffset,"ax",%progbits
 607              		.align	1
 608              		.global	ADC_SetOffset
 609              		.code	16
 610              		.thumb_func
 611              		.type	ADC_SetOffset, %function
 612              	ADC_SetOffset:
 613              	.LFB13:
 633:.\Generated_Source\PSoC4/ADC.c **** 
 634:.\Generated_Source\PSoC4/ADC.c **** 
 635:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 637:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/ADC.c **** *
 639:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 640:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 641:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 642:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 643:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 644:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 24


 645:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 646:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 647:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 648:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 655:.\Generated_Source\PSoC4/ADC.c **** *
 656:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 657:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 658:.\Generated_Source\PSoC4/ADC.c **** {
 614              		.loc 1 658 0
 615              		.cfi_startproc
 616              	.LVL30:
 659:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 660:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 661:.\Generated_Source\PSoC4/ADC.c **** 
 662:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 617              		.loc 1 662 0
 618 0000 014B     		ldr	r3, .L57
 619 0002 4000     		lsl	r0, r0, #1
 620              	.LVL31:
 621 0004 C152     		strh	r1, [r0, r3]
 663:.\Generated_Source\PSoC4/ADC.c **** }
 622              		.loc 1 663 0
 623              		@ sp needed
 624 0006 7047     		bx	lr
 625              	.L58:
 626              		.align	2
 627              	.L57:
 628 0008 00000000 		.word	ADC_offset
 629              		.cfi_endproc
 630              	.LFE13:
 631              		.size	ADC_SetOffset, .-ADC_SetOffset
 632              		.section	.text.ADC_SetGain,"ax",%progbits
 633              		.align	1
 634              		.global	ADC_SetGain
 635              		.code	16
 636              		.thumb_func
 637              		.type	ADC_SetGain, %function
 638              	ADC_SetGain:
 639              	.LFB14:
 664:.\Generated_Source\PSoC4/ADC.c **** 
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 668:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 669:.\Generated_Source\PSoC4/ADC.c **** *
 670:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 671:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 672:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 673:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 674:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 675:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 25


 676:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 677:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 678:.\Generated_Source\PSoC4/ADC.c **** *
 679:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 680:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 681:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 682:.\Generated_Source\PSoC4/ADC.c **** *
 683:.\Generated_Source\PSoC4/ADC.c **** * Return:
 684:.\Generated_Source\PSoC4/ADC.c **** *  None.
 685:.\Generated_Source\PSoC4/ADC.c **** *
 686:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 687:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 688:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 689:.\Generated_Source\PSoC4/ADC.c **** *
 690:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 692:.\Generated_Source\PSoC4/ADC.c **** {
 640              		.loc 1 692 0
 641              		.cfi_startproc
 642              	.LVL32:
 693:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 694:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 695:.\Generated_Source\PSoC4/ADC.c **** 
 696:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 643              		.loc 1 696 0
 644 0000 014B     		ldr	r3, .L60
 645 0002 8000     		lsl	r0, r0, #2
 646              	.LVL33:
 647 0004 C150     		str	r1, [r0, r3]
 697:.\Generated_Source\PSoC4/ADC.c **** }
 648              		.loc 1 697 0
 649              		@ sp needed
 650 0006 7047     		bx	lr
 651              	.L61:
 652              		.align	2
 653              	.L60:
 654 0008 00000000 		.word	ADC_countsPer10Volt
 655              		.cfi_endproc
 656              	.LFE14:
 657              		.size	ADC_SetGain, .-ADC_SetGain
 658              		.global	__aeabi_idiv
 659              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 660              		.align	1
 661              		.global	ADC_CountsTo_mVolts
 662              		.code	16
 663              		.thumb_func
 664              		.type	ADC_CountsTo_mVolts, %function
 665              	ADC_CountsTo_mVolts:
 666              	.LFB15:
 698:.\Generated_Source\PSoC4/ADC.c **** 
 699:.\Generated_Source\PSoC4/ADC.c **** 
 700:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 701:.\Generated_Source\PSoC4/ADC.c **** 
 702:.\Generated_Source\PSoC4/ADC.c **** 
 703:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 704:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 705:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 26


 706:.\Generated_Source\PSoC4/ADC.c ****     *
 707:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 708:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 709:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 710:.\Generated_Source\PSoC4/ADC.c ****     *
 711:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 714:.\Generated_Source\PSoC4/ADC.c ****     *
 715:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 716:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 717:.\Generated_Source\PSoC4/ADC.c ****     *
 718:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 720:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 721:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 722:.\Generated_Source\PSoC4/ADC.c ****     *
 723:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 724:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 725:.\Generated_Source\PSoC4/ADC.c ****     {
 667              		.loc 1 725 0
 668              		.cfi_startproc
 669              	.LVL34:
 726:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 729:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 732:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 733:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 734:.\Generated_Source\PSoC4/ADC.c ****             {
 735:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 736:.\Generated_Source\PSoC4/ADC.c ****             }
 737:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 738:.\Generated_Source\PSoC4/ADC.c **** 
 739:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 740:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 670              		.loc 1 740 0
 671 0000 0D4B     		ldr	r3, .L65
 672 0002 4200     		lsl	r2, r0, #1
 673 0004 D35A     		ldrh	r3, [r2, r3]
 725:.\Generated_Source\PSoC4/ADC.c ****     {
 674              		.loc 1 725 0
 675 0006 10B5     		push	{r4, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 4, -8
 678              		.cfi_offset 14, -4
 679              		.loc 1 740 0
 680 0008 C91A     		sub	r1, r1, r3
 681              	.LVL35:
 741:.\Generated_Source\PSoC4/ADC.c **** 
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 682              		.loc 1 742 0
 683 000a 0C4C     		ldr	r4, .L65+4
 740:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 684              		.loc 1 740 0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 27


 685 000c 09B2     		sxth	r1, r1
 686              	.LVL36:
 687              		.loc 1 742 0
 688 000e 4C43     		mul	r4, r1
 689 0010 0B4A     		ldr	r2, .L65+8
 690 0012 8300     		lsl	r3, r0, #2
 743:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 691              		.loc 1 743 0
 692 0014 0029     		cmp	r1, #0
 693 0016 04DD     		ble	.L63
 694              		.loc 1 743 0 is_stmt 0 discriminator 1
 695 0018 D158     		ldr	r1, [r2, r3]
 696              	.LVL37:
 697 001a C80F     		lsr	r0, r1, #31
 698              	.LVL38:
 699 001c 4018     		add	r0, r0, r1
 700 001e 4010     		asr	r0, r0, #1
 701 0020 04E0     		b	.L64
 702              	.LVL39:
 703              	.L63:
 704              		.loc 1 743 0 discriminator 2
 705 0022 D158     		ldr	r1, [r2, r3]
 706              	.LVL40:
 707 0024 C80F     		lsr	r0, r1, #31
 708              	.LVL41:
 709 0026 4018     		add	r0, r0, r1
 710 0028 4010     		asr	r0, r0, #1
 711 002a 4042     		neg	r0, r0
 712              	.L64:
 744:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 713              		.loc 1 744 0 is_stmt 1
 714 002c D158     		ldr	r1, [r2, r3]
 715              	.LVL42:
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 716              		.loc 1 742 0
 717 002e 2018     		add	r0, r4, r0
 718              	.LVL43:
 719              		.loc 1 744 0
 720 0030 FFF7FEFF 		bl	__aeabi_idiv
 721              	.LVL44:
 745:.\Generated_Source\PSoC4/ADC.c **** 
 746:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 747:.\Generated_Source\PSoC4/ADC.c ****     }
 722              		.loc 1 747 0
 723              		@ sp needed
 746:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 724              		.loc 1 746 0
 725 0034 00B2     		sxth	r0, r0
 726              		.loc 1 747 0
 727 0036 10BD     		pop	{r4, pc}
 728              	.L66:
 729              		.align	2
 730              	.L65:
 731 0038 00000000 		.word	ADC_offset
 732 003c 10270000 		.word	10000
 733 0040 00000000 		.word	ADC_countsPer10Volt
 734              		.cfi_endproc
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 28


 735              	.LFE15:
 736              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 737              		.global	__aeabi_lmul
 738              		.global	__aeabi_ldivmod
 739              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 740              		.align	1
 741              		.global	ADC_CountsTo_uVolts
 742              		.code	16
 743              		.thumb_func
 744              		.type	ADC_CountsTo_uVolts, %function
 745              	ADC_CountsTo_uVolts:
 746              	.LFB16:
 748:.\Generated_Source\PSoC4/ADC.c **** 
 749:.\Generated_Source\PSoC4/ADC.c **** 
 750:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 751:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 752:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 753:.\Generated_Source\PSoC4/ADC.c ****     *
 754:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 755:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 756:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 757:.\Generated_Source\PSoC4/ADC.c ****     *
 758:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 759:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 760:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 761:.\Generated_Source\PSoC4/ADC.c ****     *
 762:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 763:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 764:.\Generated_Source\PSoC4/ADC.c ****     *
 765:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 766:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 767:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 768:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 769:.\Generated_Source\PSoC4/ADC.c ****     *
 770:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 771:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 772:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 773:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 774:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 775:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 778:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 779:.\Generated_Source\PSoC4/ADC.c ****     {
 747              		.loc 1 779 0
 748              		.cfi_startproc
 749              	.LVL45:
 780:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 783:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 784:.\Generated_Source\PSoC4/ADC.c **** 
 785:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 786:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 787:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 788:.\Generated_Source\PSoC4/ADC.c ****             {
 789:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 29


 790:.\Generated_Source\PSoC4/ADC.c ****             }
 791:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 792:.\Generated_Source\PSoC4/ADC.c **** 
 793:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 794:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 750              		.loc 1 794 0
 751 0000 0B4B     		ldr	r3, .L68+8
 752 0002 4200     		lsl	r2, r0, #1
 753 0004 D35A     		ldrh	r3, [r2, r3]
 779:.\Generated_Source\PSoC4/ADC.c ****     {
 754              		.loc 1 779 0
 755 0006 10B5     		push	{r4, lr}
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 4, -8
 758              		.cfi_offset 14, -4
 759              		.loc 1 794 0
 760 0008 C91A     		sub	r1, r1, r3
 761              	.LVL46:
 795:.\Generated_Source\PSoC4/ADC.c **** 
 796:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 762              		.loc 1 796 0
 763 000a 0A4B     		ldr	r3, .L68+12
 764 000c 8000     		lsl	r0, r0, #2
 765              	.LVL47:
 766 000e C458     		ldr	r4, [r0, r3]
 767              	.LVL48:
 768 0010 08B2     		sxth	r0, r1
 769 0012 064B     		ldr	r3, .L68+4
 770 0014 044A     		ldr	r2, .L68
 771 0016 C117     		asr	r1, r0, #31
 772              	.LVL49:
 773 0018 FFF7FEFF 		bl	__aeabi_lmul
 774              	.LVL50:
 775 001c E317     		asr	r3, r4, #31
 776 001e 221C     		mov	r2, r4
 777 0020 FFF7FEFF 		bl	__aeabi_ldivmod
 778              	.LVL51:
 797:.\Generated_Source\PSoC4/ADC.c **** 
 798:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 799:.\Generated_Source\PSoC4/ADC.c ****     }
 779              		.loc 1 799 0
 780              		@ sp needed
 781 0024 10BD     		pop	{r4, pc}
 782              	.L69:
 783 0026 C046     		.align	3
 784              	.L68:
 785 0028 80969800 		.word	10000000
 786 002c 00000000 		.word	0
 787 0030 00000000 		.word	ADC_offset
 788 0034 00000000 		.word	ADC_countsPer10Volt
 789              		.cfi_endproc
 790              	.LFE16:
 791              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 792              		.global	__aeabi_i2f
 793              		.global	__aeabi_fmul
 794              		.global	__aeabi_fdiv
 795              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 30


 796              		.align	1
 797              		.global	ADC_CountsTo_Volts
 798              		.code	16
 799              		.thumb_func
 800              		.type	ADC_CountsTo_Volts, %function
 801              	ADC_CountsTo_Volts:
 802              	.LFB17:
 800:.\Generated_Source\PSoC4/ADC.c **** 
 801:.\Generated_Source\PSoC4/ADC.c **** 
 802:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 803:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 804:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 805:.\Generated_Source\PSoC4/ADC.c ****     *
 806:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 807:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 808:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 809:.\Generated_Source\PSoC4/ADC.c ****     *
 810:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 811:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 812:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 813:.\Generated_Source\PSoC4/ADC.c ****     *
 814:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 815:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 816:.\Generated_Source\PSoC4/ADC.c ****     *
 817:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 818:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 819:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 820:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 821:.\Generated_Source\PSoC4/ADC.c ****     *
 822:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 823:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 824:.\Generated_Source\PSoC4/ADC.c ****     {
 803              		.loc 1 824 0
 804              		.cfi_startproc
 805              	.LVL52:
 806 0000 38B5     		push	{r3, r4, r5, lr}
 807              		.cfi_def_cfa_offset 16
 808              		.cfi_offset 3, -16
 809              		.cfi_offset 4, -12
 810              		.cfi_offset 5, -8
 811              		.cfi_offset 14, -4
 825:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 826:.\Generated_Source\PSoC4/ADC.c **** 
 827:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 828:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 831:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 832:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 833:.\Generated_Source\PSoC4/ADC.c ****             {
 834:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 835:.\Generated_Source\PSoC4/ADC.c ****             }
 836:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 837:.\Generated_Source\PSoC4/ADC.c **** 
 838:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 839:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 812              		.loc 1 839 0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 31


 813 0002 0B4B     		ldr	r3, .L71
 814 0004 4200     		lsl	r2, r0, #1
 815 0006 D35A     		ldrh	r3, [r2, r3]
 840:.\Generated_Source\PSoC4/ADC.c **** 
 841:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 816              		.loc 1 841 0
 817 0008 8000     		lsl	r0, r0, #2
 818              	.LVL53:
 839:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 819              		.loc 1 839 0
 820 000a C91A     		sub	r1, r1, r3
 821              	.LVL54:
 822              		.loc 1 841 0
 823 000c 094B     		ldr	r3, .L71+4
 842:.\Generated_Source\PSoC4/ADC.c **** 
 843:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 844:.\Generated_Source\PSoC4/ADC.c ****     }
 824              		.loc 1 844 0
 825              		@ sp needed
 841:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 826              		.loc 1 841 0
 827 000e C558     		ldr	r5, [r0, r3]
 828              	.LVL55:
 829 0010 08B2     		sxth	r0, r1
 830 0012 FFF7FEFF 		bl	__aeabi_i2f
 831              	.LVL56:
 832 0016 0849     		ldr	r1, .L71+8
 833 0018 FFF7FEFF 		bl	__aeabi_fmul
 834              	.LVL57:
 835 001c 041C     		add	r4, r0, #0
 836 001e 281C     		mov	r0, r5
 837 0020 FFF7FEFF 		bl	__aeabi_i2f
 838              	.LVL58:
 839 0024 011C     		add	r1, r0, #0
 840 0026 201C     		add	r0, r4, #0
 841 0028 FFF7FEFF 		bl	__aeabi_fdiv
 842              	.LVL59:
 843              		.loc 1 844 0
 844 002c 38BD     		pop	{r3, r4, r5, pc}
 845              	.L72:
 846 002e C046     		.align	2
 847              	.L71:
 848 0030 00000000 		.word	ADC_offset
 849 0034 00000000 		.word	ADC_countsPer10Volt
 850 0038 00002041 		.word	1092616192
 851              		.cfi_endproc
 852              	.LFE17:
 853              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 854              		.comm	ADC_countsPer10Volt,8,4
 855              		.comm	ADC_offset,4,2
 856              		.global	ADC_initVar
 857              		.bss
 858              		.set	.LANCHOR0,. + 0
 859              		.type	ADC_initVar, %object
 860              		.size	ADC_initVar, 1
 861              	ADC_initVar:
 862 0000 00       		.space	1
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 32


 863              		.text
 864              	.Letext0:
 865              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 866              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 867              		.section	.debug_info,"",%progbits
 868              	.Ldebug_info0:
 869 0000 3D050000 		.4byte	0x53d
 870 0004 0400     		.2byte	0x4
 871 0006 00000000 		.4byte	.Ldebug_abbrev0
 872 000a 04       		.byte	0x4
 873 000b 01       		.uleb128 0x1
 874 000c F4020000 		.4byte	.LASF61
 875 0010 01       		.byte	0x1
 876 0011 79020000 		.4byte	.LASF62
 877 0015 29000000 		.4byte	.LASF63
 878 0019 00000000 		.4byte	.Ldebug_ranges0+0
 879 001d 00000000 		.4byte	0
 880 0021 00000000 		.4byte	.Ldebug_line0
 881 0025 02       		.uleb128 0x2
 882 0026 08       		.byte	0x8
 883 0027 07       		.byte	0x7
 884 0028 69000000 		.4byte	.LASF0
 885 002c 02       		.uleb128 0x2
 886 002d 04       		.byte	0x4
 887 002e 04       		.byte	0x4
 888 002f 45020000 		.4byte	.LASF1
 889 0033 02       		.uleb128 0x2
 890 0034 08       		.byte	0x8
 891 0035 05       		.byte	0x5
 892 0036 A5000000 		.4byte	.LASF2
 893 003a 03       		.uleb128 0x3
 894 003b 04       		.byte	0x4
 895 003c 05       		.byte	0x5
 896 003d 696E7400 		.ascii	"int\000"
 897 0041 02       		.uleb128 0x2
 898 0042 02       		.byte	0x2
 899 0043 05       		.byte	0x5
 900 0044 B1020000 		.4byte	.LASF3
 901 0048 02       		.uleb128 0x2
 902 0049 01       		.byte	0x1
 903 004a 06       		.byte	0x6
 904 004b B3000000 		.4byte	.LASF4
 905 004f 02       		.uleb128 0x2
 906 0050 01       		.byte	0x1
 907 0051 08       		.byte	0x8
 908 0052 98020000 		.4byte	.LASF5
 909 0056 02       		.uleb128 0x2
 910 0057 02       		.byte	0x2
 911 0058 07       		.byte	0x7
 912 0059 94010000 		.4byte	.LASF6
 913 005d 02       		.uleb128 0x2
 914 005e 04       		.byte	0x4
 915 005f 05       		.byte	0x5
 916 0060 D6000000 		.4byte	.LASF7
 917 0064 02       		.uleb128 0x2
 918 0065 04       		.byte	0x4
 919 0066 07       		.byte	0x7
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 33


 920 0067 63010000 		.4byte	.LASF8
 921 006b 02       		.uleb128 0x2
 922 006c 04       		.byte	0x4
 923 006d 07       		.byte	0x7
 924 006e 4F010000 		.4byte	.LASF9
 925 0072 04       		.uleb128 0x4
 926 0073 07010000 		.4byte	.LASF10
 927 0077 02       		.byte	0x2
 928 0078 B3       		.byte	0xb3
 929 0079 4F000000 		.4byte	0x4f
 930 007d 04       		.uleb128 0x4
 931 007e 00000000 		.4byte	.LASF11
 932 0082 02       		.byte	0x2
 933 0083 B4       		.byte	0xb4
 934 0084 56000000 		.4byte	0x56
 935 0088 04       		.uleb128 0x4
 936 0089 1E010000 		.4byte	.LASF12
 937 008d 02       		.byte	0x2
 938 008e B5       		.byte	0xb5
 939 008f 64000000 		.4byte	0x64
 940 0093 04       		.uleb128 0x4
 941 0094 8C030000 		.4byte	.LASF13
 942 0098 02       		.byte	0x2
 943 0099 B7       		.byte	0xb7
 944 009a 41000000 		.4byte	0x41
 945 009e 04       		.uleb128 0x4
 946 009f C6000000 		.4byte	.LASF14
 947 00a3 02       		.byte	0x2
 948 00a4 B8       		.byte	0xb8
 949 00a5 5D000000 		.4byte	0x5d
 950 00a9 04       		.uleb128 0x4
 951 00aa D3010000 		.4byte	.LASF15
 952 00ae 02       		.byte	0x2
 953 00af B9       		.byte	0xb9
 954 00b0 2C000000 		.4byte	0x2c
 955 00b4 02       		.uleb128 0x2
 956 00b5 08       		.byte	0x8
 957 00b6 04       		.byte	0x4
 958 00b7 17010000 		.4byte	.LASF16
 959 00bb 04       		.uleb128 0x4
 960 00bc 12020000 		.4byte	.LASF17
 961 00c0 02       		.byte	0x2
 962 00c1 BE       		.byte	0xbe
 963 00c2 33000000 		.4byte	0x33
 964 00c6 02       		.uleb128 0x2
 965 00c7 01       		.byte	0x1
 966 00c8 08       		.byte	0x8
 967 00c9 CF020000 		.4byte	.LASF18
 968 00cd 05       		.uleb128 0x5
 969 00ce CD010000 		.4byte	.LASF19
 970 00d2 02       		.byte	0x2
 971 00d3 5F01     		.2byte	0x15f
 972 00d5 D9000000 		.4byte	0xd9
 973 00d9 06       		.uleb128 0x6
 974 00da 88000000 		.4byte	0x88
 975 00de 05       		.uleb128 0x5
 976 00df D4020000 		.4byte	.LASF20
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 34


 977 00e3 02       		.byte	0x2
 978 00e4 6F01     		.2byte	0x16f
 979 00e6 EA000000 		.4byte	0xea
 980 00ea 07       		.uleb128 0x7
 981 00eb 04       		.byte	0x4
 982 00ec F0000000 		.4byte	0xf0
 983 00f0 08       		.uleb128 0x8
 984 00f1 02       		.uleb128 0x2
 985 00f2 04       		.byte	0x4
 986 00f3 07       		.byte	0x7
 987 00f4 DB010000 		.4byte	.LASF21
 988 00f8 09       		.uleb128 0x9
 989 00f9 60000000 		.4byte	.LASF25
 990 00fd 01       		.byte	0x1
 991 00fe 5E       		.byte	0x5e
 992 00ff 00000000 		.4byte	.LFB1
 993 0103 04010000 		.4byte	.LFE1-.LFB1
 994 0107 01       		.uleb128 0x1
 995 0108 9C       		.byte	0x9c
 996 0109 6B010000 		.4byte	0x16b
 997 010d 0A       		.uleb128 0xa
 998 010e C4020000 		.4byte	.LASF22
 999 0112 01       		.byte	0x1
 1000 0113 60       		.byte	0x60
 1001 0114 88000000 		.4byte	0x88
 1002 0118 00000000 		.4byte	.LLST0
 1003 011c 0A       		.uleb128 0xa
 1004 011d 8A010000 		.4byte	.LASF23
 1005 0121 01       		.byte	0x1
 1006 0122 61       		.byte	0x61
 1007 0123 88000000 		.4byte	0x88
 1008 0127 2C000000 		.4byte	.LLST1
 1009 012b 0B       		.uleb128 0xb
 1010 012c 0F000000 		.4byte	.LASF24
 1011 0130 01       		.byte	0x1
 1012 0131 62       		.byte	0x62
 1013 0132 9E000000 		.4byte	0x9e
 1014 0136 0010     		.2byte	0x1000
 1015 0138 0C       		.uleb128 0xc
 1016 0139 80000000 		.4byte	.LASF56
 1017 013d 01       		.byte	0x1
 1018 013e 65       		.byte	0x65
 1019 013f 7B010000 		.4byte	0x17b
 1020 0143 0D       		.uleb128 0xd
 1021 0144 0A000000 		.4byte	.LVL0
 1022 0148 03050000 		.4byte	0x503
 1023 014c 5B010000 		.4byte	0x15b
 1024 0150 0E       		.uleb128 0xe
 1025 0151 01       		.uleb128 0x1
 1026 0152 51       		.byte	0x51
 1027 0153 01       		.uleb128 0x1
 1028 0154 33       		.byte	0x33
 1029 0155 0E       		.uleb128 0xe
 1030 0156 01       		.uleb128 0x1
 1031 0157 50       		.byte	0x50
 1032 0158 01       		.uleb128 0x1
 1033 0159 3E       		.byte	0x3e
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 35


 1034 015a 00       		.byte	0
 1035 015b 0F       		.uleb128 0xf
 1036 015c 12000000 		.4byte	.LVL1
 1037 0160 19050000 		.4byte	0x519
 1038 0164 0E       		.uleb128 0xe
 1039 0165 01       		.uleb128 0x1
 1040 0166 50       		.byte	0x50
 1041 0167 01       		.uleb128 0x1
 1042 0168 3E       		.byte	0x3e
 1043 0169 00       		.byte	0
 1044 016a 00       		.byte	0
 1045 016b 10       		.uleb128 0x10
 1046 016c 72000000 		.4byte	0x72
 1047 0170 7B010000 		.4byte	0x17b
 1048 0174 11       		.uleb128 0x11
 1049 0175 F1000000 		.4byte	0xf1
 1050 0179 01       		.byte	0x1
 1051 017a 00       		.byte	0
 1052 017b 12       		.uleb128 0x12
 1053 017c 6B010000 		.4byte	0x16b
 1054 0180 13       		.uleb128 0x13
 1055 0181 81030000 		.4byte	.LASF26
 1056 0185 01       		.byte	0x1
 1057 0186 2A01     		.2byte	0x12a
 1058 0188 00000000 		.4byte	.LFB2
 1059 018c 20000000 		.4byte	.LFE2-.LFB2
 1060 0190 01       		.uleb128 0x1
 1061 0191 9C       		.byte	0x9c
 1062 0192 A6010000 		.4byte	0x1a6
 1063 0196 0F       		.uleb128 0xf
 1064 0197 1A000000 		.4byte	.LVL9
 1065 019b 33050000 		.4byte	0x533
 1066 019f 0E       		.uleb128 0xe
 1067 01a0 01       		.uleb128 0x1
 1068 01a1 50       		.byte	0x50
 1069 01a2 01       		.uleb128 0x1
 1070 01a3 3A       		.byte	0x3a
 1071 01a4 00       		.byte	0
 1072 01a5 00       		.byte	0
 1073 01a6 09       		.uleb128 0x9
 1074 01a7 CC000000 		.4byte	.LASF27
 1075 01ab 01       		.byte	0x1
 1076 01ac 3F       		.byte	0x3f
 1077 01ad 00000000 		.4byte	.LFB0
 1078 01b1 1C000000 		.4byte	.LFE0-.LFB0
 1079 01b5 01       		.uleb128 0x1
 1080 01b6 9C       		.byte	0x9c
 1081 01b7 CE010000 		.4byte	0x1ce
 1082 01bb 14       		.uleb128 0x14
 1083 01bc 0E000000 		.4byte	.LVL10
 1084 01c0 F8000000 		.4byte	0xf8
 1085 01c4 14       		.uleb128 0x14
 1086 01c5 16000000 		.4byte	.LVL11
 1087 01c9 80010000 		.4byte	0x180
 1088 01cd 00       		.byte	0
 1089 01ce 15       		.uleb128 0x15
 1090 01cf BB020000 		.4byte	.LASF28
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 36


 1091 01d3 01       		.byte	0x1
 1092 01d4 4D01     		.2byte	0x14d
 1093 01d6 00000000 		.4byte	.LFB3
 1094 01da 10000000 		.4byte	.LFE3-.LFB3
 1095 01de 01       		.uleb128 0x1
 1096 01df 9C       		.byte	0x9c
 1097 01e0 15       		.uleb128 0x15
 1098 01e1 94000000 		.4byte	.LASF29
 1099 01e5 01       		.byte	0x1
 1100 01e6 6701     		.2byte	0x167
 1101 01e8 00000000 		.4byte	.LFB4
 1102 01ec 14000000 		.4byte	.LFE4-.LFB4
 1103 01f0 01       		.uleb128 0x1
 1104 01f1 9C       		.byte	0x9c
 1105 01f2 15       		.uleb128 0x15
 1106 01f3 B6010000 		.4byte	.LASF30
 1107 01f7 01       		.byte	0x1
 1108 01f8 8001     		.2byte	0x180
 1109 01fa 00000000 		.4byte	.LFB5
 1110 01fe 14000000 		.4byte	.LFE5-.LFB5
 1111 0202 01       		.uleb128 0x1
 1112 0203 9C       		.byte	0x9c
 1113 0204 16       		.uleb128 0x16
 1114 0205 FE010000 		.4byte	.LASF32
 1115 0209 01       		.byte	0x1
 1116 020a A201     		.2byte	0x1a2
 1117 020c 88000000 		.4byte	0x88
 1118 0210 00000000 		.4byte	.LFB6
 1119 0214 24000000 		.4byte	.LFE6-.LFB6
 1120 0218 01       		.uleb128 0x1
 1121 0219 9C       		.byte	0x9c
 1122 021a 3F020000 		.4byte	0x23f
 1123 021e 17       		.uleb128 0x17
 1124 021f 36010000 		.4byte	.LASF34
 1125 0223 01       		.byte	0x1
 1126 0224 A201     		.2byte	0x1a2
 1127 0226 88000000 		.4byte	0x88
 1128 022a 62000000 		.4byte	.LLST2
 1129 022e 18       		.uleb128 0x18
 1130 022f BF000000 		.4byte	.LASF31
 1131 0233 01       		.byte	0x1
 1132 0234 A401     		.2byte	0x1a4
 1133 0236 88000000 		.4byte	0x88
 1134 023a 80000000 		.4byte	.LLST3
 1135 023e 00       		.byte	0
 1136 023f 16       		.uleb128 0x16
 1137 0240 A7030000 		.4byte	.LASF33
 1138 0244 01       		.byte	0x1
 1139 0245 D801     		.2byte	0x1d8
 1140 0247 93000000 		.4byte	0x93
 1141 024b 00000000 		.4byte	.LFB7
 1142 024f 18000000 		.4byte	.LFE7-.LFB7
 1143 0253 01       		.uleb128 0x1
 1144 0254 9C       		.byte	0x9c
 1145 0255 78020000 		.4byte	0x278
 1146 0259 17       		.uleb128 0x17
 1147 025a CA020000 		.4byte	.LASF35
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 37


 1148 025e 01       		.byte	0x1
 1149 025f D801     		.2byte	0x1d8
 1150 0261 88000000 		.4byte	0x88
 1151 0265 9F000000 		.4byte	.LLST4
 1152 0269 19       		.uleb128 0x19
 1153 026a A0030000 		.4byte	.LASF36
 1154 026e 01       		.byte	0x1
 1155 026f DA01     		.2byte	0x1da
 1156 0271 88000000 		.4byte	0x88
 1157 0275 01       		.uleb128 0x1
 1158 0276 53       		.byte	0x53
 1159 0277 00       		.byte	0
 1160 0278 13       		.uleb128 0x13
 1161 0279 29020000 		.4byte	.LASF37
 1162 027d 01       		.byte	0x1
 1163 027e 0502     		.2byte	0x205
 1164 0280 00000000 		.4byte	.LFB8
 1165 0284 10000000 		.4byte	.LFE8-.LFB8
 1166 0288 01       		.uleb128 0x1
 1167 0289 9C       		.byte	0x9c
 1168 028a 9F020000 		.4byte	0x29f
 1169 028e 17       		.uleb128 0x17
 1170 028f 25010000 		.4byte	.LASF38
 1171 0293 01       		.byte	0x1
 1172 0294 0502     		.2byte	0x205
 1173 0296 88000000 		.4byte	0x88
 1174 029a C0000000 		.4byte	.LLST5
 1175 029e 00       		.byte	0
 1176 029f 13       		.uleb128 0x13
 1177 02a0 69020000 		.4byte	.LASF39
 1178 02a4 01       		.byte	0x1
 1179 02a5 3102     		.2byte	0x231
 1180 02a7 00000000 		.4byte	.LFB9
 1181 02ab 18000000 		.4byte	.LFE9-.LFB9
 1182 02af 01       		.uleb128 0x1
 1183 02b0 9C       		.byte	0x9c
 1184 02b1 C6020000 		.4byte	0x2c6
 1185 02b5 17       		.uleb128 0x17
 1186 02b6 E4010000 		.4byte	.LASF40
 1187 02ba 01       		.byte	0x1
 1188 02bb 3102     		.2byte	0x231
 1189 02bd 88000000 		.4byte	0x88
 1190 02c1 E1000000 		.4byte	.LLST6
 1191 02c5 00       		.byte	0
 1192 02c6 13       		.uleb128 0x13
 1193 02c7 ED010000 		.4byte	.LASF41
 1194 02cb 01       		.byte	0x1
 1195 02cc 4602     		.2byte	0x246
 1196 02ce 00000000 		.4byte	.LFB10
 1197 02d2 18000000 		.4byte	.LFE10-.LFB10
 1198 02d6 01       		.uleb128 0x1
 1199 02d7 9C       		.byte	0x9c
 1200 02d8 ED020000 		.4byte	0x2ed
 1201 02dc 17       		.uleb128 0x17
 1202 02dd 4B020000 		.4byte	.LASF42
 1203 02e1 01       		.byte	0x1
 1204 02e2 4602     		.2byte	0x246
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 38


 1205 02e4 88000000 		.4byte	0x88
 1206 02e8 02010000 		.4byte	.LLST7
 1207 02ec 00       		.byte	0
 1208 02ed 13       		.uleb128 0x13
 1209 02ee 3E010000 		.4byte	.LASF43
 1210 02f2 01       		.byte	0x1
 1211 02f3 5E02     		.2byte	0x25e
 1212 02f5 00000000 		.4byte	.LFB11
 1213 02f9 10000000 		.4byte	.LFE11-.LFB11
 1214 02fd 01       		.uleb128 0x1
 1215 02fe 9C       		.byte	0x9c
 1216 02ff 14030000 		.4byte	0x314
 1217 0303 17       		.uleb128 0x17
 1218 0304 25010000 		.4byte	.LASF38
 1219 0308 01       		.byte	0x1
 1220 0309 5E02     		.2byte	0x25e
 1221 030b 88000000 		.4byte	0x88
 1222 030f 23010000 		.4byte	.LLST8
 1223 0313 00       		.byte	0
 1224 0314 13       		.uleb128 0x13
 1225 0315 75010000 		.4byte	.LASF44
 1226 0319 01       		.byte	0x1
 1227 031a 7502     		.2byte	0x275
 1228 031c 00000000 		.4byte	.LFB12
 1229 0320 10000000 		.4byte	.LFE12-.LFB12
 1230 0324 01       		.uleb128 0x1
 1231 0325 9C       		.byte	0x9c
 1232 0326 3B030000 		.4byte	0x33b
 1233 032a 17       		.uleb128 0x17
 1234 032b 25010000 		.4byte	.LASF38
 1235 032f 01       		.byte	0x1
 1236 0330 7502     		.2byte	0x275
 1237 0332 88000000 		.4byte	0x88
 1238 0336 44010000 		.4byte	.LLST9
 1239 033a 00       		.byte	0
 1240 033b 13       		.uleb128 0x13
 1241 033c 92030000 		.4byte	.LASF45
 1242 0340 01       		.byte	0x1
 1243 0341 9102     		.2byte	0x291
 1244 0343 00000000 		.4byte	.LFB13
 1245 0347 0C000000 		.4byte	.LFE13-.LFB13
 1246 034b 01       		.uleb128 0x1
 1247 034c 9C       		.byte	0x9c
 1248 034d 70030000 		.4byte	0x370
 1249 0351 17       		.uleb128 0x17
 1250 0352 CA020000 		.4byte	.LASF35
 1251 0356 01       		.byte	0x1
 1252 0357 9102     		.2byte	0x291
 1253 0359 88000000 		.4byte	0x88
 1254 035d 65010000 		.4byte	.LLST10
 1255 0361 1A       		.uleb128 0x1a
 1256 0362 70030000 		.4byte	.LASF46
 1257 0366 01       		.byte	0x1
 1258 0367 9102     		.2byte	0x291
 1259 0369 93000000 		.4byte	0x93
 1260 036d 01       		.uleb128 0x1
 1261 036e 51       		.byte	0x51
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 39


 1262 036f 00       		.byte	0
 1263 0370 13       		.uleb128 0x13
 1264 0371 39020000 		.4byte	.LASF47
 1265 0375 01       		.byte	0x1
 1266 0376 B302     		.2byte	0x2b3
 1267 0378 00000000 		.4byte	.LFB14
 1268 037c 0C000000 		.4byte	.LFE14-.LFB14
 1269 0380 01       		.uleb128 0x1
 1270 0381 9C       		.byte	0x9c
 1271 0382 A5030000 		.4byte	0x3a5
 1272 0386 17       		.uleb128 0x17
 1273 0387 CA020000 		.4byte	.LASF35
 1274 038b 01       		.byte	0x1
 1275 038c B302     		.2byte	0x2b3
 1276 038e 88000000 		.4byte	0x88
 1277 0392 86010000 		.4byte	.LLST11
 1278 0396 1A       		.uleb128 0x1a
 1279 0397 07000000 		.4byte	.LASF48
 1280 039b 01       		.byte	0x1
 1281 039c B302     		.2byte	0x2b3
 1282 039e 9E000000 		.4byte	0x9e
 1283 03a2 01       		.uleb128 0x1
 1284 03a3 51       		.byte	0x51
 1285 03a4 00       		.byte	0
 1286 03a5 1B       		.uleb128 0x1b
 1287 03a6 55020000 		.4byte	.LASF49
 1288 03aa 01       		.byte	0x1
 1289 03ab D402     		.2byte	0x2d4
 1290 03ad 93000000 		.4byte	0x93
 1291 03b1 00000000 		.4byte	.LFB15
 1292 03b5 44000000 		.4byte	.LFE15-.LFB15
 1293 03b9 01       		.uleb128 0x1
 1294 03ba 9C       		.byte	0x9c
 1295 03bb F0030000 		.4byte	0x3f0
 1296 03bf 17       		.uleb128 0x17
 1297 03c0 CA020000 		.4byte	.LASF35
 1298 03c4 01       		.byte	0x1
 1299 03c5 D402     		.2byte	0x2d4
 1300 03c7 88000000 		.4byte	0x88
 1301 03cb A7010000 		.4byte	.LLST12
 1302 03cf 17       		.uleb128 0x17
 1303 03d0 77030000 		.4byte	.LASF50
 1304 03d4 01       		.byte	0x1
 1305 03d5 D402     		.2byte	0x2d4
 1306 03d7 93000000 		.4byte	0x93
 1307 03db E1010000 		.4byte	.LLST13
 1308 03df 18       		.uleb128 0x18
 1309 03e0 C6010000 		.4byte	.LASF51
 1310 03e4 01       		.byte	0x1
 1311 03e5 D602     		.2byte	0x2d6
 1312 03e7 93000000 		.4byte	0x93
 1313 03eb 18020000 		.4byte	.LLST14
 1314 03ef 00       		.byte	0
 1315 03f0 1B       		.uleb128 0x1b
 1316 03f1 DF000000 		.4byte	.LASF52
 1317 03f5 01       		.byte	0x1
 1318 03f6 0A03     		.2byte	0x30a
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 40


 1319 03f8 9E000000 		.4byte	0x9e
 1320 03fc 00000000 		.4byte	.LFB16
 1321 0400 38000000 		.4byte	.LFE16-.LFB16
 1322 0404 01       		.uleb128 0x1
 1323 0405 9C       		.byte	0x9c
 1324 0406 3B040000 		.4byte	0x43b
 1325 040a 17       		.uleb128 0x17
 1326 040b CA020000 		.4byte	.LASF35
 1327 040f 01       		.byte	0x1
 1328 0410 0A03     		.2byte	0x30a
 1329 0412 88000000 		.4byte	0x88
 1330 0416 33020000 		.4byte	.LLST15
 1331 041a 17       		.uleb128 0x17
 1332 041b 77030000 		.4byte	.LASF50
 1333 041f 01       		.byte	0x1
 1334 0420 0A03     		.2byte	0x30a
 1335 0422 93000000 		.4byte	0x93
 1336 0426 54020000 		.4byte	.LLST16
 1337 042a 18       		.uleb128 0x18
 1338 042b 5C010000 		.4byte	.LASF53
 1339 042f 01       		.byte	0x1
 1340 0430 0C03     		.2byte	0x30c
 1341 0432 BB000000 		.4byte	0xbb
 1342 0436 72020000 		.4byte	.LLST17
 1343 043a 00       		.byte	0
 1344 043b 1B       		.uleb128 0x1b
 1345 043c 16000000 		.4byte	.LASF54
 1346 0440 01       		.byte	0x1
 1347 0441 3703     		.2byte	0x337
 1348 0443 A9000000 		.4byte	0xa9
 1349 0447 00000000 		.4byte	.LFB17
 1350 044b 3C000000 		.4byte	.LFE17-.LFB17
 1351 044f 01       		.uleb128 0x1
 1352 0450 9C       		.byte	0x9c
 1353 0451 86040000 		.4byte	0x486
 1354 0455 17       		.uleb128 0x17
 1355 0456 CA020000 		.4byte	.LASF35
 1356 045a 01       		.byte	0x1
 1357 045b 3703     		.2byte	0x337
 1358 045d 88000000 		.4byte	0x88
 1359 0461 9E020000 		.4byte	.LLST18
 1360 0465 17       		.uleb128 0x17
 1361 0466 77030000 		.4byte	.LASF50
 1362 046a 01       		.byte	0x1
 1363 046b 3703     		.2byte	0x337
 1364 046d 93000000 		.4byte	0x93
 1365 0471 BF020000 		.4byte	.LLST19
 1366 0475 18       		.uleb128 0x18
 1367 0476 84010000 		.4byte	.LASF55
 1368 047a 01       		.byte	0x1
 1369 047b 3903     		.2byte	0x339
 1370 047d A9000000 		.4byte	0xa9
 1371 0481 DD020000 		.4byte	.LLST20
 1372 0485 00       		.byte	0
 1373 0486 10       		.uleb128 0x10
 1374 0487 88000000 		.4byte	0x88
 1375 048b 96040000 		.4byte	0x496
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 41


 1376 048f 11       		.uleb128 0x11
 1377 0490 F1000000 		.4byte	0xf1
 1378 0494 01       		.byte	0x1
 1379 0495 00       		.byte	0
 1380 0496 0C       		.uleb128 0xc
 1381 0497 E1020000 		.4byte	.LASF57
 1382 049b 01       		.byte	0x1
 1383 049c 21       		.byte	0x21
 1384 049d A1040000 		.4byte	0x4a1
 1385 04a1 12       		.uleb128 0x12
 1386 04a2 86040000 		.4byte	0x486
 1387 04a6 1C       		.uleb128 0x1c
 1388 04a7 2A010000 		.4byte	.LASF58
 1389 04ab 01       		.byte	0x1
 1390 04ac 18       		.byte	0x18
 1391 04ad 72000000 		.4byte	0x72
 1392 04b1 05       		.uleb128 0x5
 1393 04b2 03       		.byte	0x3
 1394 04b3 00000000 		.4byte	ADC_initVar
 1395 04b7 10       		.uleb128 0x10
 1396 04b8 93000000 		.4byte	0x93
 1397 04bc C7040000 		.4byte	0x4c7
 1398 04c0 11       		.uleb128 0x11
 1399 04c1 F1000000 		.4byte	0xf1
 1400 04c5 01       		.byte	0x1
 1401 04c6 00       		.byte	0
 1402 04c7 1C       		.uleb128 0x1c
 1403 04c8 A6020000 		.4byte	.LASF59
 1404 04cc 01       		.byte	0x1
 1405 04cd 19       		.byte	0x19
 1406 04ce D8040000 		.4byte	0x4d8
 1407 04d2 05       		.uleb128 0x5
 1408 04d3 03       		.byte	0x3
 1409 04d4 00000000 		.4byte	ADC_offset
 1410 04d8 06       		.uleb128 0x6
 1411 04d9 B7040000 		.4byte	0x4b7
 1412 04dd 10       		.uleb128 0x10
 1413 04de 9E000000 		.4byte	0x9e
 1414 04e2 ED040000 		.4byte	0x4ed
 1415 04e6 11       		.uleb128 0x11
 1416 04e7 F1000000 		.4byte	0xf1
 1417 04eb 01       		.byte	0x1
 1418 04ec 00       		.byte	0
 1419 04ed 1C       		.uleb128 0x1c
 1420 04ee F3000000 		.4byte	.LASF60
 1421 04f2 01       		.byte	0x1
 1422 04f3 1A       		.byte	0x1a
 1423 04f4 FE040000 		.4byte	0x4fe
 1424 04f8 05       		.uleb128 0x5
 1425 04f9 03       		.byte	0x3
 1426 04fa 00000000 		.4byte	ADC_countsPer10Volt
 1427 04fe 06       		.uleb128 0x6
 1428 04ff DD040000 		.4byte	0x4dd
 1429 0503 1D       		.uleb128 0x1d
 1430 0504 18020000 		.4byte	.LASF64
 1431 0508 03       		.byte	0x3
 1432 0509 49       		.byte	0x49
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 42


 1433 050a 19050000 		.4byte	0x519
 1434 050e 1E       		.uleb128 0x1e
 1435 050f 72000000 		.4byte	0x72
 1436 0513 1E       		.uleb128 0x1e
 1437 0514 72000000 		.4byte	0x72
 1438 0518 00       		.byte	0
 1439 0519 1F       		.uleb128 0x1f
 1440 051a A7010000 		.4byte	.LASF65
 1441 051e 03       		.byte	0x3
 1442 051f 46       		.byte	0x46
 1443 0520 DE000000 		.4byte	0xde
 1444 0524 33050000 		.4byte	0x533
 1445 0528 1E       		.uleb128 0x1e
 1446 0529 72000000 		.4byte	0x72
 1447 052d 1E       		.uleb128 0x1e
 1448 052e DE000000 		.4byte	0xde
 1449 0532 00       		.byte	0
 1450 0533 20       		.uleb128 0x20
 1451 0534 0D010000 		.4byte	.LASF66
 1452 0538 03       		.byte	0x3
 1453 0539 58       		.byte	0x58
 1454 053a 1E       		.uleb128 0x1e
 1455 053b 7D000000 		.4byte	0x7d
 1456 053f 00       		.byte	0
 1457 0540 00       		.byte	0
 1458              		.section	.debug_abbrev,"",%progbits
 1459              	.Ldebug_abbrev0:
 1460 0000 01       		.uleb128 0x1
 1461 0001 11       		.uleb128 0x11
 1462 0002 01       		.byte	0x1
 1463 0003 25       		.uleb128 0x25
 1464 0004 0E       		.uleb128 0xe
 1465 0005 13       		.uleb128 0x13
 1466 0006 0B       		.uleb128 0xb
 1467 0007 03       		.uleb128 0x3
 1468 0008 0E       		.uleb128 0xe
 1469 0009 1B       		.uleb128 0x1b
 1470 000a 0E       		.uleb128 0xe
 1471 000b 55       		.uleb128 0x55
 1472 000c 17       		.uleb128 0x17
 1473 000d 11       		.uleb128 0x11
 1474 000e 01       		.uleb128 0x1
 1475 000f 10       		.uleb128 0x10
 1476 0010 17       		.uleb128 0x17
 1477 0011 00       		.byte	0
 1478 0012 00       		.byte	0
 1479 0013 02       		.uleb128 0x2
 1480 0014 24       		.uleb128 0x24
 1481 0015 00       		.byte	0
 1482 0016 0B       		.uleb128 0xb
 1483 0017 0B       		.uleb128 0xb
 1484 0018 3E       		.uleb128 0x3e
 1485 0019 0B       		.uleb128 0xb
 1486 001a 03       		.uleb128 0x3
 1487 001b 0E       		.uleb128 0xe
 1488 001c 00       		.byte	0
 1489 001d 00       		.byte	0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 43


 1490 001e 03       		.uleb128 0x3
 1491 001f 24       		.uleb128 0x24
 1492 0020 00       		.byte	0
 1493 0021 0B       		.uleb128 0xb
 1494 0022 0B       		.uleb128 0xb
 1495 0023 3E       		.uleb128 0x3e
 1496 0024 0B       		.uleb128 0xb
 1497 0025 03       		.uleb128 0x3
 1498 0026 08       		.uleb128 0x8
 1499 0027 00       		.byte	0
 1500 0028 00       		.byte	0
 1501 0029 04       		.uleb128 0x4
 1502 002a 16       		.uleb128 0x16
 1503 002b 00       		.byte	0
 1504 002c 03       		.uleb128 0x3
 1505 002d 0E       		.uleb128 0xe
 1506 002e 3A       		.uleb128 0x3a
 1507 002f 0B       		.uleb128 0xb
 1508 0030 3B       		.uleb128 0x3b
 1509 0031 0B       		.uleb128 0xb
 1510 0032 49       		.uleb128 0x49
 1511 0033 13       		.uleb128 0x13
 1512 0034 00       		.byte	0
 1513 0035 00       		.byte	0
 1514 0036 05       		.uleb128 0x5
 1515 0037 16       		.uleb128 0x16
 1516 0038 00       		.byte	0
 1517 0039 03       		.uleb128 0x3
 1518 003a 0E       		.uleb128 0xe
 1519 003b 3A       		.uleb128 0x3a
 1520 003c 0B       		.uleb128 0xb
 1521 003d 3B       		.uleb128 0x3b
 1522 003e 05       		.uleb128 0x5
 1523 003f 49       		.uleb128 0x49
 1524 0040 13       		.uleb128 0x13
 1525 0041 00       		.byte	0
 1526 0042 00       		.byte	0
 1527 0043 06       		.uleb128 0x6
 1528 0044 35       		.uleb128 0x35
 1529 0045 00       		.byte	0
 1530 0046 49       		.uleb128 0x49
 1531 0047 13       		.uleb128 0x13
 1532 0048 00       		.byte	0
 1533 0049 00       		.byte	0
 1534 004a 07       		.uleb128 0x7
 1535 004b 0F       		.uleb128 0xf
 1536 004c 00       		.byte	0
 1537 004d 0B       		.uleb128 0xb
 1538 004e 0B       		.uleb128 0xb
 1539 004f 49       		.uleb128 0x49
 1540 0050 13       		.uleb128 0x13
 1541 0051 00       		.byte	0
 1542 0052 00       		.byte	0
 1543 0053 08       		.uleb128 0x8
 1544 0054 15       		.uleb128 0x15
 1545 0055 00       		.byte	0
 1546 0056 27       		.uleb128 0x27
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 44


 1547 0057 19       		.uleb128 0x19
 1548 0058 00       		.byte	0
 1549 0059 00       		.byte	0
 1550 005a 09       		.uleb128 0x9
 1551 005b 2E       		.uleb128 0x2e
 1552 005c 01       		.byte	0x1
 1553 005d 3F       		.uleb128 0x3f
 1554 005e 19       		.uleb128 0x19
 1555 005f 03       		.uleb128 0x3
 1556 0060 0E       		.uleb128 0xe
 1557 0061 3A       		.uleb128 0x3a
 1558 0062 0B       		.uleb128 0xb
 1559 0063 3B       		.uleb128 0x3b
 1560 0064 0B       		.uleb128 0xb
 1561 0065 27       		.uleb128 0x27
 1562 0066 19       		.uleb128 0x19
 1563 0067 11       		.uleb128 0x11
 1564 0068 01       		.uleb128 0x1
 1565 0069 12       		.uleb128 0x12
 1566 006a 06       		.uleb128 0x6
 1567 006b 40       		.uleb128 0x40
 1568 006c 18       		.uleb128 0x18
 1569 006d 9742     		.uleb128 0x2117
 1570 006f 19       		.uleb128 0x19
 1571 0070 01       		.uleb128 0x1
 1572 0071 13       		.uleb128 0x13
 1573 0072 00       		.byte	0
 1574 0073 00       		.byte	0
 1575 0074 0A       		.uleb128 0xa
 1576 0075 34       		.uleb128 0x34
 1577 0076 00       		.byte	0
 1578 0077 03       		.uleb128 0x3
 1579 0078 0E       		.uleb128 0xe
 1580 0079 3A       		.uleb128 0x3a
 1581 007a 0B       		.uleb128 0xb
 1582 007b 3B       		.uleb128 0x3b
 1583 007c 0B       		.uleb128 0xb
 1584 007d 49       		.uleb128 0x49
 1585 007e 13       		.uleb128 0x13
 1586 007f 02       		.uleb128 0x2
 1587 0080 17       		.uleb128 0x17
 1588 0081 00       		.byte	0
 1589 0082 00       		.byte	0
 1590 0083 0B       		.uleb128 0xb
 1591 0084 34       		.uleb128 0x34
 1592 0085 00       		.byte	0
 1593 0086 03       		.uleb128 0x3
 1594 0087 0E       		.uleb128 0xe
 1595 0088 3A       		.uleb128 0x3a
 1596 0089 0B       		.uleb128 0xb
 1597 008a 3B       		.uleb128 0x3b
 1598 008b 0B       		.uleb128 0xb
 1599 008c 49       		.uleb128 0x49
 1600 008d 13       		.uleb128 0x13
 1601 008e 1C       		.uleb128 0x1c
 1602 008f 05       		.uleb128 0x5
 1603 0090 00       		.byte	0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 45


 1604 0091 00       		.byte	0
 1605 0092 0C       		.uleb128 0xc
 1606 0093 34       		.uleb128 0x34
 1607 0094 00       		.byte	0
 1608 0095 03       		.uleb128 0x3
 1609 0096 0E       		.uleb128 0xe
 1610 0097 3A       		.uleb128 0x3a
 1611 0098 0B       		.uleb128 0xb
 1612 0099 3B       		.uleb128 0x3b
 1613 009a 0B       		.uleb128 0xb
 1614 009b 49       		.uleb128 0x49
 1615 009c 13       		.uleb128 0x13
 1616 009d 00       		.byte	0
 1617 009e 00       		.byte	0
 1618 009f 0D       		.uleb128 0xd
 1619 00a0 898201   		.uleb128 0x4109
 1620 00a3 01       		.byte	0x1
 1621 00a4 11       		.uleb128 0x11
 1622 00a5 01       		.uleb128 0x1
 1623 00a6 31       		.uleb128 0x31
 1624 00a7 13       		.uleb128 0x13
 1625 00a8 01       		.uleb128 0x1
 1626 00a9 13       		.uleb128 0x13
 1627 00aa 00       		.byte	0
 1628 00ab 00       		.byte	0
 1629 00ac 0E       		.uleb128 0xe
 1630 00ad 8A8201   		.uleb128 0x410a
 1631 00b0 00       		.byte	0
 1632 00b1 02       		.uleb128 0x2
 1633 00b2 18       		.uleb128 0x18
 1634 00b3 9142     		.uleb128 0x2111
 1635 00b5 18       		.uleb128 0x18
 1636 00b6 00       		.byte	0
 1637 00b7 00       		.byte	0
 1638 00b8 0F       		.uleb128 0xf
 1639 00b9 898201   		.uleb128 0x4109
 1640 00bc 01       		.byte	0x1
 1641 00bd 11       		.uleb128 0x11
 1642 00be 01       		.uleb128 0x1
 1643 00bf 31       		.uleb128 0x31
 1644 00c0 13       		.uleb128 0x13
 1645 00c1 00       		.byte	0
 1646 00c2 00       		.byte	0
 1647 00c3 10       		.uleb128 0x10
 1648 00c4 01       		.uleb128 0x1
 1649 00c5 01       		.byte	0x1
 1650 00c6 49       		.uleb128 0x49
 1651 00c7 13       		.uleb128 0x13
 1652 00c8 01       		.uleb128 0x1
 1653 00c9 13       		.uleb128 0x13
 1654 00ca 00       		.byte	0
 1655 00cb 00       		.byte	0
 1656 00cc 11       		.uleb128 0x11
 1657 00cd 21       		.uleb128 0x21
 1658 00ce 00       		.byte	0
 1659 00cf 49       		.uleb128 0x49
 1660 00d0 13       		.uleb128 0x13
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 46


 1661 00d1 2F       		.uleb128 0x2f
 1662 00d2 0B       		.uleb128 0xb
 1663 00d3 00       		.byte	0
 1664 00d4 00       		.byte	0
 1665 00d5 12       		.uleb128 0x12
 1666 00d6 26       		.uleb128 0x26
 1667 00d7 00       		.byte	0
 1668 00d8 49       		.uleb128 0x49
 1669 00d9 13       		.uleb128 0x13
 1670 00da 00       		.byte	0
 1671 00db 00       		.byte	0
 1672 00dc 13       		.uleb128 0x13
 1673 00dd 2E       		.uleb128 0x2e
 1674 00de 01       		.byte	0x1
 1675 00df 3F       		.uleb128 0x3f
 1676 00e0 19       		.uleb128 0x19
 1677 00e1 03       		.uleb128 0x3
 1678 00e2 0E       		.uleb128 0xe
 1679 00e3 3A       		.uleb128 0x3a
 1680 00e4 0B       		.uleb128 0xb
 1681 00e5 3B       		.uleb128 0x3b
 1682 00e6 05       		.uleb128 0x5
 1683 00e7 27       		.uleb128 0x27
 1684 00e8 19       		.uleb128 0x19
 1685 00e9 11       		.uleb128 0x11
 1686 00ea 01       		.uleb128 0x1
 1687 00eb 12       		.uleb128 0x12
 1688 00ec 06       		.uleb128 0x6
 1689 00ed 40       		.uleb128 0x40
 1690 00ee 18       		.uleb128 0x18
 1691 00ef 9742     		.uleb128 0x2117
 1692 00f1 19       		.uleb128 0x19
 1693 00f2 01       		.uleb128 0x1
 1694 00f3 13       		.uleb128 0x13
 1695 00f4 00       		.byte	0
 1696 00f5 00       		.byte	0
 1697 00f6 14       		.uleb128 0x14
 1698 00f7 898201   		.uleb128 0x4109
 1699 00fa 00       		.byte	0
 1700 00fb 11       		.uleb128 0x11
 1701 00fc 01       		.uleb128 0x1
 1702 00fd 31       		.uleb128 0x31
 1703 00fe 13       		.uleb128 0x13
 1704 00ff 00       		.byte	0
 1705 0100 00       		.byte	0
 1706 0101 15       		.uleb128 0x15
 1707 0102 2E       		.uleb128 0x2e
 1708 0103 00       		.byte	0
 1709 0104 3F       		.uleb128 0x3f
 1710 0105 19       		.uleb128 0x19
 1711 0106 03       		.uleb128 0x3
 1712 0107 0E       		.uleb128 0xe
 1713 0108 3A       		.uleb128 0x3a
 1714 0109 0B       		.uleb128 0xb
 1715 010a 3B       		.uleb128 0x3b
 1716 010b 05       		.uleb128 0x5
 1717 010c 27       		.uleb128 0x27
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 47


 1718 010d 19       		.uleb128 0x19
 1719 010e 11       		.uleb128 0x11
 1720 010f 01       		.uleb128 0x1
 1721 0110 12       		.uleb128 0x12
 1722 0111 06       		.uleb128 0x6
 1723 0112 40       		.uleb128 0x40
 1724 0113 18       		.uleb128 0x18
 1725 0114 9742     		.uleb128 0x2117
 1726 0116 19       		.uleb128 0x19
 1727 0117 00       		.byte	0
 1728 0118 00       		.byte	0
 1729 0119 16       		.uleb128 0x16
 1730 011a 2E       		.uleb128 0x2e
 1731 011b 01       		.byte	0x1
 1732 011c 3F       		.uleb128 0x3f
 1733 011d 19       		.uleb128 0x19
 1734 011e 03       		.uleb128 0x3
 1735 011f 0E       		.uleb128 0xe
 1736 0120 3A       		.uleb128 0x3a
 1737 0121 0B       		.uleb128 0xb
 1738 0122 3B       		.uleb128 0x3b
 1739 0123 05       		.uleb128 0x5
 1740 0124 27       		.uleb128 0x27
 1741 0125 19       		.uleb128 0x19
 1742 0126 49       		.uleb128 0x49
 1743 0127 13       		.uleb128 0x13
 1744 0128 11       		.uleb128 0x11
 1745 0129 01       		.uleb128 0x1
 1746 012a 12       		.uleb128 0x12
 1747 012b 06       		.uleb128 0x6
 1748 012c 40       		.uleb128 0x40
 1749 012d 18       		.uleb128 0x18
 1750 012e 9742     		.uleb128 0x2117
 1751 0130 19       		.uleb128 0x19
 1752 0131 01       		.uleb128 0x1
 1753 0132 13       		.uleb128 0x13
 1754 0133 00       		.byte	0
 1755 0134 00       		.byte	0
 1756 0135 17       		.uleb128 0x17
 1757 0136 05       		.uleb128 0x5
 1758 0137 00       		.byte	0
 1759 0138 03       		.uleb128 0x3
 1760 0139 0E       		.uleb128 0xe
 1761 013a 3A       		.uleb128 0x3a
 1762 013b 0B       		.uleb128 0xb
 1763 013c 3B       		.uleb128 0x3b
 1764 013d 05       		.uleb128 0x5
 1765 013e 49       		.uleb128 0x49
 1766 013f 13       		.uleb128 0x13
 1767 0140 02       		.uleb128 0x2
 1768 0141 17       		.uleb128 0x17
 1769 0142 00       		.byte	0
 1770 0143 00       		.byte	0
 1771 0144 18       		.uleb128 0x18
 1772 0145 34       		.uleb128 0x34
 1773 0146 00       		.byte	0
 1774 0147 03       		.uleb128 0x3
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 48


 1775 0148 0E       		.uleb128 0xe
 1776 0149 3A       		.uleb128 0x3a
 1777 014a 0B       		.uleb128 0xb
 1778 014b 3B       		.uleb128 0x3b
 1779 014c 05       		.uleb128 0x5
 1780 014d 49       		.uleb128 0x49
 1781 014e 13       		.uleb128 0x13
 1782 014f 02       		.uleb128 0x2
 1783 0150 17       		.uleb128 0x17
 1784 0151 00       		.byte	0
 1785 0152 00       		.byte	0
 1786 0153 19       		.uleb128 0x19
 1787 0154 34       		.uleb128 0x34
 1788 0155 00       		.byte	0
 1789 0156 03       		.uleb128 0x3
 1790 0157 0E       		.uleb128 0xe
 1791 0158 3A       		.uleb128 0x3a
 1792 0159 0B       		.uleb128 0xb
 1793 015a 3B       		.uleb128 0x3b
 1794 015b 05       		.uleb128 0x5
 1795 015c 49       		.uleb128 0x49
 1796 015d 13       		.uleb128 0x13
 1797 015e 02       		.uleb128 0x2
 1798 015f 18       		.uleb128 0x18
 1799 0160 00       		.byte	0
 1800 0161 00       		.byte	0
 1801 0162 1A       		.uleb128 0x1a
 1802 0163 05       		.uleb128 0x5
 1803 0164 00       		.byte	0
 1804 0165 03       		.uleb128 0x3
 1805 0166 0E       		.uleb128 0xe
 1806 0167 3A       		.uleb128 0x3a
 1807 0168 0B       		.uleb128 0xb
 1808 0169 3B       		.uleb128 0x3b
 1809 016a 05       		.uleb128 0x5
 1810 016b 49       		.uleb128 0x49
 1811 016c 13       		.uleb128 0x13
 1812 016d 02       		.uleb128 0x2
 1813 016e 18       		.uleb128 0x18
 1814 016f 00       		.byte	0
 1815 0170 00       		.byte	0
 1816 0171 1B       		.uleb128 0x1b
 1817 0172 2E       		.uleb128 0x2e
 1818 0173 01       		.byte	0x1
 1819 0174 3F       		.uleb128 0x3f
 1820 0175 19       		.uleb128 0x19
 1821 0176 03       		.uleb128 0x3
 1822 0177 0E       		.uleb128 0xe
 1823 0178 3A       		.uleb128 0x3a
 1824 0179 0B       		.uleb128 0xb
 1825 017a 3B       		.uleb128 0x3b
 1826 017b 05       		.uleb128 0x5
 1827 017c 27       		.uleb128 0x27
 1828 017d 19       		.uleb128 0x19
 1829 017e 49       		.uleb128 0x49
 1830 017f 13       		.uleb128 0x13
 1831 0180 11       		.uleb128 0x11
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 49


 1832 0181 01       		.uleb128 0x1
 1833 0182 12       		.uleb128 0x12
 1834 0183 06       		.uleb128 0x6
 1835 0184 40       		.uleb128 0x40
 1836 0185 18       		.uleb128 0x18
 1837 0186 9642     		.uleb128 0x2116
 1838 0188 19       		.uleb128 0x19
 1839 0189 01       		.uleb128 0x1
 1840 018a 13       		.uleb128 0x13
 1841 018b 00       		.byte	0
 1842 018c 00       		.byte	0
 1843 018d 1C       		.uleb128 0x1c
 1844 018e 34       		.uleb128 0x34
 1845 018f 00       		.byte	0
 1846 0190 03       		.uleb128 0x3
 1847 0191 0E       		.uleb128 0xe
 1848 0192 3A       		.uleb128 0x3a
 1849 0193 0B       		.uleb128 0xb
 1850 0194 3B       		.uleb128 0x3b
 1851 0195 0B       		.uleb128 0xb
 1852 0196 49       		.uleb128 0x49
 1853 0197 13       		.uleb128 0x13
 1854 0198 3F       		.uleb128 0x3f
 1855 0199 19       		.uleb128 0x19
 1856 019a 02       		.uleb128 0x2
 1857 019b 18       		.uleb128 0x18
 1858 019c 00       		.byte	0
 1859 019d 00       		.byte	0
 1860 019e 1D       		.uleb128 0x1d
 1861 019f 2E       		.uleb128 0x2e
 1862 01a0 01       		.byte	0x1
 1863 01a1 3F       		.uleb128 0x3f
 1864 01a2 19       		.uleb128 0x19
 1865 01a3 03       		.uleb128 0x3
 1866 01a4 0E       		.uleb128 0xe
 1867 01a5 3A       		.uleb128 0x3a
 1868 01a6 0B       		.uleb128 0xb
 1869 01a7 3B       		.uleb128 0x3b
 1870 01a8 0B       		.uleb128 0xb
 1871 01a9 27       		.uleb128 0x27
 1872 01aa 19       		.uleb128 0x19
 1873 01ab 3C       		.uleb128 0x3c
 1874 01ac 19       		.uleb128 0x19
 1875 01ad 01       		.uleb128 0x1
 1876 01ae 13       		.uleb128 0x13
 1877 01af 00       		.byte	0
 1878 01b0 00       		.byte	0
 1879 01b1 1E       		.uleb128 0x1e
 1880 01b2 05       		.uleb128 0x5
 1881 01b3 00       		.byte	0
 1882 01b4 49       		.uleb128 0x49
 1883 01b5 13       		.uleb128 0x13
 1884 01b6 00       		.byte	0
 1885 01b7 00       		.byte	0
 1886 01b8 1F       		.uleb128 0x1f
 1887 01b9 2E       		.uleb128 0x2e
 1888 01ba 01       		.byte	0x1
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 50


 1889 01bb 3F       		.uleb128 0x3f
 1890 01bc 19       		.uleb128 0x19
 1891 01bd 03       		.uleb128 0x3
 1892 01be 0E       		.uleb128 0xe
 1893 01bf 3A       		.uleb128 0x3a
 1894 01c0 0B       		.uleb128 0xb
 1895 01c1 3B       		.uleb128 0x3b
 1896 01c2 0B       		.uleb128 0xb
 1897 01c3 27       		.uleb128 0x27
 1898 01c4 19       		.uleb128 0x19
 1899 01c5 49       		.uleb128 0x49
 1900 01c6 13       		.uleb128 0x13
 1901 01c7 3C       		.uleb128 0x3c
 1902 01c8 19       		.uleb128 0x19
 1903 01c9 01       		.uleb128 0x1
 1904 01ca 13       		.uleb128 0x13
 1905 01cb 00       		.byte	0
 1906 01cc 00       		.byte	0
 1907 01cd 20       		.uleb128 0x20
 1908 01ce 2E       		.uleb128 0x2e
 1909 01cf 01       		.byte	0x1
 1910 01d0 3F       		.uleb128 0x3f
 1911 01d1 19       		.uleb128 0x19
 1912 01d2 03       		.uleb128 0x3
 1913 01d3 0E       		.uleb128 0xe
 1914 01d4 3A       		.uleb128 0x3a
 1915 01d5 0B       		.uleb128 0xb
 1916 01d6 3B       		.uleb128 0x3b
 1917 01d7 0B       		.uleb128 0xb
 1918 01d8 27       		.uleb128 0x27
 1919 01d9 19       		.uleb128 0x19
 1920 01da 3C       		.uleb128 0x3c
 1921 01db 19       		.uleb128 0x19
 1922 01dc 00       		.byte	0
 1923 01dd 00       		.byte	0
 1924 01de 00       		.byte	0
 1925              		.section	.debug_loc,"",%progbits
 1926              	.Ldebug_loc0:
 1927              	.LLST0:
 1928 0000 80000000 		.4byte	.LVL5
 1929 0004 8E000000 		.4byte	.LVL7
 1930 0008 0200     		.2byte	0x2
 1931 000a 30       		.byte	0x30
 1932 000b 9F       		.byte	0x9f
 1933 000c 8E000000 		.4byte	.LVL7
 1934 0010 94000000 		.4byte	.LVL8
 1935 0014 0200     		.2byte	0x2
 1936 0016 31       		.byte	0x31
 1937 0017 9F       		.byte	0x9f
 1938 0018 94000000 		.4byte	.LVL8
 1939 001c 04010000 		.4byte	.LFE1
 1940 0020 0200     		.2byte	0x2
 1941 0022 32       		.byte	0x32
 1942 0023 9F       		.byte	0x9f
 1943 0024 00000000 		.4byte	0
 1944 0028 00000000 		.4byte	0
 1945              	.LLST1:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 51


 1946 002c 7A000000 		.4byte	.LVL2
 1947 0030 7C000000 		.4byte	.LVL3
 1948 0034 0100     		.2byte	0x1
 1949 0036 54       		.byte	0x54
 1950 0037 7C000000 		.4byte	.LVL3
 1951 003b 80000000 		.4byte	.LVL5
 1952 003f 0100     		.2byte	0x1
 1953 0041 50       		.byte	0x50
 1954 0042 80000000 		.4byte	.LVL5
 1955 0046 8E000000 		.4byte	.LVL7
 1956 004a 0200     		.2byte	0x2
 1957 004c 30       		.byte	0x30
 1958 004d 9F       		.byte	0x9f
 1959 004e 8E000000 		.4byte	.LVL7
 1960 0052 04010000 		.4byte	.LFE1
 1961 0056 0200     		.2byte	0x2
 1962 0058 31       		.byte	0x31
 1963 0059 9F       		.byte	0x9f
 1964 005a 00000000 		.4byte	0
 1965 005e 00000000 		.4byte	0
 1966              	.LLST2:
 1967 0062 00000000 		.4byte	.LVL12
 1968 0066 04000000 		.4byte	.LVL13
 1969 006a 0100     		.2byte	0x1
 1970 006c 50       		.byte	0x50
 1971 006d 04000000 		.4byte	.LVL13
 1972 0071 24000000 		.4byte	.LFE6
 1973 0075 0100     		.2byte	0x1
 1974 0077 51       		.byte	0x51
 1975 0078 00000000 		.4byte	0
 1976 007c 00000000 		.4byte	0
 1977              	.LLST3:
 1978 0080 00000000 		.4byte	.LVL12
 1979 0084 08000000 		.4byte	.LVL14
 1980 0088 0200     		.2byte	0x2
 1981 008a 30       		.byte	0x30
 1982 008b 9F       		.byte	0x9f
 1983 008c 10000000 		.4byte	.LVL15
 1984 0090 1C000000 		.4byte	.LVL16
 1985 0094 0100     		.2byte	0x1
 1986 0096 50       		.byte	0x50
 1987 0097 00000000 		.4byte	0
 1988 009b 00000000 		.4byte	0
 1989              	.LLST4:
 1990 009f 00000000 		.4byte	.LVL17
 1991 00a3 0A000000 		.4byte	.LVL18
 1992 00a7 0100     		.2byte	0x1
 1993 00a9 50       		.byte	0x50
 1994 00aa 0A000000 		.4byte	.LVL18
 1995 00ae 18000000 		.4byte	.LFE7
 1996 00b2 0400     		.2byte	0x4
 1997 00b4 F3       		.byte	0xf3
 1998 00b5 01       		.uleb128 0x1
 1999 00b6 50       		.byte	0x50
 2000 00b7 9F       		.byte	0x9f
 2001 00b8 00000000 		.4byte	0
 2002 00bc 00000000 		.4byte	0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 52


 2003              	.LLST5:
 2004 00c0 00000000 		.4byte	.LVL20
 2005 00c4 04000000 		.4byte	.LVL21
 2006 00c8 0100     		.2byte	0x1
 2007 00ca 50       		.byte	0x50
 2008 00cb 04000000 		.4byte	.LVL21
 2009 00cf 10000000 		.4byte	.LFE8
 2010 00d3 0400     		.2byte	0x4
 2011 00d5 F3       		.byte	0xf3
 2012 00d6 01       		.uleb128 0x1
 2013 00d7 50       		.byte	0x50
 2014 00d8 9F       		.byte	0x9f
 2015 00d9 00000000 		.4byte	0
 2016 00dd 00000000 		.4byte	0
 2017              	.LLST6:
 2018 00e1 00000000 		.4byte	.LVL22
 2019 00e5 04000000 		.4byte	.LVL23
 2020 00e9 0100     		.2byte	0x1
 2021 00eb 50       		.byte	0x50
 2022 00ec 04000000 		.4byte	.LVL23
 2023 00f0 18000000 		.4byte	.LFE9
 2024 00f4 0400     		.2byte	0x4
 2025 00f6 F3       		.byte	0xf3
 2026 00f7 01       		.uleb128 0x1
 2027 00f8 50       		.byte	0x50
 2028 00f9 9F       		.byte	0x9f
 2029 00fa 00000000 		.4byte	0
 2030 00fe 00000000 		.4byte	0
 2031              	.LLST7:
 2032 0102 00000000 		.4byte	.LVL24
 2033 0106 04000000 		.4byte	.LVL25
 2034 010a 0100     		.2byte	0x1
 2035 010c 50       		.byte	0x50
 2036 010d 04000000 		.4byte	.LVL25
 2037 0111 18000000 		.4byte	.LFE10
 2038 0115 0400     		.2byte	0x4
 2039 0117 F3       		.byte	0xf3
 2040 0118 01       		.uleb128 0x1
 2041 0119 50       		.byte	0x50
 2042 011a 9F       		.byte	0x9f
 2043 011b 00000000 		.4byte	0
 2044 011f 00000000 		.4byte	0
 2045              	.LLST8:
 2046 0123 00000000 		.4byte	.LVL26
 2047 0127 04000000 		.4byte	.LVL27
 2048 012b 0100     		.2byte	0x1
 2049 012d 50       		.byte	0x50
 2050 012e 04000000 		.4byte	.LVL27
 2051 0132 10000000 		.4byte	.LFE11
 2052 0136 0400     		.2byte	0x4
 2053 0138 F3       		.byte	0xf3
 2054 0139 01       		.uleb128 0x1
 2055 013a 50       		.byte	0x50
 2056 013b 9F       		.byte	0x9f
 2057 013c 00000000 		.4byte	0
 2058 0140 00000000 		.4byte	0
 2059              	.LLST9:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 53


 2060 0144 00000000 		.4byte	.LVL28
 2061 0148 04000000 		.4byte	.LVL29
 2062 014c 0100     		.2byte	0x1
 2063 014e 50       		.byte	0x50
 2064 014f 04000000 		.4byte	.LVL29
 2065 0153 10000000 		.4byte	.LFE12
 2066 0157 0400     		.2byte	0x4
 2067 0159 F3       		.byte	0xf3
 2068 015a 01       		.uleb128 0x1
 2069 015b 50       		.byte	0x50
 2070 015c 9F       		.byte	0x9f
 2071 015d 00000000 		.4byte	0
 2072 0161 00000000 		.4byte	0
 2073              	.LLST10:
 2074 0165 00000000 		.4byte	.LVL30
 2075 0169 04000000 		.4byte	.LVL31
 2076 016d 0100     		.2byte	0x1
 2077 016f 50       		.byte	0x50
 2078 0170 04000000 		.4byte	.LVL31
 2079 0174 0C000000 		.4byte	.LFE13
 2080 0178 0400     		.2byte	0x4
 2081 017a F3       		.byte	0xf3
 2082 017b 01       		.uleb128 0x1
 2083 017c 50       		.byte	0x50
 2084 017d 9F       		.byte	0x9f
 2085 017e 00000000 		.4byte	0
 2086 0182 00000000 		.4byte	0
 2087              	.LLST11:
 2088 0186 00000000 		.4byte	.LVL32
 2089 018a 04000000 		.4byte	.LVL33
 2090 018e 0100     		.2byte	0x1
 2091 0190 50       		.byte	0x50
 2092 0191 04000000 		.4byte	.LVL33
 2093 0195 0C000000 		.4byte	.LFE14
 2094 0199 0400     		.2byte	0x4
 2095 019b F3       		.byte	0xf3
 2096 019c 01       		.uleb128 0x1
 2097 019d 50       		.byte	0x50
 2098 019e 9F       		.byte	0x9f
 2099 019f 00000000 		.4byte	0
 2100 01a3 00000000 		.4byte	0
 2101              	.LLST12:
 2102 01a7 00000000 		.4byte	.LVL34
 2103 01ab 1C000000 		.4byte	.LVL38
 2104 01af 0100     		.2byte	0x1
 2105 01b1 50       		.byte	0x50
 2106 01b2 1C000000 		.4byte	.LVL38
 2107 01b6 22000000 		.4byte	.LVL39
 2108 01ba 0400     		.2byte	0x4
 2109 01bc F3       		.byte	0xf3
 2110 01bd 01       		.uleb128 0x1
 2111 01be 50       		.byte	0x50
 2112 01bf 9F       		.byte	0x9f
 2113 01c0 22000000 		.4byte	.LVL39
 2114 01c4 26000000 		.4byte	.LVL41
 2115 01c8 0100     		.2byte	0x1
 2116 01ca 50       		.byte	0x50
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 54


 2117 01cb 26000000 		.4byte	.LVL41
 2118 01cf 44000000 		.4byte	.LFE15
 2119 01d3 0400     		.2byte	0x4
 2120 01d5 F3       		.byte	0xf3
 2121 01d6 01       		.uleb128 0x1
 2122 01d7 50       		.byte	0x50
 2123 01d8 9F       		.byte	0x9f
 2124 01d9 00000000 		.4byte	0
 2125 01dd 00000000 		.4byte	0
 2126              	.LLST13:
 2127 01e1 00000000 		.4byte	.LVL34
 2128 01e5 0A000000 		.4byte	.LVL35
 2129 01e9 0100     		.2byte	0x1
 2130 01eb 51       		.byte	0x51
 2131 01ec 0A000000 		.4byte	.LVL35
 2132 01f0 0E000000 		.4byte	.LVL36
 2133 01f4 0400     		.2byte	0x4
 2134 01f6 F3       		.byte	0xf3
 2135 01f7 01       		.uleb128 0x1
 2136 01f8 51       		.byte	0x51
 2137 01f9 9F       		.byte	0x9f
 2138 01fa 0E000000 		.4byte	.LVL36
 2139 01fe 1A000000 		.4byte	.LVL37
 2140 0202 0100     		.2byte	0x1
 2141 0204 51       		.byte	0x51
 2142 0205 22000000 		.4byte	.LVL39
 2143 0209 24000000 		.4byte	.LVL40
 2144 020d 0100     		.2byte	0x1
 2145 020f 51       		.byte	0x51
 2146 0210 00000000 		.4byte	0
 2147 0214 00000000 		.4byte	0
 2148              	.LLST14:
 2149 0218 2E000000 		.4byte	.LVL42
 2150 021c 30000000 		.4byte	.LVL43
 2151 0220 0900     		.2byte	0x9
 2152 0222 74       		.byte	0x74
 2153 0223 00       		.sleb128 0
 2154 0224 70       		.byte	0x70
 2155 0225 00       		.sleb128 0
 2156 0226 22       		.byte	0x22
 2157 0227 71       		.byte	0x71
 2158 0228 00       		.sleb128 0
 2159 0229 1B       		.byte	0x1b
 2160 022a 9F       		.byte	0x9f
 2161 022b 00000000 		.4byte	0
 2162 022f 00000000 		.4byte	0
 2163              	.LLST15:
 2164 0233 00000000 		.4byte	.LVL45
 2165 0237 0E000000 		.4byte	.LVL47
 2166 023b 0100     		.2byte	0x1
 2167 023d 50       		.byte	0x50
 2168 023e 0E000000 		.4byte	.LVL47
 2169 0242 38000000 		.4byte	.LFE16
 2170 0246 0400     		.2byte	0x4
 2171 0248 F3       		.byte	0xf3
 2172 0249 01       		.uleb128 0x1
 2173 024a 50       		.byte	0x50
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 55


 2174 024b 9F       		.byte	0x9f
 2175 024c 00000000 		.4byte	0
 2176 0250 00000000 		.4byte	0
 2177              	.LLST16:
 2178 0254 00000000 		.4byte	.LVL45
 2179 0258 0A000000 		.4byte	.LVL46
 2180 025c 0100     		.2byte	0x1
 2181 025e 51       		.byte	0x51
 2182 025f 0A000000 		.4byte	.LVL46
 2183 0263 18000000 		.4byte	.LVL49
 2184 0267 0100     		.2byte	0x1
 2185 0269 51       		.byte	0x51
 2186 026a 00000000 		.4byte	0
 2187 026e 00000000 		.4byte	0
 2188              	.LLST17:
 2189 0272 10000000 		.4byte	.LVL48
 2190 0276 18000000 		.4byte	.LVL49
 2191 027a 1A00     		.2byte	0x1a
 2192 027c 71       		.byte	0x71
 2193 027d 00       		.sleb128 0
 2194 027e F7       		.byte	0xf7
 2195 027f 41       		.uleb128 0x41
 2196 0280 F7       		.byte	0xf7
 2197 0281 25       		.uleb128 0x25
 2198 0282 0C       		.byte	0xc
 2199 0283 80969800 		.4byte	0x989680
 2200 0287 F7       		.byte	0xf7
 2201 0288 25       		.uleb128 0x25
 2202 0289 1E       		.byte	0x1e
 2203 028a F7       		.byte	0xf7
 2204 028b 33       		.uleb128 0x33
 2205 028c 74       		.byte	0x74
 2206 028d 00       		.sleb128 0
 2207 028e F7       		.byte	0xf7
 2208 028f 3A       		.uleb128 0x3a
 2209 0290 F7       		.byte	0xf7
 2210 0291 33       		.uleb128 0x33
 2211 0292 1B       		.byte	0x1b
 2212 0293 F7       		.byte	0xf7
 2213 0294 25       		.uleb128 0x25
 2214 0295 9F       		.byte	0x9f
 2215 0296 00000000 		.4byte	0
 2216 029a 00000000 		.4byte	0
 2217              	.LLST18:
 2218 029e 00000000 		.4byte	.LVL52
 2219 02a2 0A000000 		.4byte	.LVL53
 2220 02a6 0100     		.2byte	0x1
 2221 02a8 50       		.byte	0x50
 2222 02a9 0A000000 		.4byte	.LVL53
 2223 02ad 3C000000 		.4byte	.LFE17
 2224 02b1 0400     		.2byte	0x4
 2225 02b3 F3       		.byte	0xf3
 2226 02b4 01       		.uleb128 0x1
 2227 02b5 50       		.byte	0x50
 2228 02b6 9F       		.byte	0x9f
 2229 02b7 00000000 		.4byte	0
 2230 02bb 00000000 		.4byte	0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 56


 2231              	.LLST19:
 2232 02bf 00000000 		.4byte	.LVL52
 2233 02c3 0C000000 		.4byte	.LVL54
 2234 02c7 0100     		.2byte	0x1
 2235 02c9 51       		.byte	0x51
 2236 02ca 0C000000 		.4byte	.LVL54
 2237 02ce 15000000 		.4byte	.LVL56-1
 2238 02d2 0100     		.2byte	0x1
 2239 02d4 51       		.byte	0x51
 2240 02d5 00000000 		.4byte	0
 2241 02d9 00000000 		.4byte	0
 2242              	.LLST20:
 2243 02dd 10000000 		.4byte	.LVL55
 2244 02e1 15000000 		.4byte	.LVL56-1
 2245 02e5 1600     		.2byte	0x16
 2246 02e7 71       		.byte	0x71
 2247 02e8 00       		.sleb128 0
 2248 02e9 F7       		.byte	0xf7
 2249 02ea 41       		.uleb128 0x41
 2250 02eb F7       		.byte	0xf7
 2251 02ec 2C       		.uleb128 0x2c
 2252 02ed F4       		.byte	0xf4
 2253 02ee 2C       		.uleb128 0x2c
 2254 02ef 04       		.byte	0x4
 2255 02f0 00002041 		.4byte	0x41200000
 2256 02f4 1E       		.byte	0x1e
 2257 02f5 75       		.byte	0x75
 2258 02f6 00       		.sleb128 0
 2259 02f7 F7       		.byte	0xf7
 2260 02f8 3A       		.uleb128 0x3a
 2261 02f9 F7       		.byte	0xf7
 2262 02fa 2C       		.uleb128 0x2c
 2263 02fb 1B       		.byte	0x1b
 2264 02fc 9F       		.byte	0x9f
 2265 02fd 00000000 		.4byte	0
 2266 0301 00000000 		.4byte	0
 2267              		.section	.debug_aranges,"",%progbits
 2268 0000 A4000000 		.4byte	0xa4
 2269 0004 0200     		.2byte	0x2
 2270 0006 00000000 		.4byte	.Ldebug_info0
 2271 000a 04       		.byte	0x4
 2272 000b 00       		.byte	0
 2273 000c 0000     		.2byte	0
 2274 000e 0000     		.2byte	0
 2275 0010 00000000 		.4byte	.LFB1
 2276 0014 04010000 		.4byte	.LFE1-.LFB1
 2277 0018 00000000 		.4byte	.LFB2
 2278 001c 20000000 		.4byte	.LFE2-.LFB2
 2279 0020 00000000 		.4byte	.LFB0
 2280 0024 1C000000 		.4byte	.LFE0-.LFB0
 2281 0028 00000000 		.4byte	.LFB3
 2282 002c 10000000 		.4byte	.LFE3-.LFB3
 2283 0030 00000000 		.4byte	.LFB4
 2284 0034 14000000 		.4byte	.LFE4-.LFB4
 2285 0038 00000000 		.4byte	.LFB5
 2286 003c 14000000 		.4byte	.LFE5-.LFB5
 2287 0040 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 57


 2288 0044 24000000 		.4byte	.LFE6-.LFB6
 2289 0048 00000000 		.4byte	.LFB7
 2290 004c 18000000 		.4byte	.LFE7-.LFB7
 2291 0050 00000000 		.4byte	.LFB8
 2292 0054 10000000 		.4byte	.LFE8-.LFB8
 2293 0058 00000000 		.4byte	.LFB9
 2294 005c 18000000 		.4byte	.LFE9-.LFB9
 2295 0060 00000000 		.4byte	.LFB10
 2296 0064 18000000 		.4byte	.LFE10-.LFB10
 2297 0068 00000000 		.4byte	.LFB11
 2298 006c 10000000 		.4byte	.LFE11-.LFB11
 2299 0070 00000000 		.4byte	.LFB12
 2300 0074 10000000 		.4byte	.LFE12-.LFB12
 2301 0078 00000000 		.4byte	.LFB13
 2302 007c 0C000000 		.4byte	.LFE13-.LFB13
 2303 0080 00000000 		.4byte	.LFB14
 2304 0084 0C000000 		.4byte	.LFE14-.LFB14
 2305 0088 00000000 		.4byte	.LFB15
 2306 008c 44000000 		.4byte	.LFE15-.LFB15
 2307 0090 00000000 		.4byte	.LFB16
 2308 0094 38000000 		.4byte	.LFE16-.LFB16
 2309 0098 00000000 		.4byte	.LFB17
 2310 009c 3C000000 		.4byte	.LFE17-.LFB17
 2311 00a0 00000000 		.4byte	0
 2312 00a4 00000000 		.4byte	0
 2313              		.section	.debug_ranges,"",%progbits
 2314              	.Ldebug_ranges0:
 2315 0000 00000000 		.4byte	.LFB1
 2316 0004 04010000 		.4byte	.LFE1
 2317 0008 00000000 		.4byte	.LFB2
 2318 000c 20000000 		.4byte	.LFE2
 2319 0010 00000000 		.4byte	.LFB0
 2320 0014 1C000000 		.4byte	.LFE0
 2321 0018 00000000 		.4byte	.LFB3
 2322 001c 10000000 		.4byte	.LFE3
 2323 0020 00000000 		.4byte	.LFB4
 2324 0024 14000000 		.4byte	.LFE4
 2325 0028 00000000 		.4byte	.LFB5
 2326 002c 14000000 		.4byte	.LFE5
 2327 0030 00000000 		.4byte	.LFB6
 2328 0034 24000000 		.4byte	.LFE6
 2329 0038 00000000 		.4byte	.LFB7
 2330 003c 18000000 		.4byte	.LFE7
 2331 0040 00000000 		.4byte	.LFB8
 2332 0044 10000000 		.4byte	.LFE8
 2333 0048 00000000 		.4byte	.LFB9
 2334 004c 18000000 		.4byte	.LFE9
 2335 0050 00000000 		.4byte	.LFB10
 2336 0054 18000000 		.4byte	.LFE10
 2337 0058 00000000 		.4byte	.LFB11
 2338 005c 10000000 		.4byte	.LFE11
 2339 0060 00000000 		.4byte	.LFB12
 2340 0064 10000000 		.4byte	.LFE12
 2341 0068 00000000 		.4byte	.LFB13
 2342 006c 0C000000 		.4byte	.LFE13
 2343 0070 00000000 		.4byte	.LFB14
 2344 0074 0C000000 		.4byte	.LFE14
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 58


 2345 0078 00000000 		.4byte	.LFB15
 2346 007c 44000000 		.4byte	.LFE15
 2347 0080 00000000 		.4byte	.LFB16
 2348 0084 38000000 		.4byte	.LFE16
 2349 0088 00000000 		.4byte	.LFB17
 2350 008c 3C000000 		.4byte	.LFE17
 2351 0090 00000000 		.4byte	0
 2352 0094 00000000 		.4byte	0
 2353              		.section	.debug_line,"",%progbits
 2354              	.Ldebug_line0:
 2355 0000 DD020000 		.section	.debug_str,"MS",%progbits,1
 2355      02004D00 
 2355      00000201 
 2355      FB0E0D00 
 2355      01010101 
 2356              	.LASF11:
 2357 0000 75696E74 		.ascii	"uint16\000"
 2357      313600
 2358              	.LASF48:
 2359 0007 61646347 		.ascii	"adcGain\000"
 2359      61696E00 
 2360              	.LASF24:
 2361 000f 636F756E 		.ascii	"counts\000"
 2361      747300
 2362              	.LASF54:
 2363 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2363      436F756E 
 2363      7473546F 
 2363      5F566F6C 
 2363      747300
 2364              	.LASF63:
 2365 0029 443A5C55 		.ascii	"D:\\Users\\sdevasenapathy\\atoms\\AtomWorkspace\\At"
 2365      73657273 
 2365      5C736465 
 2365      76617365 
 2365      6E617061 
 2366 0057 6F6D2E63 		.ascii	"om.cydsn\000"
 2366      7964736E 
 2366      00
 2367              	.LASF25:
 2368 0060 4144435F 		.ascii	"ADC_Init\000"
 2368      496E6974 
 2368      00
 2369              	.LASF0:
 2370 0069 6C6F6E67 		.ascii	"long long unsigned int\000"
 2370      206C6F6E 
 2370      6720756E 
 2370      7369676E 
 2370      65642069 
 2371              	.LASF56:
 2372 0080 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2372      496E7075 
 2372      7473506C 
 2372      6163656D 
 2372      656E7400 
 2373              	.LASF29:
 2374 0094 4144435F 		.ascii	"ADC_StartConvert\000"
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 59


 2374      53746172 
 2374      74436F6E 
 2374      76657274 
 2374      00
 2375              	.LASF2:
 2376 00a5 6C6F6E67 		.ascii	"long long int\000"
 2376      206C6F6E 
 2376      6720696E 
 2376      7400
 2377              	.LASF4:
 2378 00b3 7369676E 		.ascii	"signed char\000"
 2378      65642063 
 2378      68617200 
 2379              	.LASF31:
 2380 00bf 73746174 		.ascii	"status\000"
 2380      757300
 2381              	.LASF14:
 2382 00c6 696E7433 		.ascii	"int32\000"
 2382      3200
 2383              	.LASF27:
 2384 00cc 4144435F 		.ascii	"ADC_Start\000"
 2384      53746172 
 2384      7400
 2385              	.LASF7:
 2386 00d6 6C6F6E67 		.ascii	"long int\000"
 2386      20696E74 
 2386      00
 2387              	.LASF52:
 2388 00df 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2388      436F756E 
 2388      7473546F 
 2388      5F75566F 
 2388      6C747300 
 2389              	.LASF60:
 2390 00f3 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2390      636F756E 
 2390      74735065 
 2390      72313056 
 2390      6F6C7400 
 2391              	.LASF10:
 2392 0107 75696E74 		.ascii	"uint8\000"
 2392      3800
 2393              	.LASF66:
 2394 010d 43794465 		.ascii	"CyDelayUs\000"
 2394      6C617955 
 2394      7300
 2395              	.LASF16:
 2396 0117 646F7562 		.ascii	"double\000"
 2396      6C6500
 2397              	.LASF12:
 2398 011e 75696E74 		.ascii	"uint32\000"
 2398      333200
 2399              	.LASF38:
 2400 0125 6D61736B 		.ascii	"mask\000"
 2400      00
 2401              	.LASF58:
 2402 012a 4144435F 		.ascii	"ADC_initVar\000"
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 60


 2402      696E6974 
 2402      56617200 
 2403              	.LASF34:
 2404 0136 7265744D 		.ascii	"retMode\000"
 2404      6F646500 
 2405              	.LASF43:
 2406 013e 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2406      5365744C 
 2406      696D6974 
 2406      4D61736B 
 2406      00
 2407              	.LASF9:
 2408 014f 756E7369 		.ascii	"unsigned int\000"
 2408      676E6564 
 2408      20696E74 
 2408      00
 2409              	.LASF53:
 2410 015c 75566F6C 		.ascii	"uVolts\000"
 2410      747300
 2411              	.LASF8:
 2412 0163 6C6F6E67 		.ascii	"long unsigned int\000"
 2412      20756E73 
 2412      69676E65 
 2412      6420696E 
 2412      7400
 2413              	.LASF44:
 2414 0175 4144435F 		.ascii	"ADC_SetSatMask\000"
 2414      53657453 
 2414      61744D61 
 2414      736B00
 2415              	.LASF55:
 2416 0184 766F6C74 		.ascii	"volts\000"
 2416      7300
 2417              	.LASF23:
 2418 018a 746D7052 		.ascii	"tmpRegVal\000"
 2418      65675661 
 2418      6C00
 2419              	.LASF6:
 2420 0194 73686F72 		.ascii	"short unsigned int\000"
 2420      7420756E 
 2420      7369676E 
 2420      65642069 
 2420      6E7400
 2421              	.LASF65:
 2422 01a7 4379496E 		.ascii	"CyIntSetVector\000"
 2422      74536574 
 2422      56656374 
 2422      6F7200
 2423              	.LASF30:
 2424 01b6 4144435F 		.ascii	"ADC_StopConvert\000"
 2424      53746F70 
 2424      436F6E76 
 2424      65727400 
 2425              	.LASF51:
 2426 01c6 6D566F6C 		.ascii	"mVolts\000"
 2426      747300
 2427              	.LASF19:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 61


 2428 01cd 72656733 		.ascii	"reg32\000"
 2428      3200
 2429              	.LASF15:
 2430 01d3 666C6F61 		.ascii	"float32\000"
 2430      74333200 
 2431              	.LASF21:
 2432 01db 73697A65 		.ascii	"sizetype\000"
 2432      74797065 
 2432      00
 2433              	.LASF40:
 2434 01e4 6C6F774C 		.ascii	"lowLimit\000"
 2434      696D6974 
 2434      00
 2435              	.LASF41:
 2436 01ed 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2436      53657448 
 2436      6967684C 
 2436      696D6974 
 2436      00
 2437              	.LASF32:
 2438 01fe 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2438      4973456E 
 2438      64436F6E 
 2438      76657273 
 2438      696F6E00 
 2439              	.LASF17:
 2440 0212 696E7436 		.ascii	"int64\000"
 2440      3400
 2441              	.LASF64:
 2442 0218 4379496E 		.ascii	"CyIntSetPriority\000"
 2442      74536574 
 2442      5072696F 
 2442      72697479 
 2442      00
 2443              	.LASF37:
 2444 0229 4144435F 		.ascii	"ADC_SetChanMask\000"
 2444      53657443 
 2444      68616E4D 
 2444      61736B00 
 2445              	.LASF47:
 2446 0239 4144435F 		.ascii	"ADC_SetGain\000"
 2446      53657447 
 2446      61696E00 
 2447              	.LASF1:
 2448 0245 666C6F61 		.ascii	"float\000"
 2448      7400
 2449              	.LASF42:
 2450 024b 68696768 		.ascii	"highLimit\000"
 2450      4C696D69 
 2450      7400
 2451              	.LASF49:
 2452 0255 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2452      436F756E 
 2452      7473546F 
 2452      5F6D566F 
 2452      6C747300 
 2453              	.LASF39:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 62


 2454 0269 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2454      5365744C 
 2454      6F774C69 
 2454      6D697400 
 2455              	.LASF62:
 2456 0279 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2456      6E657261 
 2456      7465645F 
 2456      536F7572 
 2456      63655C50 
 2457              	.LASF5:
 2458 0298 756E7369 		.ascii	"unsigned char\000"
 2458      676E6564 
 2458      20636861 
 2458      7200
 2459              	.LASF59:
 2460 02a6 4144435F 		.ascii	"ADC_offset\000"
 2460      6F666673 
 2460      657400
 2461              	.LASF3:
 2462 02b1 73686F72 		.ascii	"short int\000"
 2462      7420696E 
 2462      7400
 2463              	.LASF28:
 2464 02bb 4144435F 		.ascii	"ADC_Stop\000"
 2464      53746F70 
 2464      00
 2465              	.LASF22:
 2466 02c4 63684E75 		.ascii	"chNum\000"
 2466      6D00
 2467              	.LASF35:
 2468 02ca 6368616E 		.ascii	"chan\000"
 2468      00
 2469              	.LASF18:
 2470 02cf 63686172 		.ascii	"char\000"
 2470      00
 2471              	.LASF20:
 2472 02d4 63796973 		.ascii	"cyisraddress\000"
 2472      72616464 
 2472      72657373 
 2472      00
 2473              	.LASF57:
 2474 02e1 4144435F 		.ascii	"ADC_channelsConfig\000"
 2474      6368616E 
 2474      6E656C73 
 2474      436F6E66 
 2474      696700
 2475              	.LASF61:
 2476 02f4 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2476      4320342E 
 2476      382E3420 
 2476      32303134 
 2476      30353236 
 2477 0327 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2477      20726576 
 2477      6973696F 
 2477      6E203231 
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\cc7gCBjG.s 			page 63


 2477      31333538 
 2478 035a 73202D66 		.ascii	"s -ffunction-sections\000"
 2478      66756E63 
 2478      74696F6E 
 2478      2D736563 
 2478      74696F6E 
 2479              	.LASF46:
 2480 0370 6F666673 		.ascii	"offset\000"
 2480      657400
 2481              	.LASF50:
 2482 0377 61646343 		.ascii	"adcCounts\000"
 2482      6F756E74 
 2482      7300
 2483              	.LASF26:
 2484 0381 4144435F 		.ascii	"ADC_Enable\000"
 2484      456E6162 
 2484      6C6500
 2485              	.LASF13:
 2486 038c 696E7431 		.ascii	"int16\000"
 2486      3600
 2487              	.LASF45:
 2488 0392 4144435F 		.ascii	"ADC_SetOffset\000"
 2488      5365744F 
 2488      66667365 
 2488      7400
 2489              	.LASF36:
 2490 03a0 72657375 		.ascii	"result\000"
 2490      6C7400
 2491              	.LASF33:
 2492 03a7 4144435F 		.ascii	"ADC_GetResult16\000"
 2492      47657452 
 2492      6573756C 
 2492      74313600 
 2493              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
