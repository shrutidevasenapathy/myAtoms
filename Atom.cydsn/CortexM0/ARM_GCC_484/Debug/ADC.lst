ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,4,4
  24              		.comm	ADC_countsPer10Volt,8,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 8
  29              	ADC_channelsConfig:
  30 0000 00000000 		.space	8
  30      00000000 
  31              		.section	.text.ADC_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_Start, %function
  37              	ADC_Start:
  38              	.LFB0:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 2


  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u, 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 3


  48              		.loc 1 66 0
  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_Init
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_Enable
  72:.\Generated_Source\PSoC4/ADC.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_initVar
  70              		.cfi_endproc
  71              	.LFE0:
  72              		.size	ADC_Start, .-ADC_Start
  73              		.section	.text.ADC_Init,"ax",%progbits
  74              		.align	2
  75              		.global	ADC_Init
  76              		.code	16
  77              		.thumb_func
  78              		.type	ADC_Init, %function
  79              	ADC_Init:
  80              	.LFB1:
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 4


  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  81              		.loc 1 95 0
  82              		.cfi_startproc
  83 0000 90B5     		push	{r4, r7, lr}
  84              		.cfi_def_cfa_offset 12
  85              		.cfi_offset 4, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 85B0     		sub	sp, sp, #20
  89              		.cfi_def_cfa_offset 32
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****         };
 136:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 5


 137:.\Generated_Source\PSoC4/ADC.c **** 
 138:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 139:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 140:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  92              		.loc 1 140 0
  93 0006 0E20     		mov	r0, #14
  94 0008 0321     		mov	r1, #3
  95 000a FFF7FEFF 		bl	CyIntSetPriority
 141:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  96              		.loc 1 141 0
  97 000e 614B     		ldr	r3, .L17
  98 0010 0E20     		mov	r0, #14
  99 0012 191C     		mov	r1, r3
 100 0014 FFF7FEFF 		bl	CyIntSetVector
 142:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 143:.\Generated_Source\PSoC4/ADC.c **** 
 144:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 145:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 101              		.loc 1 145 0
 102 0018 5F4B     		ldr	r3, .L17+4
 103 001a 0322     		mov	r2, #3
 104 001c 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 105              		.loc 1 146 0
 106 001e 5F4B     		ldr	r3, .L17+8
 107 0020 5E4A     		ldr	r2, .L17+8
 108 0022 1168     		ldr	r1, [r2]
 147:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 148:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 109              		.loc 1 148 0
 110 0024 5E4A     		ldr	r2, .L17+12
 111 0026 1268     		ldr	r2, [r2]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 112              		.loc 1 146 0
 113 0028 002A     		cmp	r2, #0
 114 002a 01DA     		bge	.L6
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 146 0 is_stmt 0 discriminator 1
 116 002c 5D4A     		ldr	r2, .L17+16
 117 002e 00E0     		b	.L7
 118              	.L6:
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 119              		.loc 1 146 0 discriminator 2
 120 0030 5D4A     		ldr	r2, .L17+20
 121              	.L7:
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 122              		.loc 1 146 0 discriminator 3
 123 0032 0A43     		orr	r2, r1
 124 0034 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 125              		.loc 1 150 0 is_stmt 1 discriminator 3
 126 0036 5D4B     		ldr	r3, .L17+24
 127 0038 5D4A     		ldr	r2, .L17+28
 128 003a 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 129              		.loc 1 151 0 discriminator 3
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 6


 130 003c 5D4B     		ldr	r3, .L17+32
 131 003e 5E4A     		ldr	r2, .L17+36
 132 0040 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 133              		.loc 1 152 0 discriminator 3
 134 0042 5E4B     		ldr	r3, .L17+40
 135 0044 0022     		mov	r2, #0
 136 0046 1A60     		str	r2, [r3]
 153:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 137              		.loc 1 153 0 discriminator 3
 138 0048 5D4B     		ldr	r3, .L17+44
 139 004a 5E4A     		ldr	r2, .L17+48
 140 004c 1A60     		str	r2, [r3]
 154:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 141              		.loc 1 154 0 discriminator 3
 142 004e 5E4B     		ldr	r3, .L17+52
 143 0050 5C4A     		ldr	r2, .L17+48
 144 0052 1A60     		str	r2, [r3]
 155:.\Generated_Source\PSoC4/ADC.c ****     
 156:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 157:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 158:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 145              		.loc 1 158 0 discriminator 3
 146 0054 5D4B     		ldr	r3, .L17+56
 147 0056 5D4A     		ldr	r2, .L17+56
 148 0058 1268     		ldr	r2, [r2]
 149 005a 8021     		mov	r1, #128
 150 005c 4902     		lsl	r1, r1, #9
 151 005e 0A43     		orr	r2, r1
 152 0060 1A60     		str	r2, [r3]
 159:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 160:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 161:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 153              		.loc 1 161 0 discriminator 3
 154 0062 5B4B     		ldr	r3, .L17+60
 155 0064 5A4A     		ldr	r2, .L17+60
 156 0066 1268     		ldr	r2, [r2]
 157 0068 8021     		mov	r1, #128
 158 006a 4902     		lsl	r1, r1, #9
 159 006c 0A43     		orr	r2, r1
 160 006e 1A60     		str	r2, [r3]
 162:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 163:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 164:.\Generated_Source\PSoC4/ADC.c **** 
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 161              		.loc 1 165 0 discriminator 3
 162 0070 584B     		ldr	r3, .L17+64
 163 0072 0022     		mov	r2, #0
 164 0074 1A60     		str	r2, [r3]
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 165              		.loc 1 166 0 discriminator 3
 166 0076 584B     		ldr	r3, .L17+68
 167 0078 0022     		mov	r2, #0
 168 007a 1A60     		str	r2, [r3]
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 169              		.loc 1 167 0 discriminator 3
 170 007c 574B     		ldr	r3, .L17+72
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 7


 171 007e 0122     		mov	r2, #1
 172 0080 1A60     		str	r2, [r3]
 168:.\Generated_Source\PSoC4/ADC.c **** 
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 173              		.loc 1 170 0 discriminator 3
 174 0082 574B     		ldr	r3, .L17+76
 175 0084 0222     		mov	r2, #2
 176 0086 1A60     		str	r2, [r3]
 171:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 172:.\Generated_Source\PSoC4/ADC.c **** 
 173:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 177              		.loc 1 174 0 discriminator 3
 178 0088 564B     		ldr	r3, .L17+80
 179 008a 1B68     		ldr	r3, [r3]
 180 008c 7B60     		str	r3, [r7, #4]
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 181              		.loc 1 175 0 discriminator 3
 182 008e 7A68     		ldr	r2, [r7, #4]
 183 0090 554B     		ldr	r3, .L17+84
 184 0092 1340     		and	r3, r2
 185 0094 7B60     		str	r3, [r7, #4]
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 178:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 179:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 180:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 181:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 186              		.loc 1 181 0 discriminator 3
 187 0096 7B68     		ldr	r3, [r7, #4]
 188 0098 0122     		mov	r2, #1
 189 009a 1343     		orr	r3, r2
 190 009c 7B60     		str	r3, [r7, #4]
 182:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 183:.\Generated_Source\PSoC4/ADC.c ****     #else
 184:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 185:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 186:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 187:.\Generated_Source\PSoC4/ADC.c ****         #else
 188:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 189:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 190:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 191:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 192:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 193:.\Generated_Source\PSoC4/ADC.c ****     
 194:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 191              		.loc 1 194 0 discriminator 3
 192 009e 514B     		ldr	r3, .L17+80
 193 00a0 7A68     		ldr	r2, [r7, #4]
 194 00a2 1A60     		str	r2, [r3]
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 197:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 198:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 199:.\Generated_Source\PSoC4/ADC.c **** 
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 8


 195              		.loc 1 200 0 discriminator 3
 196 00a4 0023     		mov	r3, #0
 197 00a6 FB60     		str	r3, [r7, #12]
 198 00a8 6EE0     		b	.L8
 199              	.L16:
 201:.\Generated_Source\PSoC4/ADC.c ****     {
 202:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 200              		.loc 1 202 0
 201 00aa 504B     		ldr	r3, .L17+88
 202 00ac FA68     		ldr	r2, [r7, #12]
 203 00ae 9200     		lsl	r2, r2, #2
 204 00b0 D258     		ldr	r2, [r2, r3]
 205 00b2 DC23     		mov	r3, #220
 206 00b4 9B01     		lsl	r3, r3, #6
 207 00b6 1340     		and	r3, r2
 208 00b8 7B60     		str	r3, [r7, #4]
 203:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 204:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 209              		.loc 1 204 0
 210 00ba 4D4A     		ldr	r2, .L17+92
 211 00bc FB68     		ldr	r3, [r7, #12]
 212 00be D318     		add	r3, r2, r3
 213 00c0 1B78     		ldrb	r3, [r3]
 214 00c2 7A68     		ldr	r2, [r7, #4]
 215 00c4 1343     		orr	r3, r2
 216 00c6 7B60     		str	r3, [r7, #4]
 205:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 206:.\Generated_Source\PSoC4/ADC.c ****         
 207:.\Generated_Source\PSoC4/ADC.c ****         
 208:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 209:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 210:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 211:.\Generated_Source\PSoC4/ADC.c ****         */
 212:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 213:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 214:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 215:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 218:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 219:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 220:.\Generated_Source\PSoC4/ADC.c ****         {
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 217              		.loc 1 221 0
 218 00c8 FB68     		ldr	r3, [r7, #12]
 219 00ca 9B00     		lsl	r3, r3, #2
 220 00cc 494A     		ldr	r2, .L17+96
 221 00ce 9B18     		add	r3, r3, r2
 222 00d0 7A68     		ldr	r2, [r7, #4]
 223 00d2 1A60     		str	r2, [r3]
 222:.\Generated_Source\PSoC4/ADC.c **** 
 223:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 224              		.loc 1 223 0
 225 00d4 454B     		ldr	r3, .L17+88
 226 00d6 FA68     		ldr	r2, [r7, #12]
 227 00d8 9200     		lsl	r2, r2, #2
 228 00da D258     		ldr	r2, [r2, r3]
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 9


 229 00dc 0123     		mov	r3, #1
 230 00de 1340     		and	r3, r2
 231 00e0 0AD0     		beq	.L9
 224:.\Generated_Source\PSoC4/ADC.c ****             {
 225:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 232              		.loc 1 225 0
 233 00e2 3C4B     		ldr	r3, .L17+64
 234 00e4 3B4A     		ldr	r2, .L17+64
 235 00e6 1168     		ldr	r1, [r2]
 236 00e8 FA68     		ldr	r2, [r7, #12]
 237 00ea 0120     		mov	r0, #1
 238 00ec 041C     		mov	r4, r0
 239 00ee 9440     		lsl	r4, r4, r2
 240 00f0 221C     		mov	r2, r4
 241 00f2 92B2     		uxth	r2, r2
 242 00f4 0A43     		orr	r2, r1
 243 00f6 1A60     		str	r2, [r3]
 244              	.L9:
 226:.\Generated_Source\PSoC4/ADC.c ****             }
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 245              		.loc 1 228 0
 246 00f8 3C4B     		ldr	r3, .L17+88
 247 00fa FA68     		ldr	r2, [r7, #12]
 248 00fc 9200     		lsl	r2, r2, #2
 249 00fe D258     		ldr	r2, [r2, r3]
 250 0100 0223     		mov	r3, #2
 251 0102 1340     		and	r3, r2
 252 0104 0AD0     		beq	.L10
 229:.\Generated_Source\PSoC4/ADC.c ****             {
 230:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 253              		.loc 1 230 0
 254 0106 344B     		ldr	r3, .L17+68
 255 0108 334A     		ldr	r2, .L17+68
 256 010a 1168     		ldr	r1, [r2]
 257 010c FA68     		ldr	r2, [r7, #12]
 258 010e 0120     		mov	r0, #1
 259 0110 041C     		mov	r4, r0
 260 0112 9440     		lsl	r4, r4, r2
 261 0114 221C     		mov	r2, r4
 262 0116 92B2     		uxth	r2, r2
 263 0118 0A43     		orr	r2, r1
 264 011a 1A60     		str	r2, [r3]
 265              	.L10:
 231:.\Generated_Source\PSoC4/ADC.c ****             }
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 234:.\Generated_Source\PSoC4/ADC.c ****             else
 235:.\Generated_Source\PSoC4/ADC.c ****             {
 236:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 239:.\Generated_Source\PSoC4/ADC.c ****                 {
 240:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 241:.\Generated_Source\PSoC4/ADC.c ****                 }
 242:.\Generated_Source\PSoC4/ADC.c **** 
 243:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 10


 244:.\Generated_Source\PSoC4/ADC.c ****                 {
 245:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 246:.\Generated_Source\PSoC4/ADC.c ****                 }
 247:.\Generated_Source\PSoC4/ADC.c ****             }
 248:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 249:.\Generated_Source\PSoC4/ADC.c **** 
 250:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 266              		.loc 1 250 0
 267 011c 334B     		ldr	r3, .L17+88
 268 011e FA68     		ldr	r2, [r7, #12]
 269 0120 9200     		lsl	r2, r2, #2
 270 0122 D258     		ldr	r2, [r2, r3]
 271 0124 8023     		mov	r3, #128
 272 0126 9B00     		lsl	r3, r3, #2
 273 0128 1340     		and	r3, r2
 274 012a 03D0     		beq	.L11
 251:.\Generated_Source\PSoC4/ADC.c ****         {
 252:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 275              		.loc 1 252 0
 276 012c 8023     		mov	r3, #128
 277 012e 5B00     		lsl	r3, r3, #1
 278 0130 BB60     		str	r3, [r7, #8]
 279 0132 02E0     		b	.L12
 280              	.L11:
 253:.\Generated_Source\PSoC4/ADC.c ****         }
 254:.\Generated_Source\PSoC4/ADC.c ****         else
 255:.\Generated_Source\PSoC4/ADC.c ****         {
 256:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 281              		.loc 1 256 0
 282 0134 8023     		mov	r3, #128
 283 0136 5B01     		lsl	r3, r3, #5
 284 0138 BB60     		str	r3, [r7, #8]
 285              	.L12:
 257:.\Generated_Source\PSoC4/ADC.c ****         }
 258:.\Generated_Source\PSoC4/ADC.c **** 
 259:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 286              		.loc 1 259 0
 287 013a 2C4B     		ldr	r3, .L17+88
 288 013c FA68     		ldr	r2, [r7, #12]
 289 013e 9200     		lsl	r2, r2, #2
 290 0140 D258     		ldr	r2, [r2, r3]
 291 0142 8023     		mov	r3, #128
 292 0144 5B00     		lsl	r3, r3, #1
 293 0146 1340     		and	r3, r2
 294 0148 05D1     		bne	.L13
 260:.\Generated_Source\PSoC4/ADC.c ****         {
 261:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 262:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 263:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 264:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 265:.\Generated_Source\PSoC4/ADC.c ****             #else
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 295              		.loc 1 266 0
 296 014a 2B4B     		ldr	r3, .L17+100
 297 014c FA68     		ldr	r2, [r7, #12]
 298 014e 5200     		lsl	r2, r2, #1
 299 0150 0021     		mov	r1, #0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 11


 300 0152 D152     		strh	r1, [r2, r3]
 301 0154 04E0     		b	.L14
 302              	.L13:
 267:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 268:.\Generated_Source\PSoC4/ADC.c ****         }
 269:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 270:.\Generated_Source\PSoC4/ADC.c ****         {
 271:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 272:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 273:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 274:.\Generated_Source\PSoC4/ADC.c ****             #else
 275:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 303              		.loc 1 275 0
 304 0156 284B     		ldr	r3, .L17+100
 305 0158 FA68     		ldr	r2, [r7, #12]
 306 015a 5200     		lsl	r2, r2, #1
 307 015c 0021     		mov	r1, #0
 308 015e D152     		strh	r1, [r2, r3]
 309              	.L14:
 276:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 277:.\Generated_Source\PSoC4/ADC.c ****         }
 278:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 310              		.loc 1 279 0
 311 0160 BB68     		ldr	r3, [r7, #8]
 312 0162 264A     		ldr	r2, .L17+104
 313 0164 5343     		mul	r3, r2
 314 0166 8022     		mov	r2, #128
 315 0168 D200     		lsl	r2, r2, #3
 316 016a 9B18     		add	r3, r3, r2
 280:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 317              		.loc 1 280 0
 318 016c 002B     		cmp	r3, #0
 319 016e 01DA     		bge	.L15
 320 0170 234C     		ldr	r4, .L17+108
 321 0172 1B19     		add	r3, r3, r4
 322              	.L15:
 323 0174 DB12     		asr	r3, r3, #11
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 324              		.loc 1 279 0
 325 0176 9BB2     		uxth	r3, r3
 326 0178 19B2     		sxth	r1, r3
 327 017a 224B     		ldr	r3, .L17+112
 328 017c FA68     		ldr	r2, [r7, #12]
 329 017e 9200     		lsl	r2, r2, #2
 330 0180 D150     		str	r1, [r2, r3]
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 331              		.loc 1 200 0
 332 0182 FB68     		ldr	r3, [r7, #12]
 333 0184 0133     		add	r3, r3, #1
 334 0186 FB60     		str	r3, [r7, #12]
 335              	.L8:
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 336              		.loc 1 200 0 is_stmt 0 discriminator 1
 337 0188 FB68     		ldr	r3, [r7, #12]
 338 018a 012B     		cmp	r3, #1
 339 018c 8DD9     		bls	.L16
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 12


 281:.\Generated_Source\PSoC4/ADC.c ****     }
 282:.\Generated_Source\PSoC4/ADC.c **** }
 340              		.loc 1 282 0 is_stmt 1
 341 018e BD46     		mov	sp, r7
 342 0190 05B0     		add	sp, sp, #20
 343              		@ sp needed
 344 0192 90BD     		pop	{r4, r7, pc}
 345              	.L18:
 346              		.align	2
 347              	.L17:
 348 0194 00000000 		.word	ADC_ISR
 349 0198 20001A40 		.word	1075445792
 350 019c 00001A40 		.word	1075445760
 351 01a0 80031A40 		.word	1075446656
 352 01a4 C0201010 		.word	269492416
 353 01a8 C0200010 		.word	268443840
 354 01ac 04001A40 		.word	1075445764
 355 01b0 8C000080 		.word	-2147483508
 356 01b4 18001A40 		.word	1075445784
 357 01b8 0000FF07 		.word	134152192
 358 01bc 1C001A40 		.word	1075445788
 359 01c0 10001A40 		.word	1075445776
 360 01c4 04000400 		.word	262148
 361 01c8 14001A40 		.word	1075445780
 362 01cc 00031A40 		.word	1075446528
 363 01d0 40031A40 		.word	1075446592
 364 01d4 28021A40 		.word	1075446312
 365 01d8 38021A40 		.word	1075446328
 366 01dc 18021A40 		.word	1075446296
 367 01e0 000F1A40 		.word	1075449600
 368 01e4 30001A40 		.word	1075445808
 369 01e8 FFFFFFDF 		.word	-536870913
 370 01ec 00000000 		.word	ADC_channelsConfig
 371 01f0 08000000 		.word	ADC_InputsPlacement.4743
 372 01f4 80001A40 		.word	1075445888
 373 01f8 00000000 		.word	ADC_offset
 374 01fc 10270000 		.word	10000
 375 0200 FF070000 		.word	2047
 376 0204 00000000 		.word	ADC_countsPer10Volt
 377              		.cfi_endproc
 378              	.LFE1:
 379              		.size	ADC_Init, .-ADC_Init
 380              		.section	.text.ADC_Enable,"ax",%progbits
 381              		.align	2
 382              		.global	ADC_Enable
 383              		.code	16
 384              		.thumb_func
 385              		.type	ADC_Enable, %function
 386              	ADC_Enable:
 387              	.LFB2:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 285:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 286:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 287:.\Generated_Source\PSoC4/ADC.c **** *
 288:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 289:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 13


 290:.\Generated_Source\PSoC4/ADC.c **** *
 291:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 292:.\Generated_Source\PSoC4/ADC.c **** *  None.
 293:.\Generated_Source\PSoC4/ADC.c **** *
 294:.\Generated_Source\PSoC4/ADC.c **** * Return:
 295:.\Generated_Source\PSoC4/ADC.c **** *  None.
 296:.\Generated_Source\PSoC4/ADC.c **** *
 297:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 298:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 299:.\Generated_Source\PSoC4/ADC.c **** {
 388              		.loc 1 299 0
 389              		.cfi_startproc
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 300:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 396              		.loc 1 300 0
 397 0004 074B     		ldr	r3, .L21
 398 0006 1B68     		ldr	r3, [r3]
 399 0008 002B     		cmp	r3, #0
 400 000a 09DB     		blt	.L19
 301:.\Generated_Source\PSoC4/ADC.c ****     {
 302:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4)
 303:.\Generated_Source\PSoC4/ADC.c **** 
 304:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 305:.\Generated_Source\PSoC4/ADC.c ****             {
 306:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 307:.\Generated_Source\PSoC4/ADC.c ****             }
 308:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4) */
 309:.\Generated_Source\PSoC4/ADC.c ****         
 310:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 401              		.loc 1 310 0
 402 000c 054B     		ldr	r3, .L21
 403 000e 054A     		ldr	r2, .L21
 404 0010 1268     		ldr	r2, [r2]
 405 0012 8021     		mov	r1, #128
 406 0014 0906     		lsl	r1, r1, #24
 407 0016 0A43     		orr	r2, r1
 408 0018 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/ADC.c ****         
 312:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 313:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 409              		.loc 1 313 0
 410 001a 0A20     		mov	r0, #10
 411 001c FFF7FEFF 		bl	CyDelayUs
 412              	.L19:
 314:.\Generated_Source\PSoC4/ADC.c ****     }
 315:.\Generated_Source\PSoC4/ADC.c **** }
 413              		.loc 1 315 0
 414 0020 BD46     		mov	sp, r7
 415              		@ sp needed
 416 0022 80BD     		pop	{r7, pc}
 417              	.L22:
 418              		.align	2
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 14


 419              	.L21:
 420 0024 00001A40 		.word	1075445760
 421              		.cfi_endproc
 422              	.LFE2:
 423              		.size	ADC_Enable, .-ADC_Enable
 424              		.section	.text.ADC_Stop,"ax",%progbits
 425              		.align	2
 426              		.global	ADC_Stop
 427              		.code	16
 428              		.thumb_func
 429              		.type	ADC_Stop, %function
 430              	ADC_Stop:
 431              	.LFB3:
 316:.\Generated_Source\PSoC4/ADC.c **** 
 317:.\Generated_Source\PSoC4/ADC.c **** 
 318:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 320:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 323:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 324:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** * Return:
 330:.\Generated_Source\PSoC4/ADC.c **** *  None.
 331:.\Generated_Source\PSoC4/ADC.c **** *
 332:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 334:.\Generated_Source\PSoC4/ADC.c **** {
 432              		.loc 1 334 0
 433              		.cfi_startproc
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 335:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 440              		.loc 1 335 0
 441 0004 034B     		ldr	r3, .L24
 442 0006 034A     		ldr	r2, .L24
 443 0008 1268     		ldr	r2, [r2]
 444 000a 5200     		lsl	r2, r2, #1
 445 000c 5208     		lsr	r2, r2, #1
 446 000e 1A60     		str	r2, [r3]
 336:.\Generated_Source\PSoC4/ADC.c **** }
 447              		.loc 1 336 0
 448 0010 BD46     		mov	sp, r7
 449              		@ sp needed
 450 0012 80BD     		pop	{r7, pc}
 451              	.L25:
 452              		.align	2
 453              	.L24:
 454 0014 00001A40 		.word	1075445760
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 15


 455              		.cfi_endproc
 456              	.LFE3:
 457              		.size	ADC_Stop, .-ADC_Stop
 458              		.section	.text.ADC_StartConvert,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_StartConvert
 461              		.code	16
 462              		.thumb_func
 463              		.type	ADC_StartConvert, %function
 464              	ADC_StartConvert:
 465              	.LFB4:
 337:.\Generated_Source\PSoC4/ADC.c **** 
 338:.\Generated_Source\PSoC4/ADC.c **** 
 339:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 341:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/ADC.c **** *
 343:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 344:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 345:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 346:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 347:.\Generated_Source\PSoC4/ADC.c **** *
 348:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 349:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 350:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 351:.\Generated_Source\PSoC4/ADC.c **** *
 352:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 353:.\Generated_Source\PSoC4/ADC.c **** *  None.
 354:.\Generated_Source\PSoC4/ADC.c **** *
 355:.\Generated_Source\PSoC4/ADC.c **** * Return:
 356:.\Generated_Source\PSoC4/ADC.c **** *  None.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 359:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 360:.\Generated_Source\PSoC4/ADC.c **** {
 466              		.loc 1 360 0
 467              		.cfi_startproc
 468 0000 80B5     		push	{r7, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 7, -8
 471              		.cfi_offset 14, -4
 472 0002 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
 361:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 362:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 474              		.loc 1 362 0
 475 0004 044B     		ldr	r3, .L27
 476 0006 044A     		ldr	r2, .L27
 477 0008 1268     		ldr	r2, [r2]
 478 000a 8021     		mov	r1, #128
 479 000c 4902     		lsl	r1, r1, #9
 480 000e 0A43     		orr	r2, r1
 481 0010 1A60     		str	r2, [r3]
 363:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 364:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 365:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 366:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 16


 367:.\Generated_Source\PSoC4/ADC.c **** }
 482              		.loc 1 367 0
 483 0012 BD46     		mov	sp, r7
 484              		@ sp needed
 485 0014 80BD     		pop	{r7, pc}
 486              	.L28:
 487 0016 C046     		.align	2
 488              	.L27:
 489 0018 04001A40 		.word	1075445764
 490              		.cfi_endproc
 491              	.LFE4:
 492              		.size	ADC_StartConvert, .-ADC_StartConvert
 493              		.section	.text.ADC_StopConvert,"ax",%progbits
 494              		.align	2
 495              		.global	ADC_StopConvert
 496              		.code	16
 497              		.thumb_func
 498              		.type	ADC_StopConvert, %function
 499              	ADC_StopConvert:
 500              	.LFB5:
 368:.\Generated_Source\PSoC4/ADC.c **** 
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 372:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/ADC.c **** *
 374:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 375:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 376:.\Generated_Source\PSoC4/ADC.c **** *
 377:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 378:.\Generated_Source\PSoC4/ADC.c **** *  None.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  None.
 382:.\Generated_Source\PSoC4/ADC.c **** *
 383:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 384:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 385:.\Generated_Source\PSoC4/ADC.c **** {
 501              		.loc 1 385 0
 502              		.cfi_startproc
 503 0000 80B5     		push	{r7, lr}
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 386:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 387:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 509              		.loc 1 387 0
 510 0004 034B     		ldr	r3, .L30
 511 0006 034A     		ldr	r2, .L30
 512 0008 1168     		ldr	r1, [r2]
 513 000a 034A     		ldr	r2, .L30+4
 514 000c 0A40     		and	r2, r1
 515 000e 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 389:.\Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 17


 516              		.loc 1 389 0
 517 0010 BD46     		mov	sp, r7
 518              		@ sp needed
 519 0012 80BD     		pop	{r7, pc}
 520              	.L31:
 521              		.align	2
 522              	.L30:
 523 0014 04001A40 		.word	1075445764
 524 0018 FFFFFEFF 		.word	-65537
 525              		.cfi_endproc
 526              	.LFE5:
 527              		.size	ADC_StopConvert, .-ADC_StopConvert
 528              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 529              		.align	2
 530              		.global	ADC_IsEndConversion
 531              		.code	16
 532              		.thumb_func
 533              		.type	ADC_IsEndConversion, %function
 534              	ADC_IsEndConversion:
 535              	.LFB6:
 390:.\Generated_Source\PSoC4/ADC.c **** 
 391:.\Generated_Source\PSoC4/ADC.c **** 
 392:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 393:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 394:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 395:.\Generated_Source\PSoC4/ADC.c **** *
 396:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 397:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 398:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 399:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 400:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 401:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 402:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 403:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 404:.\Generated_Source\PSoC4/ADC.c **** *
 405:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 406:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 407:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 408:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 409:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 410:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 411:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 412:.\Generated_Source\PSoC4/ADC.c **** *
 413:.\Generated_Source\PSoC4/ADC.c **** * Return:
 414:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 415:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 416:.\Generated_Source\PSoC4/ADC.c **** *
 417:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 418:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 419:.\Generated_Source\PSoC4/ADC.c **** {
 536              		.loc 1 419 0
 537              		.cfi_startproc
 538 0000 80B5     		push	{r7, lr}
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 18


 543              		.cfi_def_cfa_offset 24
 544 0004 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 546 0006 7860     		str	r0, [r7, #4]
 420:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 547              		.loc 1 420 0
 548 0008 0023     		mov	r3, #0
 549 000a FB60     		str	r3, [r7, #12]
 421:.\Generated_Source\PSoC4/ADC.c **** 
 422:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 550              		.loc 1 422 0
 551 000c 7A68     		ldr	r2, [r7, #4]
 552 000e 0323     		mov	r3, #3
 553 0010 1340     		and	r3, r2
 554 0012 11D0     		beq	.L33
 555              	.L35:
 423:.\Generated_Source\PSoC4/ADC.c ****     {
 424:.\Generated_Source\PSoC4/ADC.c ****         do
 425:.\Generated_Source\PSoC4/ADC.c ****         {
 426:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 556              		.loc 1 426 0 discriminator 1
 557 0014 0B4B     		ldr	r3, .L37
 558 0016 1A68     		ldr	r2, [r3]
 559 0018 0123     		mov	r3, #1
 560 001a 1340     		and	r3, r2
 561 001c FB60     		str	r3, [r7, #12]
 427:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 562              		.loc 1 427 0 discriminator 1
 563 001e FB68     		ldr	r3, [r7, #12]
 564 0020 002B     		cmp	r3, #0
 565 0022 03D1     		bne	.L34
 566 0024 7A68     		ldr	r2, [r7, #4]
 567 0026 0223     		mov	r3, #2
 568 0028 1340     		and	r3, r2
 569 002a F3D1     		bne	.L35
 570              	.L34:
 428:.\Generated_Source\PSoC4/ADC.c **** 
 429:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 571              		.loc 1 429 0
 572 002c FB68     		ldr	r3, [r7, #12]
 573 002e 002B     		cmp	r3, #0
 574 0030 02D0     		beq	.L33
 430:.\Generated_Source\PSoC4/ADC.c ****         {
 431:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 432:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 575              		.loc 1 432 0
 576 0032 044B     		ldr	r3, .L37
 577 0034 0122     		mov	r2, #1
 578 0036 1A60     		str	r2, [r3]
 579              	.L33:
 433:.\Generated_Source\PSoC4/ADC.c ****         }
 434:.\Generated_Source\PSoC4/ADC.c ****     }
 435:.\Generated_Source\PSoC4/ADC.c **** 
 436:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 437:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 438:.\Generated_Source\PSoC4/ADC.c ****         {
 439:.\Generated_Source\PSoC4/ADC.c ****             do
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 19


 440:.\Generated_Source\PSoC4/ADC.c ****             {
 441:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 442:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 443:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 444:.\Generated_Source\PSoC4/ADC.c **** 
 445:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 446:.\Generated_Source\PSoC4/ADC.c ****             {
 447:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 448:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 449:.\Generated_Source\PSoC4/ADC.c ****             }
 450:.\Generated_Source\PSoC4/ADC.c ****         }
 451:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 452:.\Generated_Source\PSoC4/ADC.c **** 
 453:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 580              		.loc 1 453 0
 581 0038 FB68     		ldr	r3, [r7, #12]
 454:.\Generated_Source\PSoC4/ADC.c **** }
 582              		.loc 1 454 0
 583 003a 181C     		mov	r0, r3
 584 003c BD46     		mov	sp, r7
 585 003e 04B0     		add	sp, sp, #16
 586              		@ sp needed
 587 0040 80BD     		pop	{r7, pc}
 588              	.L38:
 589 0042 C046     		.align	2
 590              	.L37:
 591 0044 10021A40 		.word	1075446288
 592              		.cfi_endproc
 593              	.LFE6:
 594              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 595              		.section	.text.ADC_GetResult16,"ax",%progbits
 596              		.align	2
 597              		.global	ADC_GetResult16
 598              		.code	16
 599              		.thumb_func
 600              		.type	ADC_GetResult16, %function
 601              	ADC_GetResult16:
 602              	.LFB7:
 455:.\Generated_Source\PSoC4/ADC.c **** 
 456:.\Generated_Source\PSoC4/ADC.c **** 
 457:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 458:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 459:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 460:.\Generated_Source\PSoC4/ADC.c **** *
 461:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 462:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 463:.\Generated_Source\PSoC4/ADC.c **** *
 464:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 465:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 466:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Return:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 472:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 473:.\Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 20


 603              		.loc 1 473 0
 604              		.cfi_startproc
 605 0000 80B5     		push	{r7, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 84B0     		sub	sp, sp, #16
 610              		.cfi_def_cfa_offset 24
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 474:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 475:.\Generated_Source\PSoC4/ADC.c **** 
 476:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 477:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 614              		.loc 1 477 0
 615 0008 7B68     		ldr	r3, [r7, #4]
 616 000a 012B     		cmp	r3, #1
 617 000c 02D9     		bls	.L40
 618              		.loc 1 477 0 is_stmt 0 discriminator 1
 619 000e 0020     		mov	r0, #0
 620 0010 FFF7FEFF 		bl	CyHalt
 621              	.L40:
 478:.\Generated_Source\PSoC4/ADC.c **** 
 479:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 622              		.loc 1 479 0 is_stmt 1
 623 0014 7B68     		ldr	r3, [r7, #4]
 624 0016 012B     		cmp	r3, #1
 625 0018 08D8     		bhi	.L41
 480:.\Generated_Source\PSoC4/ADC.c ****     {
 481:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 626              		.loc 1 481 0
 627 001a 7B68     		ldr	r3, [r7, #4]
 628 001c 9B00     		lsl	r3, r3, #2
 629 001e 084A     		ldr	r2, .L44
 630 0020 9B18     		add	r3, r3, r2
 631 0022 1B68     		ldr	r3, [r3]
 632 0024 1B04     		lsl	r3, r3, #16
 633 0026 1B0C     		lsr	r3, r3, #16
 634 0028 FB60     		str	r3, [r7, #12]
 635 002a 01E0     		b	.L42
 636              	.L41:
 482:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 483:.\Generated_Source\PSoC4/ADC.c ****     }
 484:.\Generated_Source\PSoC4/ADC.c ****     else
 485:.\Generated_Source\PSoC4/ADC.c ****     {
 486:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 487:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 488:.\Generated_Source\PSoC4/ADC.c ****         #else
 489:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 637              		.loc 1 489 0
 638 002c 0023     		mov	r3, #0
 639 002e FB60     		str	r3, [r7, #12]
 640              	.L42:
 490:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 491:.\Generated_Source\PSoC4/ADC.c ****     }
 492:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 21


 493:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 641              		.loc 1 493 0
 642 0030 FB68     		ldr	r3, [r7, #12]
 643 0032 9BB2     		uxth	r3, r3
 644 0034 1BB2     		sxth	r3, r3
 494:.\Generated_Source\PSoC4/ADC.c **** }
 645              		.loc 1 494 0
 646 0036 181C     		mov	r0, r3
 647 0038 BD46     		mov	sp, r7
 648 003a 04B0     		add	sp, sp, #16
 649              		@ sp needed
 650 003c 80BD     		pop	{r7, pc}
 651              	.L45:
 652 003e C046     		.align	2
 653              	.L44:
 654 0040 80011A40 		.word	1075446144
 655              		.cfi_endproc
 656              	.LFE7:
 657              		.size	ADC_GetResult16, .-ADC_GetResult16
 658              		.section	.text.ADC_SetChanMask,"ax",%progbits
 659              		.align	2
 660              		.global	ADC_SetChanMask
 661              		.code	16
 662              		.thumb_func
 663              		.type	ADC_SetChanMask, %function
 664              	ADC_SetChanMask:
 665              	.LFB8:
 495:.\Generated_Source\PSoC4/ADC.c **** 
 496:.\Generated_Source\PSoC4/ADC.c **** 
 497:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 498:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 499:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 500:.\Generated_Source\PSoC4/ADC.c **** *
 501:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 502:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 503:.\Generated_Source\PSoC4/ADC.c **** *
 504:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 505:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 506:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 507:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 508:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 509:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 510:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 511:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 512:.\Generated_Source\PSoC4/ADC.c **** *
 513:.\Generated_Source\PSoC4/ADC.c **** * Return:
 514:.\Generated_Source\PSoC4/ADC.c **** *  None.
 515:.\Generated_Source\PSoC4/ADC.c **** *
 516:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 517:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 518:.\Generated_Source\PSoC4/ADC.c **** {
 666              		.loc 1 518 0
 667              		.cfi_startproc
 668 0000 80B5     		push	{r7, lr}
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 7, -8
 671              		.cfi_offset 14, -4
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 22


 672 0002 82B0     		sub	sp, sp, #8
 673              		.cfi_def_cfa_offset 16
 674 0004 00AF     		add	r7, sp, #0
 675              		.cfi_def_cfa_register 7
 676 0006 7860     		str	r0, [r7, #4]
 519:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 677              		.loc 1 519 0
 678 0008 034B     		ldr	r3, .L47
 679 000a 7968     		ldr	r1, [r7, #4]
 680 000c 0322     		mov	r2, #3
 681 000e 0A40     		and	r2, r1
 682 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/ADC.c **** }
 683              		.loc 1 520 0
 684 0012 BD46     		mov	sp, r7
 685 0014 02B0     		add	sp, sp, #8
 686              		@ sp needed
 687 0016 80BD     		pop	{r7, pc}
 688              	.L48:
 689              		.align	2
 690              	.L47:
 691 0018 20001A40 		.word	1075445792
 692              		.cfi_endproc
 693              	.LFE8:
 694              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 695              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 696              		.align	2
 697              		.global	ADC_SetLowLimit
 698              		.code	16
 699              		.thumb_func
 700              		.type	ADC_SetLowLimit, %function
 701              	ADC_SetLowLimit:
 702              	.LFB9:
 521:.\Generated_Source\PSoC4/ADC.c **** 
 522:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 523:.\Generated_Source\PSoC4/ADC.c **** 
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 526:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 527:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 528:.\Generated_Source\PSoC4/ADC.c ****     *
 529:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 530:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 531:.\Generated_Source\PSoC4/ADC.c ****     *
 532:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 533:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 534:.\Generated_Source\PSoC4/ADC.c ****     *
 535:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 536:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 537:.\Generated_Source\PSoC4/ADC.c ****     *
 538:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 539:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 540:.\Generated_Source\PSoC4/ADC.c ****     {
 541:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 542:.\Generated_Source\PSoC4/ADC.c ****     }
 543:.\Generated_Source\PSoC4/ADC.c **** 
 544:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 23


 545:.\Generated_Source\PSoC4/ADC.c **** 
 546:.\Generated_Source\PSoC4/ADC.c **** 
 547:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 548:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 549:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 550:.\Generated_Source\PSoC4/ADC.c **** *
 551:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 552:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 553:.\Generated_Source\PSoC4/ADC.c **** *
 554:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 555:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 556:.\Generated_Source\PSoC4/ADC.c **** *
 557:.\Generated_Source\PSoC4/ADC.c **** * Return:
 558:.\Generated_Source\PSoC4/ADC.c **** *  None.
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 561:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 562:.\Generated_Source\PSoC4/ADC.c **** {
 703              		.loc 1 562 0
 704              		.cfi_startproc
 705 0000 80B5     		push	{r7, lr}
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 82B0     		sub	sp, sp, #8
 710              		.cfi_def_cfa_offset 16
 711 0004 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 0006 7860     		str	r0, [r7, #4]
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 714              		.loc 1 563 0
 715 0008 084B     		ldr	r3, .L50
 716 000a 084A     		ldr	r2, .L50
 717 000c 1268     		ldr	r2, [r2]
 718 000e 120C     		lsr	r2, r2, #16
 719 0010 1204     		lsl	r2, r2, #16
 720 0012 1A60     		str	r2, [r3]
 564:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 721              		.loc 1 564 0
 722 0014 054B     		ldr	r3, .L50
 723 0016 054A     		ldr	r2, .L50
 724 0018 1168     		ldr	r1, [r2]
 725 001a 7A68     		ldr	r2, [r7, #4]
 726 001c 1204     		lsl	r2, r2, #16
 727 001e 120C     		lsr	r2, r2, #16
 728 0020 0A43     		orr	r2, r1
 729 0022 1A60     		str	r2, [r3]
 565:.\Generated_Source\PSoC4/ADC.c **** }
 730              		.loc 1 565 0
 731 0024 BD46     		mov	sp, r7
 732 0026 02B0     		add	sp, sp, #8
 733              		@ sp needed
 734 0028 80BD     		pop	{r7, pc}
 735              	.L51:
 736 002a C046     		.align	2
 737              	.L50:
 738 002c 18001A40 		.word	1075445784
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 24


 739              		.cfi_endproc
 740              	.LFE9:
 741              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 742              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 743              		.align	2
 744              		.global	ADC_SetHighLimit
 745              		.code	16
 746              		.thumb_func
 747              		.type	ADC_SetHighLimit, %function
 748              	ADC_SetHighLimit:
 749              	.LFB10:
 566:.\Generated_Source\PSoC4/ADC.c **** 
 567:.\Generated_Source\PSoC4/ADC.c **** 
 568:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 570:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 573:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 574:.\Generated_Source\PSoC4/ADC.c **** *
 575:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 576:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 577:.\Generated_Source\PSoC4/ADC.c **** *
 578:.\Generated_Source\PSoC4/ADC.c **** * Return:
 579:.\Generated_Source\PSoC4/ADC.c **** *  None.
 580:.\Generated_Source\PSoC4/ADC.c **** *
 581:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 582:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 583:.\Generated_Source\PSoC4/ADC.c **** {
 750              		.loc 1 583 0
 751              		.cfi_startproc
 752 0000 80B5     		push	{r7, lr}
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 82B0     		sub	sp, sp, #8
 757              		.cfi_def_cfa_offset 16
 758 0004 00AF     		add	r7, sp, #0
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 761              		.loc 1 584 0
 762 0008 074B     		ldr	r3, .L53
 763 000a 074A     		ldr	r2, .L53
 764 000c 1268     		ldr	r2, [r2]
 765 000e 1204     		lsl	r2, r2, #16
 766 0010 120C     		lsr	r2, r2, #16
 767 0012 1A60     		str	r2, [r3]
 585:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 768              		.loc 1 585 0
 769 0014 044B     		ldr	r3, .L53
 770 0016 044A     		ldr	r2, .L53
 771 0018 1168     		ldr	r1, [r2]
 772 001a 7A68     		ldr	r2, [r7, #4]
 773 001c 1204     		lsl	r2, r2, #16
 774 001e 0A43     		orr	r2, r1
 775 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 25


 586:.\Generated_Source\PSoC4/ADC.c **** }
 776              		.loc 1 586 0
 777 0022 BD46     		mov	sp, r7
 778 0024 02B0     		add	sp, sp, #8
 779              		@ sp needed
 780 0026 80BD     		pop	{r7, pc}
 781              	.L54:
 782              		.align	2
 783              	.L53:
 784 0028 18001A40 		.word	1075445784
 785              		.cfi_endproc
 786              	.LFE10:
 787              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 788              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 789              		.align	2
 790              		.global	ADC_SetLimitMask
 791              		.code	16
 792              		.thumb_func
 793              		.type	ADC_SetLimitMask, %function
 794              	ADC_SetLimitMask:
 795              	.LFB11:
 587:.\Generated_Source\PSoC4/ADC.c **** 
 588:.\Generated_Source\PSoC4/ADC.c **** 
 589:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 590:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 591:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 592:.\Generated_Source\PSoC4/ADC.c **** *
 593:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 594:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 595:.\Generated_Source\PSoC4/ADC.c **** *
 596:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 597:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 598:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 599:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 600:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 601:.\Generated_Source\PSoC4/ADC.c **** *
 602:.\Generated_Source\PSoC4/ADC.c **** * Return:
 603:.\Generated_Source\PSoC4/ADC.c **** *  None.
 604:.\Generated_Source\PSoC4/ADC.c **** *
 605:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 606:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 607:.\Generated_Source\PSoC4/ADC.c **** {
 796              		.loc 1 607 0
 797              		.cfi_startproc
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 82B0     		sub	sp, sp, #8
 803              		.cfi_def_cfa_offset 16
 804 0004 00AF     		add	r7, sp, #0
 805              		.cfi_def_cfa_register 7
 806 0006 7860     		str	r0, [r7, #4]
 608:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 807              		.loc 1 608 0
 808 0008 034B     		ldr	r3, .L56
 809 000a 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 26


 810 000c 0322     		mov	r2, #3
 811 000e 0A40     		and	r2, r1
 812 0010 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/ADC.c **** }
 813              		.loc 1 609 0
 814 0012 BD46     		mov	sp, r7
 815 0014 02B0     		add	sp, sp, #8
 816              		@ sp needed
 817 0016 80BD     		pop	{r7, pc}
 818              	.L57:
 819              		.align	2
 820              	.L56:
 821 0018 38021A40 		.word	1075446328
 822              		.cfi_endproc
 823              	.LFE11:
 824              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 825              		.section	.text.ADC_SetSatMask,"ax",%progbits
 826              		.align	2
 827              		.global	ADC_SetSatMask
 828              		.code	16
 829              		.thumb_func
 830              		.type	ADC_SetSatMask, %function
 831              	ADC_SetSatMask:
 832              	.LFB12:
 610:.\Generated_Source\PSoC4/ADC.c **** 
 611:.\Generated_Source\PSoC4/ADC.c **** 
 612:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 613:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 614:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 615:.\Generated_Source\PSoC4/ADC.c **** *
 616:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 617:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 618:.\Generated_Source\PSoC4/ADC.c **** *
 619:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 620:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 621:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 622:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 623:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Return:
 626:.\Generated_Source\PSoC4/ADC.c **** *  None.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 630:.\Generated_Source\PSoC4/ADC.c **** {
 833              		.loc 1 630 0
 834              		.cfi_startproc
 835 0000 80B5     		push	{r7, lr}
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 82B0     		sub	sp, sp, #8
 840              		.cfi_def_cfa_offset 16
 841 0004 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
 843 0006 7860     		str	r0, [r7, #4]
 631:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 27


 844              		.loc 1 631 0
 845 0008 034B     		ldr	r3, .L59
 846 000a 7968     		ldr	r1, [r7, #4]
 847 000c 0322     		mov	r2, #3
 848 000e 0A40     		and	r2, r1
 849 0010 1A60     		str	r2, [r3]
 632:.\Generated_Source\PSoC4/ADC.c **** }
 850              		.loc 1 632 0
 851 0012 BD46     		mov	sp, r7
 852 0014 02B0     		add	sp, sp, #8
 853              		@ sp needed
 854 0016 80BD     		pop	{r7, pc}
 855              	.L60:
 856              		.align	2
 857              	.L59:
 858 0018 28021A40 		.word	1075446312
 859              		.cfi_endproc
 860              	.LFE12:
 861              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 862              		.section	.text.ADC_SetOffset,"ax",%progbits
 863              		.align	2
 864              		.global	ADC_SetOffset
 865              		.code	16
 866              		.thumb_func
 867              		.type	ADC_SetOffset, %function
 868              	ADC_SetOffset:
 869              	.LFB13:
 633:.\Generated_Source\PSoC4/ADC.c **** 
 634:.\Generated_Source\PSoC4/ADC.c **** 
 635:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 637:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/ADC.c **** *
 639:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 640:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 641:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 642:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 643:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 644:.\Generated_Source\PSoC4/ADC.c **** *
 645:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 646:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 647:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 648:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 655:.\Generated_Source\PSoC4/ADC.c **** *
 656:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 657:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 658:.\Generated_Source\PSoC4/ADC.c **** {
 870              		.loc 1 658 0
 871              		.cfi_startproc
 872 0000 80B5     		push	{r7, lr}
 873              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 28


 874              		.cfi_offset 7, -8
 875              		.cfi_offset 14, -4
 876 0002 82B0     		sub	sp, sp, #8
 877              		.cfi_def_cfa_offset 16
 878 0004 00AF     		add	r7, sp, #0
 879              		.cfi_def_cfa_register 7
 880 0006 7860     		str	r0, [r7, #4]
 881 0008 0A1C     		mov	r2, r1
 882 000a BB1C     		add	r3, r7, #2
 883 000c 1A80     		strh	r2, [r3]
 659:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 660:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 884              		.loc 1 660 0
 885 000e 7B68     		ldr	r3, [r7, #4]
 886 0010 012B     		cmp	r3, #1
 887 0012 02D9     		bls	.L62
 888              		.loc 1 660 0 is_stmt 0 discriminator 1
 889 0014 0020     		mov	r0, #0
 890 0016 FFF7FEFF 		bl	CyHalt
 891              	.L62:
 661:.\Generated_Source\PSoC4/ADC.c **** 
 662:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 892              		.loc 1 662 0 is_stmt 1
 893 001a 044B     		ldr	r3, .L63
 894 001c 7A68     		ldr	r2, [r7, #4]
 895 001e 5200     		lsl	r2, r2, #1
 896 0020 B91C     		add	r1, r7, #2
 897 0022 0988     		ldrh	r1, [r1]
 898 0024 D152     		strh	r1, [r2, r3]
 663:.\Generated_Source\PSoC4/ADC.c **** }
 899              		.loc 1 663 0
 900 0026 BD46     		mov	sp, r7
 901 0028 02B0     		add	sp, sp, #8
 902              		@ sp needed
 903 002a 80BD     		pop	{r7, pc}
 904              	.L64:
 905              		.align	2
 906              	.L63:
 907 002c 00000000 		.word	ADC_offset
 908              		.cfi_endproc
 909              	.LFE13:
 910              		.size	ADC_SetOffset, .-ADC_SetOffset
 911              		.section	.text.ADC_SetGain,"ax",%progbits
 912              		.align	2
 913              		.global	ADC_SetGain
 914              		.code	16
 915              		.thumb_func
 916              		.type	ADC_SetGain, %function
 917              	ADC_SetGain:
 918              	.LFB14:
 664:.\Generated_Source\PSoC4/ADC.c **** 
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 668:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 669:.\Generated_Source\PSoC4/ADC.c **** *
 670:.\Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 29


 671:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 672:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 673:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 674:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 675:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 676:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 677:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 678:.\Generated_Source\PSoC4/ADC.c **** *
 679:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 680:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 681:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 682:.\Generated_Source\PSoC4/ADC.c **** *
 683:.\Generated_Source\PSoC4/ADC.c **** * Return:
 684:.\Generated_Source\PSoC4/ADC.c **** *  None.
 685:.\Generated_Source\PSoC4/ADC.c **** *
 686:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 687:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 688:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 689:.\Generated_Source\PSoC4/ADC.c **** *
 690:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 692:.\Generated_Source\PSoC4/ADC.c **** {
 919              		.loc 1 692 0
 920              		.cfi_startproc
 921 0000 80B5     		push	{r7, lr}
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 82B0     		sub	sp, sp, #8
 926              		.cfi_def_cfa_offset 16
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 929 0006 7860     		str	r0, [r7, #4]
 930 0008 3960     		str	r1, [r7]
 693:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 694:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 931              		.loc 1 694 0
 932 000a 7B68     		ldr	r3, [r7, #4]
 933 000c 012B     		cmp	r3, #1
 934 000e 02D9     		bls	.L66
 935              		.loc 1 694 0 is_stmt 0 discriminator 1
 936 0010 0020     		mov	r0, #0
 937 0012 FFF7FEFF 		bl	CyHalt
 938              	.L66:
 695:.\Generated_Source\PSoC4/ADC.c **** 
 696:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 939              		.loc 1 696 0 is_stmt 1
 940 0016 044B     		ldr	r3, .L67
 941 0018 7A68     		ldr	r2, [r7, #4]
 942 001a 9200     		lsl	r2, r2, #2
 943 001c 3968     		ldr	r1, [r7]
 944 001e D150     		str	r1, [r2, r3]
 697:.\Generated_Source\PSoC4/ADC.c **** }
 945              		.loc 1 697 0
 946 0020 BD46     		mov	sp, r7
 947 0022 02B0     		add	sp, sp, #8
 948              		@ sp needed
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 30


 949 0024 80BD     		pop	{r7, pc}
 950              	.L68:
 951 0026 C046     		.align	2
 952              	.L67:
 953 0028 00000000 		.word	ADC_countsPer10Volt
 954              		.cfi_endproc
 955              	.LFE14:
 956              		.size	ADC_SetGain, .-ADC_SetGain
 957              		.global	__aeabi_idiv
 958              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 959              		.align	2
 960              		.global	ADC_CountsTo_mVolts
 961              		.code	16
 962              		.thumb_func
 963              		.type	ADC_CountsTo_mVolts, %function
 964              	ADC_CountsTo_mVolts:
 965              	.LFB15:
 698:.\Generated_Source\PSoC4/ADC.c **** 
 699:.\Generated_Source\PSoC4/ADC.c **** 
 700:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 701:.\Generated_Source\PSoC4/ADC.c **** 
 702:.\Generated_Source\PSoC4/ADC.c **** 
 703:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 704:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 705:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 706:.\Generated_Source\PSoC4/ADC.c ****     *
 707:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 708:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 709:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 710:.\Generated_Source\PSoC4/ADC.c ****     *
 711:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 714:.\Generated_Source\PSoC4/ADC.c ****     *
 715:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 716:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 717:.\Generated_Source\PSoC4/ADC.c ****     *
 718:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 720:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 721:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 722:.\Generated_Source\PSoC4/ADC.c ****     *
 723:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 724:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 725:.\Generated_Source\PSoC4/ADC.c ****     {
 966              		.loc 1 725 0
 967              		.cfi_startproc
 968 0000 80B5     		push	{r7, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 84B0     		sub	sp, sp, #16
 973              		.cfi_def_cfa_offset 24
 974 0004 00AF     		add	r7, sp, #0
 975              		.cfi_def_cfa_register 7
 976 0006 7860     		str	r0, [r7, #4]
 977 0008 0A1C     		mov	r2, r1
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 31


 978 000a BB1C     		add	r3, r7, #2
 979 000c 1A80     		strh	r2, [r3]
 726:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 729:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 980              		.loc 1 729 0
 981 000e 7B68     		ldr	r3, [r7, #4]
 982 0010 012B     		cmp	r3, #1
 983 0012 02D9     		bls	.L70
 984              		.loc 1 729 0 is_stmt 0 discriminator 1
 985 0014 0020     		mov	r0, #0
 986 0016 FFF7FEFF 		bl	CyHalt
 987              	.L70:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 732:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 733:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 734:.\Generated_Source\PSoC4/ADC.c ****             {
 735:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 736:.\Generated_Source\PSoC4/ADC.c ****             }
 737:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 738:.\Generated_Source\PSoC4/ADC.c **** 
 739:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 740:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 988              		.loc 1 740 0 is_stmt 1
 989 001a BB1C     		add	r3, r7, #2
 990 001c 1A88     		ldrh	r2, [r3]
 991 001e 1E4B     		ldr	r3, .L76
 992 0020 7968     		ldr	r1, [r7, #4]
 993 0022 4900     		lsl	r1, r1, #1
 994 0024 CB5A     		ldrh	r3, [r1, r3]
 995 0026 9BB2     		uxth	r3, r3
 996 0028 9BB2     		uxth	r3, r3
 997 002a D31A     		sub	r3, r2, r3
 998 002c 9AB2     		uxth	r2, r3
 999 002e BB1C     		add	r3, r7, #2
 1000 0030 1A80     		strh	r2, [r3]
 741:.\Generated_Source\PSoC4/ADC.c **** 
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1001              		.loc 1 742 0
 1002 0032 BB1C     		add	r3, r7, #2
 1003 0034 0021     		mov	r1, #0
 1004 0036 5B5E     		ldrsh	r3, [r3, r1]
 1005 0038 184A     		ldr	r2, .L76+4
 1006 003a 5A43     		mul	r2, r3
 743:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1007              		.loc 1 743 0
 1008 003c BB1C     		add	r3, r7, #2
 1009 003e 0021     		mov	r1, #0
 1010 0040 5B5E     		ldrsh	r3, [r3, r1]
 1011 0042 002B     		cmp	r3, #0
 1012 0044 08DD     		ble	.L71
 1013              		.loc 1 743 0 is_stmt 0 discriminator 1
 1014 0046 164B     		ldr	r3, .L76+8
 1015 0048 7968     		ldr	r1, [r7, #4]
 1016 004a 8900     		lsl	r1, r1, #2
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 32


 1017 004c CB58     		ldr	r3, [r1, r3]
 1018 004e 002B     		cmp	r3, #0
 1019 0050 00DA     		bge	.L72
 1020 0052 0133     		add	r3, r3, #1
 1021              	.L72:
 1022 0054 5B10     		asr	r3, r3, #1
 1023 0056 08E0     		b	.L73
 1024              	.L71:
 1025              		.loc 1 743 0 discriminator 2
 1026 0058 114B     		ldr	r3, .L76+8
 1027 005a 7968     		ldr	r1, [r7, #4]
 1028 005c 8900     		lsl	r1, r1, #2
 1029 005e CB58     		ldr	r3, [r1, r3]
 1030 0060 002B     		cmp	r3, #0
 1031 0062 00DA     		bge	.L74
 1032 0064 0133     		add	r3, r3, #1
 1033              	.L74:
 1034 0066 5B10     		asr	r3, r3, #1
 1035 0068 5B42     		neg	r3, r3
 1036              	.L73:
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1037              		.loc 1 742 0 is_stmt 1
 1038 006a D218     		add	r2, r2, r3
 744:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1039              		.loc 1 744 0
 1040 006c 0C4B     		ldr	r3, .L76+8
 1041 006e 7968     		ldr	r1, [r7, #4]
 1042 0070 8900     		lsl	r1, r1, #2
 1043 0072 CB58     		ldr	r3, [r1, r3]
 1044 0074 101C     		mov	r0, r2
 1045 0076 191C     		mov	r1, r3
 1046 0078 FFF7FEFF 		bl	__aeabi_idiv
 1047 007c 031C     		mov	r3, r0
 1048 007e 1A1C     		mov	r2, r3
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1049              		.loc 1 742 0
 1050 0080 3B1C     		mov	r3, r7
 1051 0082 0E33     		add	r3, r3, #14
 1052 0084 1A80     		strh	r2, [r3]
 745:.\Generated_Source\PSoC4/ADC.c **** 
 746:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1053              		.loc 1 746 0
 1054 0086 3B1C     		mov	r3, r7
 1055 0088 0E33     		add	r3, r3, #14
 1056 008a 1B88     		ldrh	r3, [r3]
 1057 008c 1BB2     		sxth	r3, r3
 747:.\Generated_Source\PSoC4/ADC.c ****     }
 1058              		.loc 1 747 0
 1059 008e 181C     		mov	r0, r3
 1060 0090 BD46     		mov	sp, r7
 1061 0092 04B0     		add	sp, sp, #16
 1062              		@ sp needed
 1063 0094 80BD     		pop	{r7, pc}
 1064              	.L77:
 1065 0096 C046     		.align	2
 1066              	.L76:
 1067 0098 00000000 		.word	ADC_offset
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 33


 1068 009c 10270000 		.word	10000
 1069 00a0 00000000 		.word	ADC_countsPer10Volt
 1070              		.cfi_endproc
 1071              	.LFE15:
 1072              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1073              		.global	__aeabi_lmul
 1074              		.global	__aeabi_ldivmod
 1075              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1076              		.align	2
 1077              		.global	ADC_CountsTo_uVolts
 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	ADC_CountsTo_uVolts, %function
 1081              	ADC_CountsTo_uVolts:
 1082              	.LFB16:
 748:.\Generated_Source\PSoC4/ADC.c **** 
 749:.\Generated_Source\PSoC4/ADC.c **** 
 750:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 751:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 752:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 753:.\Generated_Source\PSoC4/ADC.c ****     *
 754:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 755:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 756:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 757:.\Generated_Source\PSoC4/ADC.c ****     *
 758:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 759:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 760:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 761:.\Generated_Source\PSoC4/ADC.c ****     *
 762:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 763:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 764:.\Generated_Source\PSoC4/ADC.c ****     *
 765:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 766:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 767:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 768:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 769:.\Generated_Source\PSoC4/ADC.c ****     *
 770:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 771:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 772:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 773:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 774:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 775:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 778:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 779:.\Generated_Source\PSoC4/ADC.c ****     {
 1083              		.loc 1 779 0
 1084              		.cfi_startproc
 1085 0000 B0B5     		push	{r4, r5, r7, lr}
 1086              		.cfi_def_cfa_offset 16
 1087              		.cfi_offset 4, -16
 1088              		.cfi_offset 5, -12
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 86B0     		sub	sp, sp, #24
 1092              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 34


 1093 0004 00AF     		add	r7, sp, #0
 1094              		.cfi_def_cfa_register 7
 1095 0006 F860     		str	r0, [r7, #12]
 1096 0008 0A1C     		mov	r2, r1
 1097 000a 3B1C     		mov	r3, r7
 1098 000c 0A33     		add	r3, r3, #10
 1099 000e 1A80     		strh	r2, [r3]
 780:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 783:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1100              		.loc 1 783 0
 1101 0010 FB68     		ldr	r3, [r7, #12]
 1102 0012 012B     		cmp	r3, #1
 1103 0014 02D9     		bls	.L79
 1104              		.loc 1 783 0 is_stmt 0 discriminator 1
 1105 0016 0020     		mov	r0, #0
 1106 0018 FFF7FEFF 		bl	CyHalt
 1107              	.L79:
 784:.\Generated_Source\PSoC4/ADC.c **** 
 785:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 786:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 787:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 788:.\Generated_Source\PSoC4/ADC.c ****             {
 789:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 790:.\Generated_Source\PSoC4/ADC.c ****             }
 791:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 792:.\Generated_Source\PSoC4/ADC.c **** 
 793:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 794:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1108              		.loc 1 794 0 is_stmt 1
 1109 001c 3B1C     		mov	r3, r7
 1110 001e 0A33     		add	r3, r3, #10
 1111 0020 1A88     		ldrh	r2, [r3]
 1112 0022 1B4B     		ldr	r3, .L81+8
 1113 0024 F968     		ldr	r1, [r7, #12]
 1114 0026 4900     		lsl	r1, r1, #1
 1115 0028 CB5A     		ldrh	r3, [r1, r3]
 1116 002a 9BB2     		uxth	r3, r3
 1117 002c 9BB2     		uxth	r3, r3
 1118 002e D31A     		sub	r3, r2, r3
 1119 0030 9AB2     		uxth	r2, r3
 1120 0032 3B1C     		mov	r3, r7
 1121 0034 0A33     		add	r3, r3, #10
 1122 0036 1A80     		strh	r2, [r3]
 795:.\Generated_Source\PSoC4/ADC.c **** 
 796:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1123              		.loc 1 796 0
 1124 0038 3B1C     		mov	r3, r7
 1125 003a 0A33     		add	r3, r3, #10
 1126 003c 1B88     		ldrh	r3, [r3]
 1127 003e 1BB2     		sxth	r3, r3
 1128 0040 3B60     		str	r3, [r7]
 1129 0042 DB17     		asr	r3, r3, #31
 1130 0044 7B60     		str	r3, [r7, #4]
 1131 0046 3868     		ldr	r0, [r7]
 1132 0048 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 35


 1133 004a 104B     		ldr	r3, .L81+4
 1134 004c 0E4A     		ldr	r2, .L81
 1135 004e FFF7FEFF 		bl	__aeabi_lmul
 1136 0052 021C     		mov	r2, r0
 1137 0054 0B1C     		mov	r3, r1
 1138 0056 0F49     		ldr	r1, .L81+12
 1139 0058 F868     		ldr	r0, [r7, #12]
 1140 005a 8000     		lsl	r0, r0, #2
 1141 005c 4158     		ldr	r1, [r0, r1]
 1142 005e 0C1C     		mov	r4, r1
 1143 0060 C917     		asr	r1, r1, #31
 1144 0062 0D1C     		mov	r5, r1
 1145 0064 101C     		mov	r0, r2
 1146 0066 191C     		mov	r1, r3
 1147 0068 221C     		mov	r2, r4
 1148 006a 2B1C     		mov	r3, r5
 1149 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1150 0070 031C     		mov	r3, r0
 1151 0072 0C1C     		mov	r4, r1
 1152 0074 3B61     		str	r3, [r7, #16]
 1153 0076 7C61     		str	r4, [r7, #20]
 797:.\Generated_Source\PSoC4/ADC.c **** 
 798:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1154              		.loc 1 798 0
 1155 0078 3B69     		ldr	r3, [r7, #16]
 799:.\Generated_Source\PSoC4/ADC.c ****     }
 1156              		.loc 1 799 0
 1157 007a 181C     		mov	r0, r3
 1158 007c BD46     		mov	sp, r7
 1159 007e 06B0     		add	sp, sp, #24
 1160              		@ sp needed
 1161 0080 B0BD     		pop	{r4, r5, r7, pc}
 1162              	.L82:
 1163 0082 C046C046 		.align	3
 1163      C046
 1164              	.L81:
 1165 0088 80969800 		.word	10000000
 1166 008c 00000000 		.word	0
 1167 0090 00000000 		.word	ADC_offset
 1168 0094 00000000 		.word	ADC_countsPer10Volt
 1169              		.cfi_endproc
 1170              	.LFE16:
 1171              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1172              		.global	__aeabi_i2f
 1173              		.global	__aeabi_fmul
 1174              		.global	__aeabi_fdiv
 1175              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1176              		.align	2
 1177              		.global	ADC_CountsTo_Volts
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	ADC_CountsTo_Volts, %function
 1181              	ADC_CountsTo_Volts:
 1182              	.LFB17:
 800:.\Generated_Source\PSoC4/ADC.c **** 
 801:.\Generated_Source\PSoC4/ADC.c **** 
 802:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 36


 803:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 804:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 805:.\Generated_Source\PSoC4/ADC.c ****     *
 806:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 807:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 808:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 809:.\Generated_Source\PSoC4/ADC.c ****     *
 810:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 811:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 812:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 813:.\Generated_Source\PSoC4/ADC.c ****     *
 814:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 815:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 816:.\Generated_Source\PSoC4/ADC.c ****     *
 817:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 818:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 819:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 820:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 821:.\Generated_Source\PSoC4/ADC.c ****     *
 822:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 823:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 824:.\Generated_Source\PSoC4/ADC.c ****     {
 1183              		.loc 1 824 0
 1184              		.cfi_startproc
 1185 0000 90B5     		push	{r4, r7, lr}
 1186              		.cfi_def_cfa_offset 12
 1187              		.cfi_offset 4, -12
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 85B0     		sub	sp, sp, #20
 1191              		.cfi_def_cfa_offset 32
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194 0006 7860     		str	r0, [r7, #4]
 1195 0008 0A1C     		mov	r2, r1
 1196 000a BB1C     		add	r3, r7, #2
 1197 000c 1A80     		strh	r2, [r3]
 825:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 826:.\Generated_Source\PSoC4/ADC.c **** 
 827:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 828:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1198              		.loc 1 828 0
 1199 000e 7B68     		ldr	r3, [r7, #4]
 1200 0010 012B     		cmp	r3, #1
 1201 0012 02D9     		bls	.L84
 1202              		.loc 1 828 0 is_stmt 0 discriminator 1
 1203 0014 0020     		mov	r0, #0
 1204 0016 FFF7FEFF 		bl	CyHalt
 1205              	.L84:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 831:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 832:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 833:.\Generated_Source\PSoC4/ADC.c ****             {
 834:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 835:.\Generated_Source\PSoC4/ADC.c ****             }
 836:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 37


 837:.\Generated_Source\PSoC4/ADC.c **** 
 838:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 839:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1206              		.loc 1 839 0 is_stmt 1
 1207 001a BB1C     		add	r3, r7, #2
 1208 001c 1A88     		ldrh	r2, [r3]
 1209 001e 154B     		ldr	r3, .L86
 1210 0020 7968     		ldr	r1, [r7, #4]
 1211 0022 4900     		lsl	r1, r1, #1
 1212 0024 CB5A     		ldrh	r3, [r1, r3]
 1213 0026 9BB2     		uxth	r3, r3
 1214 0028 9BB2     		uxth	r3, r3
 1215 002a D31A     		sub	r3, r2, r3
 1216 002c 9AB2     		uxth	r2, r3
 1217 002e BB1C     		add	r3, r7, #2
 1218 0030 1A80     		strh	r2, [r3]
 840:.\Generated_Source\PSoC4/ADC.c **** 
 841:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1219              		.loc 1 841 0
 1220 0032 BB1C     		add	r3, r7, #2
 1221 0034 0022     		mov	r2, #0
 1222 0036 9B5E     		ldrsh	r3, [r3, r2]
 1223 0038 181C     		mov	r0, r3
 1224 003a FFF7FEFF 		bl	__aeabi_i2f
 1225 003e 031C     		add	r3, r0, #0
 1226 0040 181C     		add	r0, r3, #0
 1227 0042 0D49     		ldr	r1, .L86+4
 1228 0044 FFF7FEFF 		bl	__aeabi_fmul
 1229 0048 031C     		add	r3, r0, #0
 1230 004a 1C1C     		add	r4, r3, #0
 1231 004c 0B4B     		ldr	r3, .L86+8
 1232 004e 7A68     		ldr	r2, [r7, #4]
 1233 0050 9200     		lsl	r2, r2, #2
 1234 0052 D358     		ldr	r3, [r2, r3]
 1235 0054 181C     		mov	r0, r3
 1236 0056 FFF7FEFF 		bl	__aeabi_i2f
 1237 005a 031C     		add	r3, r0, #0
 1238 005c 201C     		add	r0, r4, #0
 1239 005e 191C     		add	r1, r3, #0
 1240 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1241 0064 031C     		add	r3, r0, #0
 1242 0066 FB60     		str	r3, [r7, #12]
 842:.\Generated_Source\PSoC4/ADC.c **** 
 843:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 1243              		.loc 1 843 0
 1244 0068 FB68     		ldr	r3, [r7, #12]
 844:.\Generated_Source\PSoC4/ADC.c ****     }
 1245              		.loc 1 844 0
 1246 006a 181C     		add	r0, r3, #0
 1247 006c BD46     		mov	sp, r7
 1248 006e 05B0     		add	sp, sp, #20
 1249              		@ sp needed
 1250 0070 90BD     		pop	{r4, r7, pc}
 1251              	.L87:
 1252 0072 C046     		.align	2
 1253              	.L86:
 1254 0074 00000000 		.word	ADC_offset
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 38


 1255 0078 00002041 		.word	1092616192
 1256 007c 00000000 		.word	ADC_countsPer10Volt
 1257              		.cfi_endproc
 1258              	.LFE17:
 1259              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1260              		.section	.rodata
 1261              		.align	2
 1262              		.type	ADC_InputsPlacement.4743, %object
 1263              		.size	ADC_InputsPlacement.4743, 2
 1264              	ADC_InputsPlacement.4743:
 1265 0008 00       		.byte	0
 1266 0009 01       		.byte	1
 1267 000a 0000     		.text
 1268              	.Letext0:
 1269              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1270              		.section	.debug_info,"",%progbits
 1271              	.Ldebug_info0:
 1272 0000 96040000 		.4byte	0x496
 1273 0004 0400     		.2byte	0x4
 1274 0006 00000000 		.4byte	.Ldebug_abbrev0
 1275 000a 04       		.byte	0x4
 1276 000b 01       		.uleb128 0x1
 1277 000c 21020000 		.4byte	.LASF60
 1278 0010 01       		.byte	0x1
 1279 0011 CB020000 		.4byte	.LASF61
 1280 0015 29000000 		.4byte	.LASF62
 1281 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1282 001d 00000000 		.4byte	0
 1283 0021 00000000 		.4byte	.Ldebug_line0
 1284 0025 02       		.uleb128 0x2
 1285 0026 01       		.byte	0x1
 1286 0027 06       		.byte	0x6
 1287 0028 B3000000 		.4byte	.LASF0
 1288 002c 02       		.uleb128 0x2
 1289 002d 01       		.byte	0x1
 1290 002e 08       		.byte	0x8
 1291 002f EA020000 		.4byte	.LASF1
 1292 0033 02       		.uleb128 0x2
 1293 0034 02       		.byte	0x2
 1294 0035 05       		.byte	0x5
 1295 0036 03030000 		.4byte	.LASF2
 1296 003a 02       		.uleb128 0x2
 1297 003b 02       		.byte	0x2
 1298 003c 07       		.byte	0x7
 1299 003d 8A010000 		.4byte	.LASF3
 1300 0041 02       		.uleb128 0x2
 1301 0042 04       		.byte	0x4
 1302 0043 05       		.byte	0x5
 1303 0044 D6000000 		.4byte	.LASF4
 1304 0048 02       		.uleb128 0x2
 1305 0049 04       		.byte	0x4
 1306 004a 07       		.byte	0x7
 1307 004b 59010000 		.4byte	.LASF5
 1308 004f 02       		.uleb128 0x2
 1309 0050 08       		.byte	0x8
 1310 0051 05       		.byte	0x5
 1311 0052 A5000000 		.4byte	.LASF6
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 39


 1312 0056 02       		.uleb128 0x2
 1313 0057 08       		.byte	0x8
 1314 0058 07       		.byte	0x7
 1315 0059 69000000 		.4byte	.LASF7
 1316 005d 03       		.uleb128 0x3
 1317 005e 04       		.byte	0x4
 1318 005f 05       		.byte	0x5
 1319 0060 696E7400 		.ascii	"int\000"
 1320 0064 02       		.uleb128 0x2
 1321 0065 04       		.byte	0x4
 1322 0066 07       		.byte	0x7
 1323 0067 45010000 		.4byte	.LASF8
 1324 006b 04       		.uleb128 0x4
 1325 006c 07010000 		.4byte	.LASF9
 1326 0070 02       		.byte	0x2
 1327 0071 B3       		.byte	0xb3
 1328 0072 2C000000 		.4byte	0x2c
 1329 0076 04       		.uleb128 0x4
 1330 0077 00000000 		.4byte	.LASF10
 1331 007b 02       		.byte	0x2
 1332 007c B4       		.byte	0xb4
 1333 007d 3A000000 		.4byte	0x3a
 1334 0081 04       		.uleb128 0x4
 1335 0082 14010000 		.4byte	.LASF11
 1336 0086 02       		.byte	0x2
 1337 0087 B5       		.byte	0xb5
 1338 0088 48000000 		.4byte	0x48
 1339 008c 04       		.uleb128 0x4
 1340 008d 55030000 		.4byte	.LASF12
 1341 0091 02       		.byte	0x2
 1342 0092 B7       		.byte	0xb7
 1343 0093 33000000 		.4byte	0x33
 1344 0097 04       		.uleb128 0x4
 1345 0098 C6000000 		.4byte	.LASF13
 1346 009c 02       		.byte	0x2
 1347 009d B8       		.byte	0xb8
 1348 009e 41000000 		.4byte	0x41
 1349 00a2 04       		.uleb128 0x4
 1350 00a3 BA010000 		.4byte	.LASF14
 1351 00a7 02       		.byte	0x2
 1352 00a8 B9       		.byte	0xb9
 1353 00a9 AD000000 		.4byte	0xad
 1354 00ad 02       		.uleb128 0x2
 1355 00ae 04       		.byte	0x4
 1356 00af 04       		.byte	0x4
 1357 00b0 1B020000 		.4byte	.LASF15
 1358 00b4 02       		.uleb128 0x2
 1359 00b5 08       		.byte	0x8
 1360 00b6 04       		.byte	0x4
 1361 00b7 0D010000 		.4byte	.LASF16
 1362 00bb 04       		.uleb128 0x4
 1363 00bc F9010000 		.4byte	.LASF17
 1364 00c0 02       		.byte	0x2
 1365 00c1 BE       		.byte	0xbe
 1366 00c2 4F000000 		.4byte	0x4f
 1367 00c6 02       		.uleb128 0x2
 1368 00c7 01       		.byte	0x1
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 40


 1369 00c8 08       		.byte	0x8
 1370 00c9 21030000 		.4byte	.LASF18
 1371 00cd 05       		.uleb128 0x5
 1372 00ce B4010000 		.4byte	.LASF19
 1373 00d2 02       		.byte	0x2
 1374 00d3 5F01     		.2byte	0x15f
 1375 00d5 D9000000 		.4byte	0xd9
 1376 00d9 06       		.uleb128 0x6
 1377 00da 81000000 		.4byte	0x81
 1378 00de 02       		.uleb128 0x2
 1379 00df 04       		.byte	0x4
 1380 00e0 07       		.byte	0x7
 1381 00e1 C2010000 		.4byte	.LASF20
 1382 00e5 07       		.uleb128 0x7
 1383 00e6 CC000000 		.4byte	.LASF25
 1384 00ea 01       		.byte	0x1
 1385 00eb 3F       		.byte	0x3f
 1386 00ec 00000000 		.4byte	.LFB0
 1387 00f0 24000000 		.4byte	.LFE0-.LFB0
 1388 00f4 01       		.uleb128 0x1
 1389 00f5 9C       		.byte	0x9c
 1390 00f6 08       		.uleb128 0x8
 1391 00f7 60000000 		.4byte	.LASF36
 1392 00fb 01       		.byte	0x1
 1393 00fc 5E       		.byte	0x5e
 1394 00fd 00000000 		.4byte	.LFB1
 1395 0101 08020000 		.4byte	.LFE1-.LFB1
 1396 0105 01       		.uleb128 0x1
 1397 0106 9C       		.byte	0x9c
 1398 0107 47010000 		.4byte	0x147
 1399 010b 09       		.uleb128 0x9
 1400 010c 16030000 		.4byte	.LASF21
 1401 0110 01       		.byte	0x1
 1402 0111 60       		.byte	0x60
 1403 0112 81000000 		.4byte	0x81
 1404 0116 02       		.uleb128 0x2
 1405 0117 91       		.byte	0x91
 1406 0118 6C       		.sleb128 -20
 1407 0119 09       		.uleb128 0x9
 1408 011a 80010000 		.4byte	.LASF22
 1409 011e 01       		.byte	0x1
 1410 011f 61       		.byte	0x61
 1411 0120 81000000 		.4byte	0x81
 1412 0124 02       		.uleb128 0x2
 1413 0125 91       		.byte	0x91
 1414 0126 64       		.sleb128 -28
 1415 0127 09       		.uleb128 0x9
 1416 0128 0F000000 		.4byte	.LASF23
 1417 012c 01       		.byte	0x1
 1418 012d 62       		.byte	0x62
 1419 012e 97000000 		.4byte	0x97
 1420 0132 02       		.uleb128 0x2
 1421 0133 91       		.byte	0x91
 1422 0134 68       		.sleb128 -24
 1423 0135 09       		.uleb128 0x9
 1424 0136 80000000 		.4byte	.LASF24
 1425 013a 01       		.byte	0x1
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 41


 1426 013b 65       		.byte	0x65
 1427 013c 57010000 		.4byte	0x157
 1428 0140 05       		.uleb128 0x5
 1429 0141 03       		.byte	0x3
 1430 0142 08000000 		.4byte	ADC_InputsPlacement.4743
 1431 0146 00       		.byte	0
 1432 0147 0A       		.uleb128 0xa
 1433 0148 6B000000 		.4byte	0x6b
 1434 014c 57010000 		.4byte	0x157
 1435 0150 0B       		.uleb128 0xb
 1436 0151 DE000000 		.4byte	0xde
 1437 0155 01       		.byte	0x1
 1438 0156 00       		.byte	0
 1439 0157 0C       		.uleb128 0xc
 1440 0158 47010000 		.4byte	0x147
 1441 015c 0D       		.uleb128 0xd
 1442 015d 4A030000 		.4byte	.LASF26
 1443 0161 01       		.byte	0x1
 1444 0162 2A01     		.2byte	0x12a
 1445 0164 00000000 		.4byte	.LFB2
 1446 0168 28000000 		.4byte	.LFE2-.LFB2
 1447 016c 01       		.uleb128 0x1
 1448 016d 9C       		.byte	0x9c
 1449 016e 0E       		.uleb128 0xe
 1450 016f 0D030000 		.4byte	.LASF27
 1451 0173 01       		.byte	0x1
 1452 0174 4D01     		.2byte	0x14d
 1453 0176 00000000 		.4byte	.LFB3
 1454 017a 18000000 		.4byte	.LFE3-.LFB3
 1455 017e 01       		.uleb128 0x1
 1456 017f 9C       		.byte	0x9c
 1457 0180 0E       		.uleb128 0xe
 1458 0181 94000000 		.4byte	.LASF28
 1459 0185 01       		.byte	0x1
 1460 0186 6701     		.2byte	0x167
 1461 0188 00000000 		.4byte	.LFB4
 1462 018c 1C000000 		.4byte	.LFE4-.LFB4
 1463 0190 01       		.uleb128 0x1
 1464 0191 9C       		.byte	0x9c
 1465 0192 0E       		.uleb128 0xe
 1466 0193 9D010000 		.4byte	.LASF29
 1467 0197 01       		.byte	0x1
 1468 0198 8001     		.2byte	0x180
 1469 019a 00000000 		.4byte	.LFB5
 1470 019e 1C000000 		.4byte	.LFE5-.LFB5
 1471 01a2 01       		.uleb128 0x1
 1472 01a3 9C       		.byte	0x9c
 1473 01a4 0F       		.uleb128 0xf
 1474 01a5 E5010000 		.4byte	.LASF31
 1475 01a9 01       		.byte	0x1
 1476 01aa A201     		.2byte	0x1a2
 1477 01ac 81000000 		.4byte	0x81
 1478 01b0 00000000 		.4byte	.LFB6
 1479 01b4 48000000 		.4byte	.LFE6-.LFB6
 1480 01b8 01       		.uleb128 0x1
 1481 01b9 9C       		.byte	0x9c
 1482 01ba DD010000 		.4byte	0x1dd
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 42


 1483 01be 10       		.uleb128 0x10
 1484 01bf 2C010000 		.4byte	.LASF33
 1485 01c3 01       		.byte	0x1
 1486 01c4 A201     		.2byte	0x1a2
 1487 01c6 81000000 		.4byte	0x81
 1488 01ca 02       		.uleb128 0x2
 1489 01cb 91       		.byte	0x91
 1490 01cc 6C       		.sleb128 -20
 1491 01cd 11       		.uleb128 0x11
 1492 01ce BF000000 		.4byte	.LASF30
 1493 01d2 01       		.byte	0x1
 1494 01d3 A401     		.2byte	0x1a4
 1495 01d5 81000000 		.4byte	0x81
 1496 01d9 02       		.uleb128 0x2
 1497 01da 91       		.byte	0x91
 1498 01db 74       		.sleb128 -12
 1499 01dc 00       		.byte	0
 1500 01dd 12       		.uleb128 0x12
 1501 01de 70030000 		.4byte	.LASF32
 1502 01e2 01       		.byte	0x1
 1503 01e3 D801     		.2byte	0x1d8
 1504 01e5 8C000000 		.4byte	0x8c
 1505 01e9 00000000 		.4byte	.LFB7
 1506 01ed 44000000 		.4byte	.LFE7-.LFB7
 1507 01f1 01       		.uleb128 0x1
 1508 01f2 9C       		.byte	0x9c
 1509 01f3 16020000 		.4byte	0x216
 1510 01f7 10       		.uleb128 0x10
 1511 01f8 1C030000 		.4byte	.LASF34
 1512 01fc 01       		.byte	0x1
 1513 01fd D801     		.2byte	0x1d8
 1514 01ff 81000000 		.4byte	0x81
 1515 0203 02       		.uleb128 0x2
 1516 0204 91       		.byte	0x91
 1517 0205 6C       		.sleb128 -20
 1518 0206 11       		.uleb128 0x11
 1519 0207 69030000 		.4byte	.LASF35
 1520 020b 01       		.byte	0x1
 1521 020c DA01     		.2byte	0x1da
 1522 020e 81000000 		.4byte	0x81
 1523 0212 02       		.uleb128 0x2
 1524 0213 91       		.byte	0x91
 1525 0214 74       		.sleb128 -12
 1526 0215 00       		.byte	0
 1527 0216 13       		.uleb128 0x13
 1528 0217 FF010000 		.4byte	.LASF37
 1529 021b 01       		.byte	0x1
 1530 021c 0502     		.2byte	0x205
 1531 021e 00000000 		.4byte	.LFB8
 1532 0222 1C000000 		.4byte	.LFE8-.LFB8
 1533 0226 01       		.uleb128 0x1
 1534 0227 9C       		.byte	0x9c
 1535 0228 3C020000 		.4byte	0x23c
 1536 022c 10       		.uleb128 0x10
 1537 022d 1B010000 		.4byte	.LASF38
 1538 0231 01       		.byte	0x1
 1539 0232 0502     		.2byte	0x205
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 43


 1540 0234 81000000 		.4byte	0x81
 1541 0238 02       		.uleb128 0x2
 1542 0239 91       		.byte	0x91
 1543 023a 74       		.sleb128 -12
 1544 023b 00       		.byte	0
 1545 023c 13       		.uleb128 0x13
 1546 023d BB020000 		.4byte	.LASF39
 1547 0241 01       		.byte	0x1
 1548 0242 3102     		.2byte	0x231
 1549 0244 00000000 		.4byte	.LFB9
 1550 0248 30000000 		.4byte	.LFE9-.LFB9
 1551 024c 01       		.uleb128 0x1
 1552 024d 9C       		.byte	0x9c
 1553 024e 62020000 		.4byte	0x262
 1554 0252 10       		.uleb128 0x10
 1555 0253 CB010000 		.4byte	.LASF40
 1556 0257 01       		.byte	0x1
 1557 0258 3102     		.2byte	0x231
 1558 025a 81000000 		.4byte	0x81
 1559 025e 02       		.uleb128 0x2
 1560 025f 91       		.byte	0x91
 1561 0260 74       		.sleb128 -12
 1562 0261 00       		.byte	0
 1563 0262 13       		.uleb128 0x13
 1564 0263 D4010000 		.4byte	.LASF41
 1565 0267 01       		.byte	0x1
 1566 0268 4602     		.2byte	0x246
 1567 026a 00000000 		.4byte	.LFB10
 1568 026e 2C000000 		.4byte	.LFE10-.LFB10
 1569 0272 01       		.uleb128 0x1
 1570 0273 9C       		.byte	0x9c
 1571 0274 88020000 		.4byte	0x288
 1572 0278 10       		.uleb128 0x10
 1573 0279 9D020000 		.4byte	.LASF42
 1574 027d 01       		.byte	0x1
 1575 027e 4602     		.2byte	0x246
 1576 0280 81000000 		.4byte	0x81
 1577 0284 02       		.uleb128 0x2
 1578 0285 91       		.byte	0x91
 1579 0286 74       		.sleb128 -12
 1580 0287 00       		.byte	0
 1581 0288 13       		.uleb128 0x13
 1582 0289 34010000 		.4byte	.LASF43
 1583 028d 01       		.byte	0x1
 1584 028e 5E02     		.2byte	0x25e
 1585 0290 00000000 		.4byte	.LFB11
 1586 0294 1C000000 		.4byte	.LFE11-.LFB11
 1587 0298 01       		.uleb128 0x1
 1588 0299 9C       		.byte	0x9c
 1589 029a AE020000 		.4byte	0x2ae
 1590 029e 10       		.uleb128 0x10
 1591 029f 1B010000 		.4byte	.LASF38
 1592 02a3 01       		.byte	0x1
 1593 02a4 5E02     		.2byte	0x25e
 1594 02a6 81000000 		.4byte	0x81
 1595 02aa 02       		.uleb128 0x2
 1596 02ab 91       		.byte	0x91
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 44


 1597 02ac 74       		.sleb128 -12
 1598 02ad 00       		.byte	0
 1599 02ae 13       		.uleb128 0x13
 1600 02af 6B010000 		.4byte	.LASF44
 1601 02b3 01       		.byte	0x1
 1602 02b4 7502     		.2byte	0x275
 1603 02b6 00000000 		.4byte	.LFB12
 1604 02ba 1C000000 		.4byte	.LFE12-.LFB12
 1605 02be 01       		.uleb128 0x1
 1606 02bf 9C       		.byte	0x9c
 1607 02c0 D4020000 		.4byte	0x2d4
 1608 02c4 10       		.uleb128 0x10
 1609 02c5 1B010000 		.4byte	.LASF38
 1610 02c9 01       		.byte	0x1
 1611 02ca 7502     		.2byte	0x275
 1612 02cc 81000000 		.4byte	0x81
 1613 02d0 02       		.uleb128 0x2
 1614 02d1 91       		.byte	0x91
 1615 02d2 74       		.sleb128 -12
 1616 02d3 00       		.byte	0
 1617 02d4 14       		.uleb128 0x14
 1618 02d5 5B030000 		.4byte	.LASF45
 1619 02d9 01       		.byte	0x1
 1620 02da 9102     		.2byte	0x291
 1621 02dc 00000000 		.4byte	.LFB13
 1622 02e0 30000000 		.4byte	.LFE13-.LFB13
 1623 02e4 01       		.uleb128 0x1
 1624 02e5 9C       		.byte	0x9c
 1625 02e6 09030000 		.4byte	0x309
 1626 02ea 10       		.uleb128 0x10
 1627 02eb 1C030000 		.4byte	.LASF34
 1628 02ef 01       		.byte	0x1
 1629 02f0 9102     		.2byte	0x291
 1630 02f2 81000000 		.4byte	0x81
 1631 02f6 02       		.uleb128 0x2
 1632 02f7 91       		.byte	0x91
 1633 02f8 74       		.sleb128 -12
 1634 02f9 10       		.uleb128 0x10
 1635 02fa 39030000 		.4byte	.LASF46
 1636 02fe 01       		.byte	0x1
 1637 02ff 9102     		.2byte	0x291
 1638 0301 8C000000 		.4byte	0x8c
 1639 0305 02       		.uleb128 0x2
 1640 0306 91       		.byte	0x91
 1641 0307 72       		.sleb128 -14
 1642 0308 00       		.byte	0
 1643 0309 14       		.uleb128 0x14
 1644 030a 0F020000 		.4byte	.LASF47
 1645 030e 01       		.byte	0x1
 1646 030f B302     		.2byte	0x2b3
 1647 0311 00000000 		.4byte	.LFB14
 1648 0315 2C000000 		.4byte	.LFE14-.LFB14
 1649 0319 01       		.uleb128 0x1
 1650 031a 9C       		.byte	0x9c
 1651 031b 3E030000 		.4byte	0x33e
 1652 031f 10       		.uleb128 0x10
 1653 0320 1C030000 		.4byte	.LASF34
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 45


 1654 0324 01       		.byte	0x1
 1655 0325 B302     		.2byte	0x2b3
 1656 0327 81000000 		.4byte	0x81
 1657 032b 02       		.uleb128 0x2
 1658 032c 91       		.byte	0x91
 1659 032d 74       		.sleb128 -12
 1660 032e 10       		.uleb128 0x10
 1661 032f 07000000 		.4byte	.LASF48
 1662 0333 01       		.byte	0x1
 1663 0334 B302     		.2byte	0x2b3
 1664 0336 97000000 		.4byte	0x97
 1665 033a 02       		.uleb128 0x2
 1666 033b 91       		.byte	0x91
 1667 033c 70       		.sleb128 -16
 1668 033d 00       		.byte	0
 1669 033e 12       		.uleb128 0x12
 1670 033f A7020000 		.4byte	.LASF49
 1671 0343 01       		.byte	0x1
 1672 0344 D402     		.2byte	0x2d4
 1673 0346 8C000000 		.4byte	0x8c
 1674 034a 00000000 		.4byte	.LFB15
 1675 034e A4000000 		.4byte	.LFE15-.LFB15
 1676 0352 01       		.uleb128 0x1
 1677 0353 9C       		.byte	0x9c
 1678 0354 86030000 		.4byte	0x386
 1679 0358 10       		.uleb128 0x10
 1680 0359 1C030000 		.4byte	.LASF34
 1681 035d 01       		.byte	0x1
 1682 035e D402     		.2byte	0x2d4
 1683 0360 81000000 		.4byte	0x81
 1684 0364 02       		.uleb128 0x2
 1685 0365 91       		.byte	0x91
 1686 0366 6C       		.sleb128 -20
 1687 0367 10       		.uleb128 0x10
 1688 0368 40030000 		.4byte	.LASF50
 1689 036c 01       		.byte	0x1
 1690 036d D402     		.2byte	0x2d4
 1691 036f 8C000000 		.4byte	0x8c
 1692 0373 02       		.uleb128 0x2
 1693 0374 91       		.byte	0x91
 1694 0375 6A       		.sleb128 -22
 1695 0376 11       		.uleb128 0x11
 1696 0377 AD010000 		.4byte	.LASF51
 1697 037b 01       		.byte	0x1
 1698 037c D602     		.2byte	0x2d6
 1699 037e 8C000000 		.4byte	0x8c
 1700 0382 02       		.uleb128 0x2
 1701 0383 91       		.byte	0x91
 1702 0384 76       		.sleb128 -10
 1703 0385 00       		.byte	0
 1704 0386 12       		.uleb128 0x12
 1705 0387 DF000000 		.4byte	.LASF52
 1706 038b 01       		.byte	0x1
 1707 038c 0A03     		.2byte	0x30a
 1708 038e 97000000 		.4byte	0x97
 1709 0392 00000000 		.4byte	.LFB16
 1710 0396 98000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 46


 1711 039a 01       		.uleb128 0x1
 1712 039b 9C       		.byte	0x9c
 1713 039c CE030000 		.4byte	0x3ce
 1714 03a0 10       		.uleb128 0x10
 1715 03a1 1C030000 		.4byte	.LASF34
 1716 03a5 01       		.byte	0x1
 1717 03a6 0A03     		.2byte	0x30a
 1718 03a8 81000000 		.4byte	0x81
 1719 03ac 02       		.uleb128 0x2
 1720 03ad 91       		.byte	0x91
 1721 03ae 64       		.sleb128 -28
 1722 03af 10       		.uleb128 0x10
 1723 03b0 40030000 		.4byte	.LASF50
 1724 03b4 01       		.byte	0x1
 1725 03b5 0A03     		.2byte	0x30a
 1726 03b7 8C000000 		.4byte	0x8c
 1727 03bb 02       		.uleb128 0x2
 1728 03bc 91       		.byte	0x91
 1729 03bd 62       		.sleb128 -30
 1730 03be 11       		.uleb128 0x11
 1731 03bf 52010000 		.4byte	.LASF53
 1732 03c3 01       		.byte	0x1
 1733 03c4 0C03     		.2byte	0x30c
 1734 03c6 BB000000 		.4byte	0xbb
 1735 03ca 02       		.uleb128 0x2
 1736 03cb 91       		.byte	0x91
 1737 03cc 68       		.sleb128 -24
 1738 03cd 00       		.byte	0
 1739 03ce 12       		.uleb128 0x12
 1740 03cf 16000000 		.4byte	.LASF54
 1741 03d3 01       		.byte	0x1
 1742 03d4 3703     		.2byte	0x337
 1743 03d6 A2000000 		.4byte	0xa2
 1744 03da 00000000 		.4byte	.LFB17
 1745 03de 80000000 		.4byte	.LFE17-.LFB17
 1746 03e2 01       		.uleb128 0x1
 1747 03e3 9C       		.byte	0x9c
 1748 03e4 16040000 		.4byte	0x416
 1749 03e8 10       		.uleb128 0x10
 1750 03e9 1C030000 		.4byte	.LASF34
 1751 03ed 01       		.byte	0x1
 1752 03ee 3703     		.2byte	0x337
 1753 03f0 81000000 		.4byte	0x81
 1754 03f4 02       		.uleb128 0x2
 1755 03f5 91       		.byte	0x91
 1756 03f6 64       		.sleb128 -28
 1757 03f7 10       		.uleb128 0x10
 1758 03f8 40030000 		.4byte	.LASF50
 1759 03fc 01       		.byte	0x1
 1760 03fd 3703     		.2byte	0x337
 1761 03ff 8C000000 		.4byte	0x8c
 1762 0403 02       		.uleb128 0x2
 1763 0404 91       		.byte	0x91
 1764 0405 62       		.sleb128 -30
 1765 0406 11       		.uleb128 0x11
 1766 0407 7A010000 		.4byte	.LASF55
 1767 040b 01       		.byte	0x1
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 47


 1768 040c 3903     		.2byte	0x339
 1769 040e A2000000 		.4byte	0xa2
 1770 0412 02       		.uleb128 0x2
 1771 0413 91       		.byte	0x91
 1772 0414 6C       		.sleb128 -20
 1773 0415 00       		.byte	0
 1774 0416 0A       		.uleb128 0xa
 1775 0417 81000000 		.4byte	0x81
 1776 041b 26040000 		.4byte	0x426
 1777 041f 0B       		.uleb128 0xb
 1778 0420 DE000000 		.4byte	0xde
 1779 0424 01       		.byte	0x1
 1780 0425 00       		.byte	0
 1781 0426 09       		.uleb128 0x9
 1782 0427 26030000 		.4byte	.LASF56
 1783 042b 01       		.byte	0x1
 1784 042c 21       		.byte	0x21
 1785 042d 37040000 		.4byte	0x437
 1786 0431 05       		.uleb128 0x5
 1787 0432 03       		.byte	0x3
 1788 0433 00000000 		.4byte	ADC_channelsConfig
 1789 0437 0C       		.uleb128 0xc
 1790 0438 16040000 		.4byte	0x416
 1791 043c 15       		.uleb128 0x15
 1792 043d 20010000 		.4byte	.LASF57
 1793 0441 01       		.byte	0x1
 1794 0442 18       		.byte	0x18
 1795 0443 6B000000 		.4byte	0x6b
 1796 0447 05       		.uleb128 0x5
 1797 0448 03       		.byte	0x3
 1798 0449 00000000 		.4byte	ADC_initVar
 1799 044d 0A       		.uleb128 0xa
 1800 044e 8C000000 		.4byte	0x8c
 1801 0452 5D040000 		.4byte	0x45d
 1802 0456 0B       		.uleb128 0xb
 1803 0457 DE000000 		.4byte	0xde
 1804 045b 01       		.byte	0x1
 1805 045c 00       		.byte	0
 1806 045d 15       		.uleb128 0x15
 1807 045e F8020000 		.4byte	.LASF58
 1808 0462 01       		.byte	0x1
 1809 0463 19       		.byte	0x19
 1810 0464 6E040000 		.4byte	0x46e
 1811 0468 05       		.uleb128 0x5
 1812 0469 03       		.byte	0x3
 1813 046a 00000000 		.4byte	ADC_offset
 1814 046e 06       		.uleb128 0x6
 1815 046f 4D040000 		.4byte	0x44d
 1816 0473 0A       		.uleb128 0xa
 1817 0474 97000000 		.4byte	0x97
 1818 0478 83040000 		.4byte	0x483
 1819 047c 0B       		.uleb128 0xb
 1820 047d DE000000 		.4byte	0xde
 1821 0481 01       		.byte	0x1
 1822 0482 00       		.byte	0
 1823 0483 15       		.uleb128 0x15
 1824 0484 F3000000 		.4byte	.LASF59
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 48


 1825 0488 01       		.byte	0x1
 1826 0489 1A       		.byte	0x1a
 1827 048a 94040000 		.4byte	0x494
 1828 048e 05       		.uleb128 0x5
 1829 048f 03       		.byte	0x3
 1830 0490 00000000 		.4byte	ADC_countsPer10Volt
 1831 0494 06       		.uleb128 0x6
 1832 0495 73040000 		.4byte	0x473
 1833 0499 00       		.byte	0
 1834              		.section	.debug_abbrev,"",%progbits
 1835              	.Ldebug_abbrev0:
 1836 0000 01       		.uleb128 0x1
 1837 0001 11       		.uleb128 0x11
 1838 0002 01       		.byte	0x1
 1839 0003 25       		.uleb128 0x25
 1840 0004 0E       		.uleb128 0xe
 1841 0005 13       		.uleb128 0x13
 1842 0006 0B       		.uleb128 0xb
 1843 0007 03       		.uleb128 0x3
 1844 0008 0E       		.uleb128 0xe
 1845 0009 1B       		.uleb128 0x1b
 1846 000a 0E       		.uleb128 0xe
 1847 000b 55       		.uleb128 0x55
 1848 000c 17       		.uleb128 0x17
 1849 000d 11       		.uleb128 0x11
 1850 000e 01       		.uleb128 0x1
 1851 000f 10       		.uleb128 0x10
 1852 0010 17       		.uleb128 0x17
 1853 0011 00       		.byte	0
 1854 0012 00       		.byte	0
 1855 0013 02       		.uleb128 0x2
 1856 0014 24       		.uleb128 0x24
 1857 0015 00       		.byte	0
 1858 0016 0B       		.uleb128 0xb
 1859 0017 0B       		.uleb128 0xb
 1860 0018 3E       		.uleb128 0x3e
 1861 0019 0B       		.uleb128 0xb
 1862 001a 03       		.uleb128 0x3
 1863 001b 0E       		.uleb128 0xe
 1864 001c 00       		.byte	0
 1865 001d 00       		.byte	0
 1866 001e 03       		.uleb128 0x3
 1867 001f 24       		.uleb128 0x24
 1868 0020 00       		.byte	0
 1869 0021 0B       		.uleb128 0xb
 1870 0022 0B       		.uleb128 0xb
 1871 0023 3E       		.uleb128 0x3e
 1872 0024 0B       		.uleb128 0xb
 1873 0025 03       		.uleb128 0x3
 1874 0026 08       		.uleb128 0x8
 1875 0027 00       		.byte	0
 1876 0028 00       		.byte	0
 1877 0029 04       		.uleb128 0x4
 1878 002a 16       		.uleb128 0x16
 1879 002b 00       		.byte	0
 1880 002c 03       		.uleb128 0x3
 1881 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 49


 1882 002e 3A       		.uleb128 0x3a
 1883 002f 0B       		.uleb128 0xb
 1884 0030 3B       		.uleb128 0x3b
 1885 0031 0B       		.uleb128 0xb
 1886 0032 49       		.uleb128 0x49
 1887 0033 13       		.uleb128 0x13
 1888 0034 00       		.byte	0
 1889 0035 00       		.byte	0
 1890 0036 05       		.uleb128 0x5
 1891 0037 16       		.uleb128 0x16
 1892 0038 00       		.byte	0
 1893 0039 03       		.uleb128 0x3
 1894 003a 0E       		.uleb128 0xe
 1895 003b 3A       		.uleb128 0x3a
 1896 003c 0B       		.uleb128 0xb
 1897 003d 3B       		.uleb128 0x3b
 1898 003e 05       		.uleb128 0x5
 1899 003f 49       		.uleb128 0x49
 1900 0040 13       		.uleb128 0x13
 1901 0041 00       		.byte	0
 1902 0042 00       		.byte	0
 1903 0043 06       		.uleb128 0x6
 1904 0044 35       		.uleb128 0x35
 1905 0045 00       		.byte	0
 1906 0046 49       		.uleb128 0x49
 1907 0047 13       		.uleb128 0x13
 1908 0048 00       		.byte	0
 1909 0049 00       		.byte	0
 1910 004a 07       		.uleb128 0x7
 1911 004b 2E       		.uleb128 0x2e
 1912 004c 00       		.byte	0
 1913 004d 3F       		.uleb128 0x3f
 1914 004e 19       		.uleb128 0x19
 1915 004f 03       		.uleb128 0x3
 1916 0050 0E       		.uleb128 0xe
 1917 0051 3A       		.uleb128 0x3a
 1918 0052 0B       		.uleb128 0xb
 1919 0053 3B       		.uleb128 0x3b
 1920 0054 0B       		.uleb128 0xb
 1921 0055 27       		.uleb128 0x27
 1922 0056 19       		.uleb128 0x19
 1923 0057 11       		.uleb128 0x11
 1924 0058 01       		.uleb128 0x1
 1925 0059 12       		.uleb128 0x12
 1926 005a 06       		.uleb128 0x6
 1927 005b 40       		.uleb128 0x40
 1928 005c 18       		.uleb128 0x18
 1929 005d 9642     		.uleb128 0x2116
 1930 005f 19       		.uleb128 0x19
 1931 0060 00       		.byte	0
 1932 0061 00       		.byte	0
 1933 0062 08       		.uleb128 0x8
 1934 0063 2E       		.uleb128 0x2e
 1935 0064 01       		.byte	0x1
 1936 0065 3F       		.uleb128 0x3f
 1937 0066 19       		.uleb128 0x19
 1938 0067 03       		.uleb128 0x3
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 50


 1939 0068 0E       		.uleb128 0xe
 1940 0069 3A       		.uleb128 0x3a
 1941 006a 0B       		.uleb128 0xb
 1942 006b 3B       		.uleb128 0x3b
 1943 006c 0B       		.uleb128 0xb
 1944 006d 27       		.uleb128 0x27
 1945 006e 19       		.uleb128 0x19
 1946 006f 11       		.uleb128 0x11
 1947 0070 01       		.uleb128 0x1
 1948 0071 12       		.uleb128 0x12
 1949 0072 06       		.uleb128 0x6
 1950 0073 40       		.uleb128 0x40
 1951 0074 18       		.uleb128 0x18
 1952 0075 9642     		.uleb128 0x2116
 1953 0077 19       		.uleb128 0x19
 1954 0078 01       		.uleb128 0x1
 1955 0079 13       		.uleb128 0x13
 1956 007a 00       		.byte	0
 1957 007b 00       		.byte	0
 1958 007c 09       		.uleb128 0x9
 1959 007d 34       		.uleb128 0x34
 1960 007e 00       		.byte	0
 1961 007f 03       		.uleb128 0x3
 1962 0080 0E       		.uleb128 0xe
 1963 0081 3A       		.uleb128 0x3a
 1964 0082 0B       		.uleb128 0xb
 1965 0083 3B       		.uleb128 0x3b
 1966 0084 0B       		.uleb128 0xb
 1967 0085 49       		.uleb128 0x49
 1968 0086 13       		.uleb128 0x13
 1969 0087 02       		.uleb128 0x2
 1970 0088 18       		.uleb128 0x18
 1971 0089 00       		.byte	0
 1972 008a 00       		.byte	0
 1973 008b 0A       		.uleb128 0xa
 1974 008c 01       		.uleb128 0x1
 1975 008d 01       		.byte	0x1
 1976 008e 49       		.uleb128 0x49
 1977 008f 13       		.uleb128 0x13
 1978 0090 01       		.uleb128 0x1
 1979 0091 13       		.uleb128 0x13
 1980 0092 00       		.byte	0
 1981 0093 00       		.byte	0
 1982 0094 0B       		.uleb128 0xb
 1983 0095 21       		.uleb128 0x21
 1984 0096 00       		.byte	0
 1985 0097 49       		.uleb128 0x49
 1986 0098 13       		.uleb128 0x13
 1987 0099 2F       		.uleb128 0x2f
 1988 009a 0B       		.uleb128 0xb
 1989 009b 00       		.byte	0
 1990 009c 00       		.byte	0
 1991 009d 0C       		.uleb128 0xc
 1992 009e 26       		.uleb128 0x26
 1993 009f 00       		.byte	0
 1994 00a0 49       		.uleb128 0x49
 1995 00a1 13       		.uleb128 0x13
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 51


 1996 00a2 00       		.byte	0
 1997 00a3 00       		.byte	0
 1998 00a4 0D       		.uleb128 0xd
 1999 00a5 2E       		.uleb128 0x2e
 2000 00a6 00       		.byte	0
 2001 00a7 3F       		.uleb128 0x3f
 2002 00a8 19       		.uleb128 0x19
 2003 00a9 03       		.uleb128 0x3
 2004 00aa 0E       		.uleb128 0xe
 2005 00ab 3A       		.uleb128 0x3a
 2006 00ac 0B       		.uleb128 0xb
 2007 00ad 3B       		.uleb128 0x3b
 2008 00ae 05       		.uleb128 0x5
 2009 00af 27       		.uleb128 0x27
 2010 00b0 19       		.uleb128 0x19
 2011 00b1 11       		.uleb128 0x11
 2012 00b2 01       		.uleb128 0x1
 2013 00b3 12       		.uleb128 0x12
 2014 00b4 06       		.uleb128 0x6
 2015 00b5 40       		.uleb128 0x40
 2016 00b6 18       		.uleb128 0x18
 2017 00b7 9642     		.uleb128 0x2116
 2018 00b9 19       		.uleb128 0x19
 2019 00ba 00       		.byte	0
 2020 00bb 00       		.byte	0
 2021 00bc 0E       		.uleb128 0xe
 2022 00bd 2E       		.uleb128 0x2e
 2023 00be 00       		.byte	0
 2024 00bf 3F       		.uleb128 0x3f
 2025 00c0 19       		.uleb128 0x19
 2026 00c1 03       		.uleb128 0x3
 2027 00c2 0E       		.uleb128 0xe
 2028 00c3 3A       		.uleb128 0x3a
 2029 00c4 0B       		.uleb128 0xb
 2030 00c5 3B       		.uleb128 0x3b
 2031 00c6 05       		.uleb128 0x5
 2032 00c7 27       		.uleb128 0x27
 2033 00c8 19       		.uleb128 0x19
 2034 00c9 11       		.uleb128 0x11
 2035 00ca 01       		.uleb128 0x1
 2036 00cb 12       		.uleb128 0x12
 2037 00cc 06       		.uleb128 0x6
 2038 00cd 40       		.uleb128 0x40
 2039 00ce 18       		.uleb128 0x18
 2040 00cf 9742     		.uleb128 0x2117
 2041 00d1 19       		.uleb128 0x19
 2042 00d2 00       		.byte	0
 2043 00d3 00       		.byte	0
 2044 00d4 0F       		.uleb128 0xf
 2045 00d5 2E       		.uleb128 0x2e
 2046 00d6 01       		.byte	0x1
 2047 00d7 3F       		.uleb128 0x3f
 2048 00d8 19       		.uleb128 0x19
 2049 00d9 03       		.uleb128 0x3
 2050 00da 0E       		.uleb128 0xe
 2051 00db 3A       		.uleb128 0x3a
 2052 00dc 0B       		.uleb128 0xb
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 52


 2053 00dd 3B       		.uleb128 0x3b
 2054 00de 05       		.uleb128 0x5
 2055 00df 27       		.uleb128 0x27
 2056 00e0 19       		.uleb128 0x19
 2057 00e1 49       		.uleb128 0x49
 2058 00e2 13       		.uleb128 0x13
 2059 00e3 11       		.uleb128 0x11
 2060 00e4 01       		.uleb128 0x1
 2061 00e5 12       		.uleb128 0x12
 2062 00e6 06       		.uleb128 0x6
 2063 00e7 40       		.uleb128 0x40
 2064 00e8 18       		.uleb128 0x18
 2065 00e9 9742     		.uleb128 0x2117
 2066 00eb 19       		.uleb128 0x19
 2067 00ec 01       		.uleb128 0x1
 2068 00ed 13       		.uleb128 0x13
 2069 00ee 00       		.byte	0
 2070 00ef 00       		.byte	0
 2071 00f0 10       		.uleb128 0x10
 2072 00f1 05       		.uleb128 0x5
 2073 00f2 00       		.byte	0
 2074 00f3 03       		.uleb128 0x3
 2075 00f4 0E       		.uleb128 0xe
 2076 00f5 3A       		.uleb128 0x3a
 2077 00f6 0B       		.uleb128 0xb
 2078 00f7 3B       		.uleb128 0x3b
 2079 00f8 05       		.uleb128 0x5
 2080 00f9 49       		.uleb128 0x49
 2081 00fa 13       		.uleb128 0x13
 2082 00fb 02       		.uleb128 0x2
 2083 00fc 18       		.uleb128 0x18
 2084 00fd 00       		.byte	0
 2085 00fe 00       		.byte	0
 2086 00ff 11       		.uleb128 0x11
 2087 0100 34       		.uleb128 0x34
 2088 0101 00       		.byte	0
 2089 0102 03       		.uleb128 0x3
 2090 0103 0E       		.uleb128 0xe
 2091 0104 3A       		.uleb128 0x3a
 2092 0105 0B       		.uleb128 0xb
 2093 0106 3B       		.uleb128 0x3b
 2094 0107 05       		.uleb128 0x5
 2095 0108 49       		.uleb128 0x49
 2096 0109 13       		.uleb128 0x13
 2097 010a 02       		.uleb128 0x2
 2098 010b 18       		.uleb128 0x18
 2099 010c 00       		.byte	0
 2100 010d 00       		.byte	0
 2101 010e 12       		.uleb128 0x12
 2102 010f 2E       		.uleb128 0x2e
 2103 0110 01       		.byte	0x1
 2104 0111 3F       		.uleb128 0x3f
 2105 0112 19       		.uleb128 0x19
 2106 0113 03       		.uleb128 0x3
 2107 0114 0E       		.uleb128 0xe
 2108 0115 3A       		.uleb128 0x3a
 2109 0116 0B       		.uleb128 0xb
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 53


 2110 0117 3B       		.uleb128 0x3b
 2111 0118 05       		.uleb128 0x5
 2112 0119 27       		.uleb128 0x27
 2113 011a 19       		.uleb128 0x19
 2114 011b 49       		.uleb128 0x49
 2115 011c 13       		.uleb128 0x13
 2116 011d 11       		.uleb128 0x11
 2117 011e 01       		.uleb128 0x1
 2118 011f 12       		.uleb128 0x12
 2119 0120 06       		.uleb128 0x6
 2120 0121 40       		.uleb128 0x40
 2121 0122 18       		.uleb128 0x18
 2122 0123 9642     		.uleb128 0x2116
 2123 0125 19       		.uleb128 0x19
 2124 0126 01       		.uleb128 0x1
 2125 0127 13       		.uleb128 0x13
 2126 0128 00       		.byte	0
 2127 0129 00       		.byte	0
 2128 012a 13       		.uleb128 0x13
 2129 012b 2E       		.uleb128 0x2e
 2130 012c 01       		.byte	0x1
 2131 012d 3F       		.uleb128 0x3f
 2132 012e 19       		.uleb128 0x19
 2133 012f 03       		.uleb128 0x3
 2134 0130 0E       		.uleb128 0xe
 2135 0131 3A       		.uleb128 0x3a
 2136 0132 0B       		.uleb128 0xb
 2137 0133 3B       		.uleb128 0x3b
 2138 0134 05       		.uleb128 0x5
 2139 0135 27       		.uleb128 0x27
 2140 0136 19       		.uleb128 0x19
 2141 0137 11       		.uleb128 0x11
 2142 0138 01       		.uleb128 0x1
 2143 0139 12       		.uleb128 0x12
 2144 013a 06       		.uleb128 0x6
 2145 013b 40       		.uleb128 0x40
 2146 013c 18       		.uleb128 0x18
 2147 013d 9742     		.uleb128 0x2117
 2148 013f 19       		.uleb128 0x19
 2149 0140 01       		.uleb128 0x1
 2150 0141 13       		.uleb128 0x13
 2151 0142 00       		.byte	0
 2152 0143 00       		.byte	0
 2153 0144 14       		.uleb128 0x14
 2154 0145 2E       		.uleb128 0x2e
 2155 0146 01       		.byte	0x1
 2156 0147 3F       		.uleb128 0x3f
 2157 0148 19       		.uleb128 0x19
 2158 0149 03       		.uleb128 0x3
 2159 014a 0E       		.uleb128 0xe
 2160 014b 3A       		.uleb128 0x3a
 2161 014c 0B       		.uleb128 0xb
 2162 014d 3B       		.uleb128 0x3b
 2163 014e 05       		.uleb128 0x5
 2164 014f 27       		.uleb128 0x27
 2165 0150 19       		.uleb128 0x19
 2166 0151 11       		.uleb128 0x11
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 54


 2167 0152 01       		.uleb128 0x1
 2168 0153 12       		.uleb128 0x12
 2169 0154 06       		.uleb128 0x6
 2170 0155 40       		.uleb128 0x40
 2171 0156 18       		.uleb128 0x18
 2172 0157 9642     		.uleb128 0x2116
 2173 0159 19       		.uleb128 0x19
 2174 015a 01       		.uleb128 0x1
 2175 015b 13       		.uleb128 0x13
 2176 015c 00       		.byte	0
 2177 015d 00       		.byte	0
 2178 015e 15       		.uleb128 0x15
 2179 015f 34       		.uleb128 0x34
 2180 0160 00       		.byte	0
 2181 0161 03       		.uleb128 0x3
 2182 0162 0E       		.uleb128 0xe
 2183 0163 3A       		.uleb128 0x3a
 2184 0164 0B       		.uleb128 0xb
 2185 0165 3B       		.uleb128 0x3b
 2186 0166 0B       		.uleb128 0xb
 2187 0167 49       		.uleb128 0x49
 2188 0168 13       		.uleb128 0x13
 2189 0169 3F       		.uleb128 0x3f
 2190 016a 19       		.uleb128 0x19
 2191 016b 02       		.uleb128 0x2
 2192 016c 18       		.uleb128 0x18
 2193 016d 00       		.byte	0
 2194 016e 00       		.byte	0
 2195 016f 00       		.byte	0
 2196              		.section	.debug_aranges,"",%progbits
 2197 0000 A4000000 		.4byte	0xa4
 2198 0004 0200     		.2byte	0x2
 2199 0006 00000000 		.4byte	.Ldebug_info0
 2200 000a 04       		.byte	0x4
 2201 000b 00       		.byte	0
 2202 000c 0000     		.2byte	0
 2203 000e 0000     		.2byte	0
 2204 0010 00000000 		.4byte	.LFB0
 2205 0014 24000000 		.4byte	.LFE0-.LFB0
 2206 0018 00000000 		.4byte	.LFB1
 2207 001c 08020000 		.4byte	.LFE1-.LFB1
 2208 0020 00000000 		.4byte	.LFB2
 2209 0024 28000000 		.4byte	.LFE2-.LFB2
 2210 0028 00000000 		.4byte	.LFB3
 2211 002c 18000000 		.4byte	.LFE3-.LFB3
 2212 0030 00000000 		.4byte	.LFB4
 2213 0034 1C000000 		.4byte	.LFE4-.LFB4
 2214 0038 00000000 		.4byte	.LFB5
 2215 003c 1C000000 		.4byte	.LFE5-.LFB5
 2216 0040 00000000 		.4byte	.LFB6
 2217 0044 48000000 		.4byte	.LFE6-.LFB6
 2218 0048 00000000 		.4byte	.LFB7
 2219 004c 44000000 		.4byte	.LFE7-.LFB7
 2220 0050 00000000 		.4byte	.LFB8
 2221 0054 1C000000 		.4byte	.LFE8-.LFB8
 2222 0058 00000000 		.4byte	.LFB9
 2223 005c 30000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 55


 2224 0060 00000000 		.4byte	.LFB10
 2225 0064 2C000000 		.4byte	.LFE10-.LFB10
 2226 0068 00000000 		.4byte	.LFB11
 2227 006c 1C000000 		.4byte	.LFE11-.LFB11
 2228 0070 00000000 		.4byte	.LFB12
 2229 0074 1C000000 		.4byte	.LFE12-.LFB12
 2230 0078 00000000 		.4byte	.LFB13
 2231 007c 30000000 		.4byte	.LFE13-.LFB13
 2232 0080 00000000 		.4byte	.LFB14
 2233 0084 2C000000 		.4byte	.LFE14-.LFB14
 2234 0088 00000000 		.4byte	.LFB15
 2235 008c A4000000 		.4byte	.LFE15-.LFB15
 2236 0090 00000000 		.4byte	.LFB16
 2237 0094 98000000 		.4byte	.LFE16-.LFB16
 2238 0098 00000000 		.4byte	.LFB17
 2239 009c 80000000 		.4byte	.LFE17-.LFB17
 2240 00a0 00000000 		.4byte	0
 2241 00a4 00000000 		.4byte	0
 2242              		.section	.debug_ranges,"",%progbits
 2243              	.Ldebug_ranges0:
 2244 0000 00000000 		.4byte	.LFB0
 2245 0004 24000000 		.4byte	.LFE0
 2246 0008 00000000 		.4byte	.LFB1
 2247 000c 08020000 		.4byte	.LFE1
 2248 0010 00000000 		.4byte	.LFB2
 2249 0014 28000000 		.4byte	.LFE2
 2250 0018 00000000 		.4byte	.LFB3
 2251 001c 18000000 		.4byte	.LFE3
 2252 0020 00000000 		.4byte	.LFB4
 2253 0024 1C000000 		.4byte	.LFE4
 2254 0028 00000000 		.4byte	.LFB5
 2255 002c 1C000000 		.4byte	.LFE5
 2256 0030 00000000 		.4byte	.LFB6
 2257 0034 48000000 		.4byte	.LFE6
 2258 0038 00000000 		.4byte	.LFB7
 2259 003c 44000000 		.4byte	.LFE7
 2260 0040 00000000 		.4byte	.LFB8
 2261 0044 1C000000 		.4byte	.LFE8
 2262 0048 00000000 		.4byte	.LFB9
 2263 004c 30000000 		.4byte	.LFE9
 2264 0050 00000000 		.4byte	.LFB10
 2265 0054 2C000000 		.4byte	.LFE10
 2266 0058 00000000 		.4byte	.LFB11
 2267 005c 1C000000 		.4byte	.LFE11
 2268 0060 00000000 		.4byte	.LFB12
 2269 0064 1C000000 		.4byte	.LFE12
 2270 0068 00000000 		.4byte	.LFB13
 2271 006c 30000000 		.4byte	.LFE13
 2272 0070 00000000 		.4byte	.LFB14
 2273 0074 2C000000 		.4byte	.LFE14
 2274 0078 00000000 		.4byte	.LFB15
 2275 007c A4000000 		.4byte	.LFE15
 2276 0080 00000000 		.4byte	.LFB16
 2277 0084 98000000 		.4byte	.LFE16
 2278 0088 00000000 		.4byte	.LFB17
 2279 008c 80000000 		.4byte	.LFE17
 2280 0090 00000000 		.4byte	0
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 56


 2281 0094 00000000 		.4byte	0
 2282              		.section	.debug_line,"",%progbits
 2283              	.Ldebug_line0:
 2284 0000 83020000 		.section	.debug_str,"MS",%progbits,1
 2284      02004200 
 2284      00000201 
 2284      FB0E0D00 
 2284      01010101 
 2285              	.LASF10:
 2286 0000 75696E74 		.ascii	"uint16\000"
 2286      313600
 2287              	.LASF48:
 2288 0007 61646347 		.ascii	"adcGain\000"
 2288      61696E00 
 2289              	.LASF23:
 2290 000f 636F756E 		.ascii	"counts\000"
 2290      747300
 2291              	.LASF54:
 2292 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2292      436F756E 
 2292      7473546F 
 2292      5F566F6C 
 2292      747300
 2293              	.LASF62:
 2294 0029 443A5C55 		.ascii	"D:\\Users\\sdevasenapathy\\atoms\\AtomWorkspace\\At"
 2294      73657273 
 2294      5C736465 
 2294      76617365 
 2294      6E617061 
 2295 0057 6F6D2E63 		.ascii	"om.cydsn\000"
 2295      7964736E 
 2295      00
 2296              	.LASF36:
 2297 0060 4144435F 		.ascii	"ADC_Init\000"
 2297      496E6974 
 2297      00
 2298              	.LASF7:
 2299 0069 6C6F6E67 		.ascii	"long long unsigned int\000"
 2299      206C6F6E 
 2299      6720756E 
 2299      7369676E 
 2299      65642069 
 2300              	.LASF24:
 2301 0080 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2301      496E7075 
 2301      7473506C 
 2301      6163656D 
 2301      656E7400 
 2302              	.LASF28:
 2303 0094 4144435F 		.ascii	"ADC_StartConvert\000"
 2303      53746172 
 2303      74436F6E 
 2303      76657274 
 2303      00
 2304              	.LASF6:
 2305 00a5 6C6F6E67 		.ascii	"long long int\000"
 2305      206C6F6E 
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 57


 2305      6720696E 
 2305      7400
 2306              	.LASF0:
 2307 00b3 7369676E 		.ascii	"signed char\000"
 2307      65642063 
 2307      68617200 
 2308              	.LASF30:
 2309 00bf 73746174 		.ascii	"status\000"
 2309      757300
 2310              	.LASF13:
 2311 00c6 696E7433 		.ascii	"int32\000"
 2311      3200
 2312              	.LASF25:
 2313 00cc 4144435F 		.ascii	"ADC_Start\000"
 2313      53746172 
 2313      7400
 2314              	.LASF4:
 2315 00d6 6C6F6E67 		.ascii	"long int\000"
 2315      20696E74 
 2315      00
 2316              	.LASF52:
 2317 00df 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2317      436F756E 
 2317      7473546F 
 2317      5F75566F 
 2317      6C747300 
 2318              	.LASF59:
 2319 00f3 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2319      636F756E 
 2319      74735065 
 2319      72313056 
 2319      6F6C7400 
 2320              	.LASF9:
 2321 0107 75696E74 		.ascii	"uint8\000"
 2321      3800
 2322              	.LASF16:
 2323 010d 646F7562 		.ascii	"double\000"
 2323      6C6500
 2324              	.LASF11:
 2325 0114 75696E74 		.ascii	"uint32\000"
 2325      333200
 2326              	.LASF38:
 2327 011b 6D61736B 		.ascii	"mask\000"
 2327      00
 2328              	.LASF57:
 2329 0120 4144435F 		.ascii	"ADC_initVar\000"
 2329      696E6974 
 2329      56617200 
 2330              	.LASF33:
 2331 012c 7265744D 		.ascii	"retMode\000"
 2331      6F646500 
 2332              	.LASF43:
 2333 0134 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2333      5365744C 
 2333      696D6974 
 2333      4D61736B 
 2333      00
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 58


 2334              	.LASF8:
 2335 0145 756E7369 		.ascii	"unsigned int\000"
 2335      676E6564 
 2335      20696E74 
 2335      00
 2336              	.LASF53:
 2337 0152 75566F6C 		.ascii	"uVolts\000"
 2337      747300
 2338              	.LASF5:
 2339 0159 6C6F6E67 		.ascii	"long unsigned int\000"
 2339      20756E73 
 2339      69676E65 
 2339      6420696E 
 2339      7400
 2340              	.LASF44:
 2341 016b 4144435F 		.ascii	"ADC_SetSatMask\000"
 2341      53657453 
 2341      61744D61 
 2341      736B00
 2342              	.LASF55:
 2343 017a 766F6C74 		.ascii	"volts\000"
 2343      7300
 2344              	.LASF22:
 2345 0180 746D7052 		.ascii	"tmpRegVal\000"
 2345      65675661 
 2345      6C00
 2346              	.LASF3:
 2347 018a 73686F72 		.ascii	"short unsigned int\000"
 2347      7420756E 
 2347      7369676E 
 2347      65642069 
 2347      6E7400
 2348              	.LASF29:
 2349 019d 4144435F 		.ascii	"ADC_StopConvert\000"
 2349      53746F70 
 2349      436F6E76 
 2349      65727400 
 2350              	.LASF51:
 2351 01ad 6D566F6C 		.ascii	"mVolts\000"
 2351      747300
 2352              	.LASF19:
 2353 01b4 72656733 		.ascii	"reg32\000"
 2353      3200
 2354              	.LASF14:
 2355 01ba 666C6F61 		.ascii	"float32\000"
 2355      74333200 
 2356              	.LASF20:
 2357 01c2 73697A65 		.ascii	"sizetype\000"
 2357      74797065 
 2357      00
 2358              	.LASF40:
 2359 01cb 6C6F774C 		.ascii	"lowLimit\000"
 2359      696D6974 
 2359      00
 2360              	.LASF41:
 2361 01d4 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2361      53657448 
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 59


 2361      6967684C 
 2361      696D6974 
 2361      00
 2362              	.LASF31:
 2363 01e5 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2363      4973456E 
 2363      64436F6E 
 2363      76657273 
 2363      696F6E00 
 2364              	.LASF17:
 2365 01f9 696E7436 		.ascii	"int64\000"
 2365      3400
 2366              	.LASF37:
 2367 01ff 4144435F 		.ascii	"ADC_SetChanMask\000"
 2367      53657443 
 2367      68616E4D 
 2367      61736B00 
 2368              	.LASF47:
 2369 020f 4144435F 		.ascii	"ADC_SetGain\000"
 2369      53657447 
 2369      61696E00 
 2370              	.LASF15:
 2371 021b 666C6F61 		.ascii	"float\000"
 2371      7400
 2372              	.LASF60:
 2373 0221 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2373      4320342E 
 2373      382E3420 
 2373      32303134 
 2373      30353236 
 2374 0254 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2374      20726576 
 2374      6973696F 
 2374      6E203231 
 2374      31333538 
 2375 0287 30202D66 		.ascii	"0 -ffunction-sections\000"
 2375      66756E63 
 2375      74696F6E 
 2375      2D736563 
 2375      74696F6E 
 2376              	.LASF42:
 2377 029d 68696768 		.ascii	"highLimit\000"
 2377      4C696D69 
 2377      7400
 2378              	.LASF49:
 2379 02a7 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2379      436F756E 
 2379      7473546F 
 2379      5F6D566F 
 2379      6C747300 
 2380              	.LASF39:
 2381 02bb 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2381      5365744C 
 2381      6F774C69 
 2381      6D697400 
 2382              	.LASF61:
 2383 02cb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 60


 2383      6E657261 
 2383      7465645F 
 2383      536F7572 
 2383      63655C50 
 2384              	.LASF1:
 2385 02ea 756E7369 		.ascii	"unsigned char\000"
 2385      676E6564 
 2385      20636861 
 2385      7200
 2386              	.LASF58:
 2387 02f8 4144435F 		.ascii	"ADC_offset\000"
 2387      6F666673 
 2387      657400
 2388              	.LASF2:
 2389 0303 73686F72 		.ascii	"short int\000"
 2389      7420696E 
 2389      7400
 2390              	.LASF27:
 2391 030d 4144435F 		.ascii	"ADC_Stop\000"
 2391      53746F70 
 2391      00
 2392              	.LASF21:
 2393 0316 63684E75 		.ascii	"chNum\000"
 2393      6D00
 2394              	.LASF34:
 2395 031c 6368616E 		.ascii	"chan\000"
 2395      00
 2396              	.LASF18:
 2397 0321 63686172 		.ascii	"char\000"
 2397      00
 2398              	.LASF56:
 2399 0326 4144435F 		.ascii	"ADC_channelsConfig\000"
 2399      6368616E 
 2399      6E656C73 
 2399      436F6E66 
 2399      696700
 2400              	.LASF46:
 2401 0339 6F666673 		.ascii	"offset\000"
 2401      657400
 2402              	.LASF50:
 2403 0340 61646343 		.ascii	"adcCounts\000"
 2403      6F756E74 
 2403      7300
 2404              	.LASF26:
 2405 034a 4144435F 		.ascii	"ADC_Enable\000"
 2405      456E6162 
 2405      6C6500
 2406              	.LASF12:
 2407 0355 696E7431 		.ascii	"int16\000"
 2407      3600
 2408              	.LASF45:
 2409 035b 4144435F 		.ascii	"ADC_SetOffset\000"
 2409      5365744F 
 2409      66667365 
 2409      7400
 2410              	.LASF35:
 2411 0369 72657375 		.ascii	"result\000"
ARM GAS  C:\Users\SDEVAS~1\AppData\Local\Temp\ccRao6pW.s 			page 61


 2411      6C7400
 2412              	.LASF32:
 2413 0370 4144435F 		.ascii	"ADC_GetResult16\000"
 2413      47657452 
 2413      6573756C 
 2413      74313600 
 2414              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
